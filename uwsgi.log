*** Starting uWSGI 2.0.15 (64bit) on [Thu Jul 26 23:49:56 2018] ***
compiled with version: 4.4.7 20120313 (Red Hat 4.4.7-18) on 05 July 2017 12:16:15
os: Linux-2.6.32-042stab127.2 #1 SMP Thu Jan 4 16:41:44 MSK 2018
nodename: localhost.localdomain
machine: x86_64
clock source: unix
pcre jit disabled
detected number of CPU cores: 1
current working directory: /usr/Even/projects/blogproject
writing pidfile to uwsgi.pid
detected binary path: /usr/Even/.pyenv/versions/3.6.1/bin/uwsgi
chdir() to /usr/Even/projects/blogproject
your processes number limit is 1024
your memory page size is 4096 bytes
detected max file descriptor number: 1024
lock engine: pthread robust mutexes
thunder lock: disabled (you can enable it with --thunder-lock)
uwsgi socket 0 bound to TCP address 45.62.126.57:8080 fd 3
Python version: 3.6.1 (default, Apr 14 2017, 22:28:18)  [GCC 4.4.7 20120313 (Red Hat 4.4.7-17)]
Python main interpreter initialized at 0xc13ff0
python threads support enabled
your server socket listen backlog is limited to 100 connections
your mercy for graceful operations on workers is 60 seconds
mapped 415360 bytes (405 KB) for 8 cores
*** Operational MODE: preforking+threaded ***
Traceback (most recent call last):
  File "blogproject/wsgi.py", line 16, in <module>
    application = get_wsgi_application()
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/site-packages/django/core/wsgi.py", line 14, in get_wsgi_application
    django.setup()
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/site-packages/django/__init__.py", line 18, in setup
    apps.populate(settings.INSTALLED_APPS)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/site-packages/django/apps/registry.py", line 85, in populate
    app_config = AppConfig.create(entry)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/site-packages/django/apps/config.py", line 86, in create
    module = import_module(entry)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 978, in _gcd_import
  File "<frozen importlib._bootstrap>", line 961, in _find_and_load
  File "<frozen importlib._bootstrap>", line 948, in _find_and_load_unlocked
ModuleNotFoundError: No module named 'haystack'
unable to load app 0 (mountpoint='') (callable not found or import error)
*** no app loaded. going in full dynamic mode ***
*** uWSGI is running in multiple interpreter mode ***
spawned uWSGI master process (pid: 20212)
spawned uWSGI worker 1 (pid: 20234, cores: 2)
spawned uWSGI worker 2 (pid: 20235, cores: 2)
spawned uWSGI worker 3 (pid: 20236, cores: 2)
spawned uWSGI worker 4 (pid: 20237, cores: 2)
--- no python application found, check your startup logs for errors ---
[pid: 20235|app: -1|req: -1/1] 27.38.172.5 () {44 vars in 821 bytes} [Thu Jul 26 23:50:10 2018] GET / => generated 21 bytes in 0 msecs (HTTP/1.1 500) 2 headers in 83 bytes (0 switches on core 0)
Thu Jul 26 23:50:48 2018 - uWSGI worker 1 screams: UAAAAAAH my master disconnected: i will kill myself !!!
Thu Jul 26 23:50:48 2018 - uWSGI worker 2 screams: UAAAAAAH my master disconnected: i will kill myself !!!
Thu Jul 26 23:50:48 2018 - uWSGI worker 3 screams: UAAAAAAH my master disconnected: i will kill myself !!!
Thu Jul 26 23:50:48 2018 - uWSGI worker 4 screams: UAAAAAAH my master disconnected: i will kill myself !!!
Thu Jul 26 23:50:48 2018 - uWSGI worker 2 screams: UAAAAAAH my master disconnected: i will kill myself !!!
Thu Jul 26 23:50:48 2018 - uWSGI worker 4 screams: UAAAAAAH my master disconnected: i will kill myself !!!
Thu Jul 26 23:50:48 2018 - uWSGI worker 3 screams: UAAAAAAH my master disconnected: i will kill myself !!!
Thu Jul 26 23:50:48 2018 - uWSGI worker 1 screams: UAAAAAAH my master disconnected: i will kill myself !!!
*** Starting uWSGI 2.0.17 (64bit) on [Thu Jul 26 23:50:58 2018] ***
compiled with version: 4.8.2 20131212 (Red Hat 4.8.2-8) on 09 April 2018 06:14:45
os: Linux-2.6.32-042stab127.2 #1 SMP Thu Jan 4 16:41:44 MSK 2018
nodename: localhost.localdomain
machine: x86_64
clock source: unix
pcre jit disabled
detected number of CPU cores: 1
current working directory: /usr/Even/projects/blogproject
writing pidfile to uwsgi.pid
detected binary path: /usr/Even/.virtualenvs/django/bin/uwsgi
chdir() to /usr/Even/projects/blogproject
your processes number limit is 1024
your memory page size is 4096 bytes
detected max file descriptor number: 1024
lock engine: pthread robust mutexes
thunder lock: disabled (you can enable it with --thunder-lock)
uwsgi socket 0 bound to TCP address 45.62.126.57:8080 fd 3
Python version: 3.6.1 (default, Apr 14 2017, 22:28:18)  [GCC 4.4.7 20120313 (Red Hat 4.4.7-17)]
Python main interpreter initialized at 0x16542a0
python threads support enabled
your server socket listen backlog is limited to 100 connections
your mercy for graceful operations on workers is 60 seconds
mapped 416880 bytes (407 KB) for 8 cores
*** Operational MODE: preforking+threaded ***
WSGI app 0 (mountpoint='') ready in 1 seconds on interpreter 0x16542a0 pid: 20418 (default app)
*** uWSGI is running in multiple interpreter mode ***
spawned uWSGI master process (pid: 20418)
spawned uWSGI worker 1 (pid: 20440, cores: 2)
spawned uWSGI worker 2 (pid: 20441, cores: 2)
spawned uWSGI worker 3 (pid: 20442, cores: 2)
spawned uWSGI worker 4 (pid: 20443, cores: 2)
[pid: 20440|app: 0|req: 1/1] 27.38.172.5 () {46 vars in 852 bytes} [Thu Jul 26 23:51:01 2018] GET / => generated 8588 bytes in 1224 msecs (HTTP/1.1 200) 3 headers in 110 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20440|app: 0|req: 2/2] 198.35.46.201 () {28 vars in 312 bytes} [Fri Jul 27 00:40:05 2018] GET / => generated 8588 bytes in 24 msecs (HTTP/1.0 200) 3 headers in 110 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20441|app: 0|req: 1/3] 198.35.46.201 () {28 vars in 312 bytes} [Fri Jul 27 01:40:07 2018] GET / => generated 8588 bytes in 919 msecs (HTTP/1.0 200) 3 headers in 110 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20441|app: 0|req: 2/4] 198.35.46.201 () {28 vars in 312 bytes} [Fri Jul 27 02:40:07 2018] GET / => generated 8588 bytes in 29 msecs (HTTP/1.0 200) 3 headers in 110 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20441|app: 0|req: 3/5] 198.35.46.201 () {28 vars in 312 bytes} [Fri Jul 27 03:40:09 2018] GET / => generated 8588 bytes in 23 msecs (HTTP/1.0 200) 3 headers in 110 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20441|app: 0|req: 4/6] 198.35.46.201 () {28 vars in 312 bytes} [Fri Jul 27 04:40:09 2018] GET / => generated 8588 bytes in 29 msecs (HTTP/1.0 200) 3 headers in 110 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20440|app: 0|req: 3/7] 198.35.46.201 () {28 vars in 312 bytes} [Fri Jul 27 05:40:06 2018] GET / => generated 8588 bytes in 59 msecs (HTTP/1.0 200) 3 headers in 110 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20441|app: 0|req: 5/8] 198.35.46.201 () {28 vars in 312 bytes} [Fri Jul 27 06:40:05 2018] GET / => generated 8588 bytes in 29 msecs (HTTP/1.0 200) 3 headers in 110 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20441|app: 0|req: 6/9] 198.35.46.201 () {28 vars in 312 bytes} [Fri Jul 27 07:40:09 2018] GET / => generated 8588 bytes in 19 msecs (HTTP/1.0 200) 3 headers in 110 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
[pid: 20442|app: 0|req: 1/10] 217.31.190.91 () {26 vars in 273 bytes} [Fri Jul 27 08:19:35 2018] GET / => generated 8588 bytes in 987 msecs (HTTP/1.0 200) 3 headers in 110 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20441|app: 0|req: 7/11] 198.35.46.201 () {28 vars in 312 bytes} [Fri Jul 27 08:40:09 2018] GET / => generated 8588 bytes in 23 msecs (HTTP/1.0 200) 3 headers in 110 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 7937 (max 4096)...skip
Fri Jul 27 08:50:14 2018 - uWSGI worker 1 screams: UAAAAAAH my master disconnected: i will kill myself !!!
Fri Jul 27 08:50:14 2018 - uWSGI worker 2 screams: UAAAAAAH my master disconnected: i will kill myself !!!
Fri Jul 27 08:50:14 2018 - uWSGI worker 3 screams: UAAAAAAH my master disconnected: i will kill myself !!!
Fri Jul 27 08:50:14 2018 - uWSGI worker 4 screams: UAAAAAAH my master disconnected: i will kill myself !!!
Fri Jul 27 08:50:14 2018 - uWSGI worker 1 screams: UAAAAAAH my master disconnected: i will kill myself !!!
Fri Jul 27 08:50:14 2018 - uWSGI worker 2 screams: UAAAAAAH my master disconnected: i will kill myself !!!
Fri Jul 27 08:50:14 2018 - uWSGI worker 3 screams: UAAAAAAH my master disconnected: i will kill myself !!!
Fri Jul 27 08:50:14 2018 - uWSGI worker 4 screams: UAAAAAAH my master disconnected: i will kill myself !!!
*** Starting uWSGI 2.0.15 (64bit) on [Fri Jul 27 08:50:48 2018] ***
compiled with version: 4.4.7 20120313 (Red Hat 4.4.7-18) on 05 July 2017 12:16:15
os: Linux-2.6.32-042stab127.2 #1 SMP Thu Jan 4 16:41:44 MSK 2018
nodename: localhost.localdomain
machine: x86_64
clock source: unix
pcre jit disabled
detected number of CPU cores: 1
current working directory: /usr/Even/projects/blogproject
writing pidfile to uwsgi.pid
detected binary path: /usr/Even/.pyenv/versions/3.6.1/bin/uwsgi
chdir() to /usr/Even/projects/blogproject
your processes number limit is 1024
your memory page size is 4096 bytes
detected max file descriptor number: 1024
lock engine: pthread robust mutexes
thunder lock: disabled (you can enable it with --thunder-lock)
uwsgi socket 0 bound to TCP address 45.62.126.57:8080 fd 3
Python version: 3.6.1 (default, Apr 14 2017, 22:28:18)  [GCC 4.4.7 20120313 (Red Hat 4.4.7-17)]
Python main interpreter initialized at 0x11d9ff0
python threads support enabled
your server socket listen backlog is limited to 100 connections
your mercy for graceful operations on workers is 60 seconds
mapped 415360 bytes (405 KB) for 8 cores
*** Operational MODE: preforking+threaded ***
Traceback (most recent call last):
  File "blogproject/wsgi.py", line 16, in <module>
    application = get_wsgi_application()
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/site-packages/django/core/wsgi.py", line 14, in get_wsgi_application
    django.setup()
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/site-packages/django/__init__.py", line 18, in setup
    apps.populate(settings.INSTALLED_APPS)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/site-packages/django/apps/registry.py", line 85, in populate
    app_config = AppConfig.create(entry)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/site-packages/django/apps/config.py", line 86, in create
    module = import_module(entry)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 978, in _gcd_import
  File "<frozen importlib._bootstrap>", line 961, in _find_and_load
  File "<frozen importlib._bootstrap>", line 948, in _find_and_load_unlocked
ModuleNotFoundError: No module named 'haystack'
unable to load app 0 (mountpoint='') (callable not found or import error)
*** no app loaded. going in full dynamic mode ***
*** uWSGI is running in multiple interpreter mode ***
spawned uWSGI master process (pid: 24416)
spawned uWSGI worker 1 (pid: 24438, cores: 2)
spawned uWSGI worker 2 (pid: 24439, cores: 2)
spawned uWSGI worker 3 (pid: 24440, cores: 2)
spawned uWSGI worker 4 (pid: 24441, cores: 2)
--- no python application found, check your startup logs for errors ---
[pid: 24441|app: -1|req: -1/1] 113.92.95.76 () {46 vars in 854 bytes} [Fri Jul 27 08:50:52 2018] GET / => generated 21 bytes in 0 msecs (HTTP/1.1 500) 2 headers in 83 bytes (0 switches on core 0)
--- no python application found, check your startup logs for errors ---
[pid: 24441|app: -1|req: -1/2] 113.92.95.76 () {46 vars in 854 bytes} [Fri Jul 27 08:50:54 2018] GET / => generated 21 bytes in 0 msecs (HTTP/1.1 500) 2 headers in 83 bytes (0 switches on core 0)
Fri Jul 27 08:51:44 2018 - uWSGI worker 1 screams: UAAAAAAH my master disconnected: i will kill myself !!!
Fri Jul 27 08:51:44 2018 - uWSGI worker 2 screams: UAAAAAAH my master disconnected: i will kill myself !!!
Fri Jul 27 08:51:44 2018 - uWSGI worker 3 screams: UAAAAAAH my master disconnected: i will kill myself !!!
Fri Jul 27 08:51:44 2018 - uWSGI worker 4 screams: UAAAAAAH my master disconnected: i will kill myself !!!
Fri Jul 27 08:51:44 2018 - uWSGI worker 4 screams: UAAAAAAH my master disconnected: i will kill myself !!!
Fri Jul 27 08:51:44 2018 - uWSGI worker 3 screams: UAAAAAAH my master disconnected: i will kill myself !!!
Fri Jul 27 08:51:44 2018 - uWSGI worker 2 screams: UAAAAAAH my master disconnected: i will kill myself !!!
Fri Jul 27 08:51:44 2018 - uWSGI worker 1 screams: UAAAAAAH my master disconnected: i will kill myself !!!
*** Starting uWSGI 2.0.17 (64bit) on [Fri Jul 27 08:51:53 2018] ***
compiled with version: 4.8.2 20131212 (Red Hat 4.8.2-8) on 09 April 2018 06:14:45
os: Linux-2.6.32-042stab127.2 #1 SMP Thu Jan 4 16:41:44 MSK 2018
nodename: localhost.localdomain
machine: x86_64
clock source: unix
pcre jit disabled
detected number of CPU cores: 1
current working directory: /usr/Even/projects/blogproject
writing pidfile to uwsgi.pid
detected binary path: /usr/Even/.virtualenvs/django/bin/uwsgi
chdir() to /usr/Even/projects/blogproject
your processes number limit is 1024
your memory page size is 4096 bytes
detected max file descriptor number: 1024
lock engine: pthread robust mutexes
thunder lock: disabled (you can enable it with --thunder-lock)
uwsgi socket 0 bound to TCP address 45.62.126.57:8080 fd 3
Python version: 3.6.1 (default, Apr 14 2017, 22:28:18)  [GCC 4.4.7 20120313 (Red Hat 4.4.7-17)]
Python main interpreter initialized at 0x130c290
python threads support enabled
your server socket listen backlog is limited to 100 connections
your mercy for graceful operations on workers is 60 seconds
mapped 416880 bytes (407 KB) for 8 cores
*** Operational MODE: preforking+threaded ***
WSGI app 0 (mountpoint='') ready in 1 seconds on interpreter 0x130c290 pid: 24622 (default app)
*** uWSGI is running in multiple interpreter mode ***
spawned uWSGI master process (pid: 24622)
spawned uWSGI worker 1 (pid: 24644, cores: 2)
spawned uWSGI worker 2 (pid: 24645, cores: 2)
spawned uWSGI worker 3 (pid: 24646, cores: 2)
spawned uWSGI worker 4 (pid: 24647, cores: 2)
[pid: 24647|app: 0|req: 1/1] 113.92.95.76 () {46 vars in 854 bytes} [Fri Jul 27 08:51:56 2018] GET / => generated 8588 bytes in 1149 msecs (HTTP/1.1 200) 3 headers in 110 bytes (1 switches on core 0)
# 号
# 号
afadfjl

```python
def say_hello():
    pass
```


adf
adfdfadfdsafaf

adfad

adf
adf
adf
adfadf
adfadfadfad


adfadf
a
# hello
------------------------------------------------------------------------------------------------------------------------
<h1 id="号">号</h1>
<h1 id="号_1">号</h1>
<p>afadfjl</p>
<div class="codehilite"><pre><span></span><span class="k">def</span> <span class="nf">say_hello</span><span class="p">():</span>
    <span class="k">pass</span>
</pre></div>


<p>adf
adfdfadfdsafaf</p>
<p>adfad</p>
<p>adf
adf
adf
adfadf
adfadfadfad</p>
<p>adfadf
a</p>
<h1 id="hello">hello</h1>
<div class="toc">
<ul>
<li><a href="#号">号</a></li>
<li><a href="#号_1">号</a></li>
<li><a href="#hello">hello</a></li>
</ul>
</div>

Building prefix dict from the default dictionary ...
Loading model from cache /tmp/jieba.cache
Loading model cost 0.873 seconds.
Prefix dict has been built succesfully.
[pid: 24644|app: 0|req: 1/2] 113.92.95.76 () {46 vars in 881 bytes} [Fri Jul 27 08:52:00 2018] GET /post/2/ => generated 10084 bytes in 2209 msecs (HTTP/1.1 200) 5 headers in 279 bytes (1 switches on core 0)
[pid: 24644|app: 0|req: 2/3] 113.92.95.76 () {46 vars in 854 bytes} [Fri Jul 27 08:52:18 2018] GET / => generated 8588 bytes in 25 msecs (HTTP/1.1 200) 3 headers in 110 bytes (1 switches on core 1)
[pid: 24644|app: 0|req: 3/4] 113.92.95.76 () {46 vars in 854 bytes} [Fri Jul 27 08:52:29 2018] GET / => generated 8588 bytes in 27 msecs (HTTP/1.1 200) 3 headers in 110 bytes (1 switches on core 0)
[pid: 24644|app: 0|req: 4/5] 113.92.95.76 () {46 vars in 898 bytes} [Fri Jul 27 08:52:45 2018] GET /search/?q=python => generated 6548 bytes in 46 msecs (HTTP/1.1 200) 3 headers in 110 bytes (1 switches on core 1)
[pid: 24644|app: 0|req: 5/6] 113.92.95.76 () {46 vars in 910 bytes} [Fri Jul 27 08:52:49 2018] GET /search/?q=pass => generated 9956 bytes in 27 msecs (HTTP/1.1 200) 3 headers in 110 bytes (1 switches on core 0)
[pid: 24644|app: 0|req: 6/7] 113.92.95.76 () {46 vars in 942 bytes} [Fri Jul 27 08:53:03 2018] GET /admin/blog/post/2/change/ => generated 10553 bytes in 80 msecs (HTTP/1.1 200) 7 headers in 382 bytes (1 switches on core 1)
[pid: 24644|app: 0|req: 7/8] 113.92.95.76 () {44 vars in 801 bytes} [Fri Jul 27 08:53:03 2018] GET /admin/jsi18n/ => generated 7682 bytes in 5 msecs (HTTP/1.1 200) 4 headers in 115 bytes (1 switches on core 0)
[pid: 24647|app: 0|req: 2/9] 113.92.95.76 () {46 vars in 914 bytes} [Fri Jul 27 08:53:07 2018] GET /admin/blog/ => generated 2957 bytes in 30 msecs (HTTP/1.1 200) 6 headers in 227 bytes (1 switches on core 1)
[pid: 24644|app: 0|req: 8/10] 113.92.95.76 () {46 vars in 918 bytes} [Fri Jul 27 08:53:11 2018] GET /admin/blog/category/ => generated 4193 bytes in 33 msecs (HTTP/1.1 200) 7 headers in 381 bytes (1 switches on core 1)
[pid: 24644|app: 0|req: 9/11] 113.92.95.76 () {44 vars in 796 bytes} [Fri Jul 27 08:53:11 2018] GET /admin/jsi18n/ => generated 7682 bytes in 6 msecs (HTTP/1.1 200) 4 headers in 115 bytes (1 switches on core 0)
[pid: 24645|app: 0|req: 1/12] 113.92.95.76 () {46 vars in 935 bytes} [Fri Jul 27 08:53:13 2018] GET /admin/blog/category/add/ => generated 3837 bytes in 1002 msecs (HTTP/1.1 200) 7 headers in 381 bytes (1 switches on core 0)
[pid: 24644|app: 0|req: 10/13] 113.92.95.76 () {44 vars in 800 bytes} [Fri Jul 27 08:53:15 2018] GET /admin/jsi18n/ => generated 7682 bytes in 8 msecs (HTTP/1.1 200) 4 headers in 115 bytes (1 switches on core 1)
[pid: 24646|app: 0|req: 1/14] 113.92.95.76 () {54 vars in 1199 bytes} [Fri Jul 27 08:53:23 2018] POST /admin/blog/category/add/ => generated 0 bytes in 973 msecs (HTTP/1.1 302) 8 headers in 606 bytes (1 switches on core 0)
[pid: 24645|app: 0|req: 2/15] 113.92.95.76 () {48 vars in 1281 bytes} [Fri Jul 27 08:53:24 2018] GET /admin/blog/category/add/ => generated 4057 bytes in 29 msecs (HTTP/1.1 200) 8 headers in 465 bytes (1 switches on core 1)
[pid: 24646|app: 0|req: 2/16] 113.92.95.76 () {44 vars in 800 bytes} [Fri Jul 27 08:53:24 2018] GET /admin/jsi18n/ => generated 7682 bytes in 12 msecs (HTTP/1.1 200) 4 headers in 115 bytes (1 switches on core 1)
[pid: 24647|app: 0|req: 3/17] 113.92.95.76 () {54 vars in 1199 bytes} [Fri Jul 27 08:53:29 2018] POST /admin/blog/category/add/ => generated 0 bytes in 18 msecs (HTTP/1.1 302) 8 headers in 493 bytes (1 switches on core 0)
[pid: 24644|app: 0|req: 11/18] 113.92.95.76 () {48 vars in 1164 bytes} [Fri Jul 27 08:53:30 2018] GET /admin/blog/category/ => generated 4802 bytes in 37 msecs (HTTP/1.1 200) 8 headers in 465 bytes (1 switches on core 0)
[pid: 24644|app: 0|req: 12/19] 113.92.95.76 () {44 vars in 796 bytes} [Fri Jul 27 08:53:30 2018] GET /admin/jsi18n/ => generated 7682 bytes in 5 msecs (HTTP/1.1 200) 4 headers in 115 bytes (1 switches on core 1)
[pid: 24647|app: 0|req: 4/20] 113.92.95.76 () {46 vars in 909 bytes} [Fri Jul 27 08:53:32 2018] GET /admin/blog/ => generated 2957 bytes in 18 msecs (HTTP/1.1 200) 6 headers in 227 bytes (1 switches on core 1)
[pid: 24645|app: 0|req: 3/21] 113.92.95.76 () {46 vars in 908 bytes} [Fri Jul 27 08:53:33 2018] GET /admin/blog/tag/ => generated 4144 bytes in 31 msecs (HTTP/1.1 200) 7 headers in 381 bytes (1 switches on core 0)
[pid: 24645|app: 0|req: 4/22] 113.92.95.76 () {44 vars in 791 bytes} [Fri Jul 27 08:53:34 2018] GET /admin/jsi18n/ => generated 7682 bytes in 5 msecs (HTTP/1.1 200) 4 headers in 115 bytes (1 switches on core 1)
[pid: 24644|app: 0|req: 13/23] 113.92.95.76 () {46 vars in 920 bytes} [Fri Jul 27 08:53:36 2018] GET /admin/blog/tag/add/ => generated 3797 bytes in 32 msecs (HTTP/1.1 200) 7 headers in 381 bytes (1 switches on core 0)
[pid: 24644|app: 0|req: 14/24] 113.92.95.76 () {44 vars in 795 bytes} [Fri Jul 27 08:53:36 2018] GET /admin/jsi18n/ => generated 7682 bytes in 4 msecs (HTTP/1.1 200) 4 headers in 115 bytes (1 switches on core 1)
[pid: 24646|app: 0|req: 3/25] 113.92.95.76 () {54 vars in 1184 bytes} [Fri Jul 27 08:53:39 2018] POST /admin/blog/tag/add/ => generated 0 bytes in 9 msecs (HTTP/1.1 302) 8 headers in 479 bytes (1 switches on core 0)
[pid: 24646|app: 0|req: 4/26] 113.92.95.76 () {48 vars in 1140 bytes} [Fri Jul 27 08:53:39 2018] GET /admin/blog/tag/ => generated 4519 bytes in 65 msecs (HTTP/1.1 200) 8 headers in 465 bytes (1 switches on core 1)
[pid: 24644|app: 0|req: 15/27] 113.92.95.76 () {44 vars in 791 bytes} [Fri Jul 27 08:53:40 2018] GET /admin/jsi18n/ => generated 7682 bytes in 8 msecs (HTTP/1.1 200) 4 headers in 115 bytes (1 switches on core 0)
[pid: 24647|app: 0|req: 5/28] 113.92.95.76 () {46 vars in 904 bytes} [Fri Jul 27 08:53:42 2018] GET /admin/blog/ => generated 2957 bytes in 19 msecs (HTTP/1.1 200) 6 headers in 227 bytes (1 switches on core 0)
[pid: 24644|app: 0|req: 16/29] 113.92.95.76 () {46 vars in 918 bytes} [Fri Jul 27 08:53:43 2018] GET /admin/blog/category/ => generated 4635 bytes in 39 msecs (HTTP/1.1 200) 7 headers in 381 bytes (1 switches on core 1)
[pid: 24644|app: 0|req: 17/30] 113.92.95.76 () {44 vars in 796 bytes} [Fri Jul 27 08:53:43 2018] GET /admin/jsi18n/ => generated 7682 bytes in 7 msecs (HTTP/1.1 200) 4 headers in 115 bytes (1 switches on core 0)
[pid: 24647|app: 0|req: 6/31] 113.92.95.76 () {46 vars in 935 bytes} [Fri Jul 27 08:53:56 2018] GET /admin/blog/category/add/ => generated 3837 bytes in 35 msecs (HTTP/1.1 200) 7 headers in 381 bytes (1 switches on core 1)
[pid: 24645|app: 0|req: 5/32] 113.92.95.76 () {44 vars in 800 bytes} [Fri Jul 27 08:53:56 2018] GET /admin/jsi18n/ => generated 7682 bytes in 6 msecs (HTTP/1.1 200) 4 headers in 115 bytes (1 switches on core 0)
[pid: 24646|app: 0|req: 5/33] 113.92.95.76 () {54 vars in 1199 bytes} [Fri Jul 27 08:54:00 2018] POST /admin/blog/category/add/ => generated 0 bytes in 10 msecs (HTTP/1.1 302) 8 headers in 494 bytes (1 switches on core 0)
[pid: 24646|app: 0|req: 6/34] 113.92.95.76 () {48 vars in 1165 bytes} [Fri Jul 27 08:54:00 2018] GET /admin/blog/category/ => generated 5024 bytes in 45 msecs (HTTP/1.1 200) 8 headers in 465 bytes (1 switches on core 1)
[pid: 24644|app: 0|req: 18/35] 113.92.95.76 () {44 vars in 796 bytes} [Fri Jul 27 08:54:01 2018] GET /admin/jsi18n/ => generated 7682 bytes in 8 msecs (HTTP/1.1 200) 4 headers in 115 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
[pid: 24645|app: 0|req: 6/36] 113.92.95.76 () {46 vars in 854 bytes} [Fri Jul 27 09:39:42 2018] GET / => generated 8588 bytes in 29 msecs (HTTP/1.1 200) 3 headers in 110 bytes (1 switches on core 1)
# 号
# 号
afadfjl

```python
def say_hello():
    pass
```


adf
adfdfadfdsafaf

adfad

adf
adf
adf
adfadf
adfadfadfad


adfadf
a
# hello
------------------------------------------------------------------------------------------------------------------------
<h1 id="号">号</h1>
<h1 id="号_1">号</h1>
<p>afadfjl</p>
<div class="codehilite"><pre><span></span><span class="k">def</span> <span class="nf">say_hello</span><span class="p">():</span>
    <span class="k">pass</span>
</pre></div>


<p>adf
adfdfadfdsafaf</p>
<p>adfad</p>
<p>adf
adf
adf
adfadf
adfadfadfad</p>
<p>adfadf
a</p>
<h1 id="hello">hello</h1>
<div class="toc">
<ul>
<li><a href="#号">号</a></li>
<li><a href="#号_1">号</a></li>
<li><a href="#hello">hello</a></li>
</ul>
</div>

[pid: 24644|app: 0|req: 19/37] 113.92.95.76 () {46 vars in 881 bytes} [Fri Jul 27 09:39:50 2018] GET /post/2/ => generated 10084 bytes in 66 msecs (HTTP/1.1 200) 5 headers in 279 bytes (1 switches on core 0)
<p>[TOC]</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">def Hello():
    pass</pre>
<p>&nbsp;</p>
------------------------------------------------------------------------------------------------------------------------
<p>[TOC]</p>

<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">def Hello():
    pass</pre>

<p>&nbsp;</p>
<div class="toc">
<ul></ul>
</div>

[pid: 24644|app: 0|req: 20/38] 113.92.95.76 () {46 vars in 881 bytes} [Fri Jul 27 09:39:58 2018] GET /post/1/ => generated 9761 bytes in 41 msecs (HTTP/1.1 200) 5 headers in 278 bytes (1 switches on core 1)
<p>[TOC]</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">def Hello():
    pass</pre>
<p>&nbsp;</p>
------------------------------------------------------------------------------------------------------------------------
<p>[TOC]</p>

<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">def Hello():
    pass</pre>

<p>&nbsp;</p>
<div class="toc">
<ul></ul>
</div>

[pid: 24644|app: 0|req: 21/39] 113.92.95.76 () {46 vars in 881 bytes} [Fri Jul 27 09:40:03 2018] GET /post/1/ => generated 9761 bytes in 40 msecs (HTTP/1.1 200) 5 headers in 278 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24645|app: 0|req: 7/40] 198.35.46.201 () {28 vars in 312 bytes} [Fri Jul 27 09:40:05 2018] GET / => generated 8588 bytes in 43 msecs (HTTP/1.0 200) 3 headers in 110 bytes (1 switches on core 0)
Building prefix dict from the default dictionary ...
Loading model from cache /tmp/jieba.cache
Loading model cost 0.960 seconds.
Prefix dict has been built succesfully.
[pid: 24645|app: 0|req: 8/41] 113.92.95.76 () {46 vars in 898 bytes} [Fri Jul 27 09:41:02 2018] GET /search/?q=python => generated 6548 bytes in 1025 msecs (HTTP/1.1 200) 3 headers in 110 bytes (1 switches on core 1)
[pid: 24644|app: 0|req: 22/42] 113.92.95.76 () {46 vars in 910 bytes} [Fri Jul 27 09:41:18 2018] GET /search/?q=pass => generated 9956 bytes in 46 msecs (HTTP/1.1 200) 3 headers in 110 bytes (1 switches on core 0)
[pid: 24644|app: 0|req: 23/43] 113.92.95.76 () {46 vars in 936 bytes} [Fri Jul 27 09:41:29 2018] GET /search/?q=%E8%BF%99%E6%98%AF => generated 8194 bytes in 27 msecs (HTTP/1.1 200) 3 headers in 110 bytes (1 switches on core 1)
[pid: 24644|app: 0|req: 24/44] 113.92.95.76 () {46 vars in 925 bytes} [Fri Jul 27 09:41:39 2018] GET /archive/2018/7/ => generated 6552 bytes in 35 msecs (HTTP/1.1 200) 3 headers in 110 bytes (1 switches on core 0)
[pid: 24645|app: 0|req: 9/45] 113.92.95.76 () {46 vars in 912 bytes} [Fri Jul 27 09:41:41 2018] GET /archive/2018/7/ => generated 6552 bytes in 18 msecs (HTTP/1.1 200) 3 headers in 110 bytes (1 switches on core 0)
[pid: 24646|app: 0|req: 7/46] 113.92.95.76 () {46 vars in 904 bytes} [Fri Jul 27 09:41:43 2018] GET /category/1/ => generated 8588 bytes in 22 msecs (HTTP/1.1 200) 3 headers in 110 bytes (1 switches on core 0)
[pid: 24644|app: 0|req: 25/47] 113.92.95.76 () {46 vars in 890 bytes} [Fri Jul 27 09:41:46 2018] GET /tag/1/ => generated 8588 bytes in 20 msecs (HTTP/1.1 200) 3 headers in 110 bytes (1 switches on core 1)
[pid: 24645|app: 0|req: 10/48] 113.92.95.76 () {46 vars in 889 bytes} [Fri Jul 27 09:41:50 2018] GET /all/rss/ => generated 1188 bytes in 10 msecs (HTTP/1.1 200) 3 headers in 120 bytes (74 switches on core 1)
[pid: 24647|app: 0|req: 7/49] 113.92.95.76 () {42 vars in 722 bytes} [Fri Jul 27 09:41:50 2018] GET /all/rss/ => generated 1188 bytes in 9 msecs (HTTP/1.1 200) 3 headers in 120 bytes (74 switches on core 0)
<p>[TOC]</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">def Hello():
    pass</pre>
<p>&nbsp;</p>
------------------------------------------------------------------------------------------------------------------------
<p>[TOC]</p>

<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">def Hello():
    pass</pre>

<p>&nbsp;</p>
<div class="toc">
<ul></ul>
</div>

Building prefix dict from the default dictionary ...
Loading model from cache /tmp/jieba.cache
Loading model cost 0.784 seconds.
Prefix dict has been built succesfully.
[pid: 24646|app: 0|req: 8/50] 113.92.95.76 () {46 vars in 887 bytes} [Fri Jul 27 09:55:20 2018] GET /post/1/ => generated 9761 bytes in 874 msecs (HTTP/1.1 200) 5 headers in 278 bytes (1 switches on core 1)
<p>[TOC]</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">def Hello():
    pass</pre>
<p>&nbsp;</p>
------------------------------------------------------------------------------------------------------------------------
<p>[TOC]</p>

<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">def Hello():
    pass</pre>

<p>&nbsp;</p>
<div class="toc">
<ul></ul>
</div>

Building prefix dict from the default dictionary ...
Loading model from cache /tmp/jieba.cache
Loading model cost 0.762 seconds.
Prefix dict has been built succesfully.
[pid: 24647|app: 0|req: 8/51] 113.92.95.76 () {46 vars in 887 bytes} [Fri Jul 27 09:55:21 2018] GET /post/1/ => generated 9761 bytes in 834 msecs (HTTP/1.1 200) 5 headers in 278 bytes (1 switches on core 1)
# 号
# 号
afadfjl

```python
def say_hello():
    pass
```


adf
adfdfadfdsafaf

adfad

adf
adf
adf
adfadf
adfadfadfad


adfadf
a
# hello
------------------------------------------------------------------------------------------------------------------------
<h1 id="号">号</h1>
<h1 id="号_1">号</h1>
<p>afadfjl</p>
<div class="codehilite"><pre><span></span><span class="k">def</span> <span class="nf">say_hello</span><span class="p">():</span>
    <span class="k">pass</span>
</pre></div>


<p>adf
adfdfadfdsafaf</p>
<p>adfad</p>
<p>adf
adf
adf
adfadf
adfadfadfad</p>
<p>adfadf
a</p>
<h1 id="hello">hello</h1>
<div class="toc">
<ul>
<li><a href="#号">号</a></li>
<li><a href="#号_1">号</a></li>
<li><a href="#hello">hello</a></li>
</ul>
</div>

[pid: 24644|app: 0|req: 26/52] 113.92.95.76 () {46 vars in 887 bytes} [Fri Jul 27 09:55:22 2018] GET /post/2/ => generated 10084 bytes in 61 msecs (HTTP/1.1 200) 5 headers in 279 bytes (1 switches on core 0)
<p>[TOC]</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">def Hello():
    pass</pre>
<p>&nbsp;</p>
------------------------------------------------------------------------------------------------------------------------
<p>[TOC]</p>

<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">def Hello():
    pass</pre>

<p>&nbsp;</p>
<div class="toc">
<ul></ul>
</div>

[pid: 24644|app: 0|req: 27/53] 113.92.95.76 () {46 vars in 887 bytes} [Fri Jul 27 09:55:26 2018] GET /post/1/ => generated 9761 bytes in 39 msecs (HTTP/1.1 200) 5 headers in 278 bytes (1 switches on core 1)
[pid: 24644|app: 0|req: 28/54] 113.92.95.76 () {46 vars in 886 bytes} [Fri Jul 27 09:55:32 2018] GET /tag/1/ => generated 8588 bytes in 21 msecs (HTTP/1.1 200) 3 headers in 110 bytes (1 switches on core 0)
[pid: 24645|app: 0|req: 11/55] 113.92.95.76 () {46 vars in 903 bytes} [Fri Jul 27 09:55:35 2018] GET /archive/2018/7/ => generated 6552 bytes in 17 msecs (HTTP/1.1 200) 3 headers in 110 bytes (1 switches on core 0)
# 号
# 号
afadfjl

```python
def say_hello():
    pass
```


adf
adfdfadfdsafaf

adfad

adf
adf
adf
adfadf
adfadfadfad


adfadf
a
# hello
------------------------------------------------------------------------------------------------------------------------
<h1 id="号">号</h1>
<h1 id="号_1">号</h1>
<p>afadfjl</p>
<div class="codehilite"><pre><span></span><span class="k">def</span> <span class="nf">say_hello</span><span class="p">():</span>
    <span class="k">pass</span>
</pre></div>


<p>adf
adfdfadfdsafaf</p>
<p>adfad</p>
<p>adf
adf
adf
adfadf
adfadfadfad</p>
<p>adfadf
a</p>
<h1 id="hello">hello</h1>
<div class="toc">
<ul>
<li><a href="#号">号</a></li>
<li><a href="#号_1">号</a></li>
<li><a href="#hello">hello</a></li>
</ul>
</div>

[pid: 24644|app: 0|req: 29/56] 113.92.95.76 () {46 vars in 896 bytes} [Fri Jul 27 09:55:37 2018] GET /post/2/ => generated 10084 bytes in 77 msecs (HTTP/1.1 200) 5 headers in 279 bytes (1 switches on core 1)
[pid: 24645|app: 0|req: 12/57] 113.92.95.76 () {46 vars in 912 bytes} [Fri Jul 27 09:55:42 2018] GET /archive/2018/7/ => generated 6552 bytes in 15 msecs (HTTP/1.1 200) 3 headers in 110 bytes (1 switches on core 1)
[pid: 24644|app: 0|req: 30/58] 113.92.95.76 () {46 vars in 912 bytes} [Fri Jul 27 09:55:44 2018] GET /archive/2018/7/ => generated 6552 bytes in 21 msecs (HTTP/1.1 200) 3 headers in 110 bytes (1 switches on core 0)
[pid: 24645|app: 0|req: 13/59] 113.92.95.76 () {46 vars in 912 bytes} [Fri Jul 27 09:55:45 2018] GET /archive/2018/7/ => generated 6552 bytes in 17 msecs (HTTP/1.1 200) 3 headers in 110 bytes (1 switches on core 0)
[pid: 24646|app: 0|req: 9/60] 113.92.95.76 () {46 vars in 912 bytes} [Fri Jul 27 09:55:45 2018] GET /archive/2018/7/ => generated 6552 bytes in 18 msecs (HTTP/1.1 200) 3 headers in 110 bytes (1 switches on core 0)
[pid: 24644|app: 0|req: 31/61] 113.92.95.76 () {46 vars in 912 bytes} [Fri Jul 27 09:55:46 2018] GET /archive/2018/7/ => generated 6552 bytes in 15 msecs (HTTP/1.1 200) 3 headers in 110 bytes (1 switches on core 1)
[pid: 24645|app: 0|req: 14/62] 113.92.95.76 () {46 vars in 904 bytes} [Fri Jul 27 09:55:47 2018] GET /category/1/ => generated 8588 bytes in 18 msecs (HTTP/1.1 200) 3 headers in 110 bytes (1 switches on core 1)
[pid: 24646|app: 0|req: 10/63] 113.92.95.76 () {46 vars in 900 bytes} [Fri Jul 27 09:55:48 2018] GET /category/1/ => generated 8588 bytes in 33 msecs (HTTP/1.1 200) 3 headers in 110 bytes (1 switches on core 1)
[pid: 24644|app: 0|req: 32/64] 113.92.95.76 () {46 vars in 890 bytes} [Fri Jul 27 09:55:51 2018] GET /tag/1/ => generated 8588 bytes in 45 msecs (HTTP/1.1 200) 3 headers in 110 bytes (1 switches on core 0)
[pid: 24644|app: 0|req: 33/65] 113.92.95.76 () {46 vars in 889 bytes} [Fri Jul 27 09:55:53 2018] GET /all/rss/ => generated 1188 bytes in 8 msecs (HTTP/1.1 200) 3 headers in 120 bytes (74 switches on core 1)
[pid: 24645|app: 0|req: 15/66] 113.92.95.76 () {42 vars in 722 bytes} [Fri Jul 27 09:55:53 2018] GET /all/rss/ => generated 1188 bytes in 5 msecs (HTTP/1.1 200) 3 headers in 120 bytes (74 switches on core 0)
[pid: 24646|app: 0|req: 11/67] 113.92.95.76 () {44 vars in 823 bytes} [Fri Jul 27 09:56:55 2018] GET / => generated 8588 bytes in 44 msecs (HTTP/1.1 200) 3 headers in 110 bytes (1 switches on core 0)
[pid: 24645|app: 0|req: 16/68] 113.92.95.76 () {46 vars in 879 bytes} [Fri Jul 27 09:56:58 2018] GET /tag/1/ => generated 8588 bytes in 22 msecs (HTTP/1.1 200) 3 headers in 110 bytes (1 switches on core 1)
[pid: 24646|app: 0|req: 12/69] 113.92.95.76 () {46 vars in 895 bytes} [Fri Jul 27 09:57:00 2018] GET /category/1/ => generated 8588 bytes in 23 msecs (HTTP/1.1 200) 3 headers in 110 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24645|app: 0|req: 17/70] 198.35.46.201 () {28 vars in 312 bytes} [Fri Jul 27 10:40:06 2018] GET / => generated 8588 bytes in 20 msecs (HTTP/1.0 200) 3 headers in 110 bytes (1 switches on core 1)
*** Starting uWSGI 2.0.17 (64bit) on [Fri Jul 27 11:39:33 2018] ***
compiled with version: 4.8.2 20131212 (Red Hat 4.8.2-8) on 09 April 2018 06:14:45
os: Linux-2.6.32-042stab127.2 #1 SMP Thu Jan 4 16:41:44 MSK 2018
nodename: localhost.localdomain
machine: x86_64
clock source: unix
pcre jit disabled
detected number of CPU cores: 1
current working directory: /usr/Even/projects/blogproject
writing pidfile to uwsgi.pid
detected binary path: /usr/Even/.virtualenvs/django/bin/uwsgi
chdir() to /usr/Even/projects/blogproject
your processes number limit is 1024
your memory page size is 4096 bytes
detected max file descriptor number: 1024
lock engine: pthread robust mutexes
thunder lock: disabled (you can enable it with --thunder-lock)
probably another instance of uWSGI is running on the same address (45.62.126.57:8080).
bind(): Address already in use [core/socket.c line 769]
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24646|app: 0|req: 13/71] 198.35.46.201 () {28 vars in 312 bytes} [Fri Jul 27 11:40:03 2018] GET / => generated 8588 bytes in 23 msecs (HTTP/1.0 200) 3 headers in 110 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
[pid: 24644|app: 0|req: 34/72] 54.147.45.203 () {34 vars in 495 bytes} [Fri Jul 27 12:18:19 2018] GET / => generated 8588 bytes in 24 msecs (HTTP/1.1 200) 3 headers in 110 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24645|app: 0|req: 18/73] 198.35.46.201 () {28 vars in 312 bytes} [Fri Jul 27 12:40:03 2018] GET / => generated 8588 bytes in 23 msecs (HTTP/1.0 200) 3 headers in 110 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24646|app: 0|req: 14/74] 198.35.46.201 () {28 vars in 312 bytes} [Fri Jul 27 13:40:08 2018] GET / => generated 8588 bytes in 43 msecs (HTTP/1.0 200) 3 headers in 110 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24646|app: 0|req: 15/75] 198.35.46.201 () {28 vars in 312 bytes} [Fri Jul 27 14:40:03 2018] GET / => generated 8588 bytes in 32 msecs (HTTP/1.0 200) 3 headers in 110 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24645|app: 0|req: 19/76] 198.35.46.201 () {28 vars in 312 bytes} [Fri Jul 27 15:40:04 2018] GET / => generated 8588 bytes in 31 msecs (HTTP/1.0 200) 3 headers in 110 bytes (1 switches on core 0)
[pid: 24645|app: 0|req: 20/77] 66.102.6.123 () {38 vars in 625 bytes} [Fri Jul 27 16:07:05 2018] GET / => generated 8588 bytes in 18 msecs (HTTP/1.1 200) 3 headers in 110 bytes (1 switches on core 1)
Not Found: /favicon.ico
[pid: 24644|app: 0|req: 35/78] 66.102.6.125 () {38 vars in 591 bytes} [Fri Jul 27 16:07:05 2018] GET /favicon.ico => generated 3375 bytes in 6 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24645|app: 0|req: 21/79] 198.35.46.201 () {28 vars in 312 bytes} [Fri Jul 27 16:40:13 2018] GET / => generated 8588 bytes in 29 msecs (HTTP/1.0 200) 3 headers in 110 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24644|app: 0|req: 36/80] 198.35.46.201 () {28 vars in 312 bytes} [Fri Jul 27 17:40:10 2018] GET / => generated 8588 bytes in 24 msecs (HTTP/1.0 200) 3 headers in 110 bytes (1 switches on core 0)
[pid: 24644|app: 0|req: 37/81] 113.92.95.76 () {46 vars in 1040 bytes} [Fri Jul 27 17:47:40 2018] GET /admin/blog/category/add/ => generated 3837 bytes in 33 msecs (HTTP/1.1 200) 7 headers in 381 bytes (1 switches on core 1)
[pid: 24645|app: 0|req: 22/82] 113.92.95.76 () {44 vars in 905 bytes} [Fri Jul 27 17:47:41 2018] GET /admin/jsi18n/ => generated 7682 bytes in 9 msecs (HTTP/1.1 200) 4 headers in 115 bytes (1 switches on core 1)
Not Found: /favicon.ico
[pid: 24647|app: 0|req: 9/83] 113.92.95.76 () {44 vars in 937 bytes} [Fri Jul 27 17:47:41 2018] GET /favicon.ico => generated 3375 bytes in 4 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 1)
[pid: 24646|app: 0|req: 16/84] 113.92.95.76 () {54 vars in 1304 bytes} [Fri Jul 27 17:47:56 2018] POST /admin/blog/category/add/ => generated 0 bytes in 16 msecs (HTTP/1.1 302) 8 headers in 522 bytes (1 switches on core 1)
[pid: 24647|app: 0|req: 10/85] 113.92.95.76 () {48 vars in 1298 bytes} [Fri Jul 27 17:47:57 2018] GET /admin/blog/category/ => generated 5269 bytes in 45 msecs (HTTP/1.1 200) 8 headers in 465 bytes (1 switches on core 0)
[pid: 24644|app: 0|req: 38/86] 113.92.95.76 () {44 vars in 901 bytes} [Fri Jul 27 17:47:57 2018] GET /admin/jsi18n/ => generated 7682 bytes in 4 msecs (HTTP/1.1 200) 4 headers in 115 bytes (1 switches on core 0)
[pid: 24647|app: 0|req: 11/87] 113.92.95.76 () {46 vars in 1050 bytes} [Fri Jul 27 17:48:03 2018] GET /admin/blog/category/4/change/ => generated 4059 bytes in 31 msecs (HTTP/1.1 200) 7 headers in 381 bytes (1 switches on core 1)
[pid: 24644|app: 0|req: 39/88] 113.92.95.76 () {44 vars in 910 bytes} [Fri Jul 27 17:48:03 2018] GET /admin/jsi18n/ => generated 7682 bytes in 5 msecs (HTTP/1.1 200) 4 headers in 115 bytes (1 switches on core 1)
[pid: 24645|app: 0|req: 23/89] 113.92.95.76 () {54 vars in 1319 bytes} [Fri Jul 27 17:48:08 2018] POST /admin/blog/category/4/change/ => generated 0 bytes in 14 msecs (HTTP/1.1 302) 8 headers in 620 bytes (1 switches on core 0)
[pid: 24647|app: 0|req: 12/90] 113.92.95.76 () {48 vars in 1405 bytes} [Fri Jul 27 17:48:08 2018] GET /admin/blog/category/add/ => generated 4063 bytes in 26 msecs (HTTP/1.1 200) 8 headers in 465 bytes (1 switches on core 0)
[pid: 24645|app: 0|req: 24/91] 113.92.95.76 () {44 vars in 905 bytes} [Fri Jul 27 17:48:08 2018] GET /admin/jsi18n/ => generated 7682 bytes in 4 msecs (HTTP/1.1 200) 4 headers in 115 bytes (1 switches on core 1)
[pid: 24646|app: 0|req: 17/92] 113.92.95.76 () {46 vars in 1018 bytes} [Fri Jul 27 17:48:10 2018] GET /admin/blog/ => generated 2957 bytes in 16 msecs (HTTP/1.1 200) 6 headers in 227 bytes (1 switches on core 0)
[pid: 24646|app: 0|req: 18/93] 113.92.95.76 () {46 vars in 1023 bytes} [Fri Jul 27 17:48:14 2018] GET /admin/blog/category/ => generated 5089 bytes in 33 msecs (HTTP/1.1 200) 7 headers in 381 bytes (1 switches on core 1)
[pid: 24644|app: 0|req: 40/94] 113.92.95.76 () {44 vars in 901 bytes} [Fri Jul 27 17:48:14 2018] GET /admin/jsi18n/ => generated 7682 bytes in 4 msecs (HTTP/1.1 200) 4 headers in 115 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24646|app: 0|req: 19/95] 198.35.46.201 () {28 vars in 312 bytes} [Fri Jul 27 18:40:13 2018] GET / => generated 8588 bytes in 33 msecs (HTTP/1.0 200) 3 headers in 110 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24645|app: 0|req: 25/96] 198.35.46.201 () {28 vars in 312 bytes} [Fri Jul 27 19:40:05 2018] GET / => generated 241839 bytes in 110 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24646|app: 0|req: 20/97] 198.35.46.201 () {28 vars in 312 bytes} [Fri Jul 27 20:40:11 2018] GET / => generated 241839 bytes in 121 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24644|app: 0|req: 41/98] 198.35.46.201 () {28 vars in 312 bytes} [Fri Jul 27 21:40:11 2018] GET / => generated 241839 bytes in 91 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24644|app: 0|req: 42/99] 198.35.46.201 () {28 vars in 312 bytes} [Fri Jul 27 22:40:08 2018] GET / => generated 241839 bytes in 88 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24645|app: 0|req: 26/100] 198.35.46.201 () {28 vars in 312 bytes} [Fri Jul 27 23:40:04 2018] GET / => generated 241839 bytes in 108 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24645|app: 0|req: 27/101] 196.52.43.100 () {30 vars in 402 bytes} [Sat Jul 28 00:28:43 2018] GET / => generated 242035 bytes in 97 msecs (HTTP/1.1 500) 4 headers in 130 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24645|app: 0|req: 28/102] 198.35.46.201 () {28 vars in 312 bytes} [Sat Jul 28 00:40:03 2018] GET / => generated 241839 bytes in 90 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24644|app: 0|req: 43/103] 198.35.46.201 () {28 vars in 312 bytes} [Sat Jul 28 01:40:01 2018] GET / => generated 241839 bytes in 231 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24644|app: 0|req: 44/104] 198.35.46.201 () {28 vars in 312 bytes} [Sat Jul 28 02:43:57 2018] GET / => generated 241839 bytes in 100 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24647|app: 0|req: 13/105] 198.35.46.201 () {28 vars in 312 bytes} [Sat Jul 28 03:40:06 2018] GET / => generated 241839 bytes in 127 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24646|app: 0|req: 21/106] 198.35.46.201 () {28 vars in 312 bytes} [Sat Jul 28 04:40:06 2018] GET / => generated 241839 bytes in 116 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 1)
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24644|app: 0|req: 45/107] 101.172.132.67 () {26 vars in 274 bytes} [Sat Jul 28 04:48:00 2018] GET / => generated 241673 bytes in 95 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24644|app: 0|req: 46/108] 198.35.46.201 () {28 vars in 312 bytes} [Sat Jul 28 05:40:03 2018] GET / => generated 241839 bytes in 159 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24644|app: 0|req: 47/109] 198.35.46.201 () {28 vars in 312 bytes} [Sat Jul 28 06:40:08 2018] GET / => generated 241839 bytes in 101 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24645|app: 0|req: 29/110] 198.35.46.201 () {28 vars in 312 bytes} [Sat Jul 28 07:40:05 2018] GET / => generated 241839 bytes in 154 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24647|app: 0|req: 14/111] 198.35.46.201 () {28 vars in 312 bytes} [Sat Jul 28 08:40:06 2018] GET / => generated 241839 bytes in 90 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24647|app: 0|req: 15/112] 198.35.46.201 () {28 vars in 312 bytes} [Sat Jul 28 09:40:03 2018] GET / => generated 241839 bytes in 112 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24647|app: 0|req: 16/113] 198.35.46.201 () {28 vars in 312 bytes} [Sat Jul 28 10:40:03 2018] GET / => generated 241839 bytes in 137 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24646|app: 0|req: 22/114] 198.35.46.201 () {28 vars in 312 bytes} [Sat Jul 28 11:40:11 2018] GET / => generated 241839 bytes in 93 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24645|app: 0|req: 30/115] 198.35.46.201 () {28 vars in 312 bytes} [Sat Jul 28 12:40:09 2018] GET / => generated 241839 bytes in 158 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24644|app: 0|req: 48/116] 198.35.46.201 () {28 vars in 312 bytes} [Sat Jul 28 13:40:02 2018] GET / => generated 241839 bytes in 259 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24644|app: 0|req: 49/117] 82.221.105.6 () {34 vars in 526 bytes} [Sat Jul 28 14:31:25 2018] GET / => generated 242351 bytes in 132 msecs (HTTP/1.1 500) 4 headers in 130 bytes (1 switches on core 1)
Not Found: /favicon.ico
[pid: 24645|app: 0|req: 31/118] 82.221.105.6 () {36 vars in 449 bytes} [Sat Jul 28 14:31:32 2018] GET /favicon.ico => generated 3372 bytes in 3 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24644|app: 0|req: 50/119] 198.35.46.201 () {28 vars in 312 bytes} [Sat Jul 28 14:39:59 2018] GET / => generated 241839 bytes in 164 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24644|app: 0|req: 51/120] 198.35.46.201 () {28 vars in 312 bytes} [Sat Jul 28 15:40:02 2018] GET / => generated 241839 bytes in 96 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24646|app: 0|req: 23/121] 198.35.46.201 () {28 vars in 312 bytes} [Sat Jul 28 16:40:04 2018] GET / => generated 241839 bytes in 97 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24644|app: 0|req: 52/122] 198.35.46.201 () {28 vars in 312 bytes} [Sat Jul 28 17:40:00 2018] GET / => generated 241839 bytes in 91 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 1)
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24646|app: 0|req: 24/123] 93.174.95.106 () {34 vars in 527 bytes} [Sat Jul 28 17:48:44 2018] GET / => generated 242352 bytes in 98 msecs (HTTP/1.1 500) 4 headers in 130 bytes (1 switches on core 1)
Not Found: /favicon.ico
[pid: 24644|app: 0|req: 53/124] 93.174.95.106 () {36 vars in 450 bytes} [Sat Jul 28 17:48:51 2018] GET /favicon.ico => generated 3372 bytes in 4 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24644|app: 0|req: 54/125] 198.35.46.201 () {28 vars in 312 bytes} [Sat Jul 28 18:40:01 2018] GET / => generated 241839 bytes in 244 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24645|app: 0|req: 32/126] 198.35.46.201 () {28 vars in 312 bytes} [Sat Jul 28 19:39:59 2018] GET / => generated 241839 bytes in 104 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24644|app: 0|req: 55/127] 198.35.46.201 () {28 vars in 312 bytes} [Sat Jul 28 20:40:01 2018] GET / => generated 241839 bytes in 144 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24644|app: 0|req: 56/128] 198.35.46.201 () {28 vars in 312 bytes} [Sat Jul 28 21:40:00 2018] GET / => generated 241839 bytes in 90 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24644|app: 0|req: 57/129] 198.35.46.201 () {28 vars in 312 bytes} [Sat Jul 28 22:40:01 2018] GET / => generated 241839 bytes in 202 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24644|app: 0|req: 58/130] 198.35.46.201 () {28 vars in 312 bytes} [Sat Jul 28 23:40:01 2018] GET / => generated 241839 bytes in 153 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24646|app: 0|req: 25/131] 198.35.46.201 () {28 vars in 312 bytes} [Sun Jul 29 00:40:02 2018] GET / => generated 241839 bytes in 175 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24644|app: 0|req: 59/132] 198.35.46.201 () {28 vars in 312 bytes} [Sun Jul 29 01:40:01 2018] GET / => generated 241839 bytes in 141 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24644|app: 0|req: 60/133] 198.35.46.201 () {28 vars in 312 bytes} [Sun Jul 29 02:40:02 2018] GET / => generated 241839 bytes in 99 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24646|app: 0|req: 26/134] 198.35.46.201 () {28 vars in 312 bytes} [Sun Jul 29 03:40:03 2018] GET / => generated 241839 bytes in 125 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24644|app: 0|req: 61/135] 198.35.46.201 () {28 vars in 312 bytes} [Sun Jul 29 04:40:01 2018] GET / => generated 241839 bytes in 265 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24644|app: 0|req: 62/136] 198.35.46.201 () {28 vars in 312 bytes} [Sun Jul 29 05:39:59 2018] GET / => generated 241839 bytes in 103 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24644|app: 0|req: 63/137] 198.35.46.201 () {28 vars in 312 bytes} [Sun Jul 29 06:40:01 2018] GET / => generated 241839 bytes in 135 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24644|app: 0|req: 64/138] 198.35.46.201 () {28 vars in 312 bytes} [Sun Jul 29 07:40:00 2018] GET / => generated 241839 bytes in 98 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24645|app: 0|req: 33/139] 198.35.46.201 () {28 vars in 312 bytes} [Sun Jul 29 08:40:00 2018] GET / => generated 241839 bytes in 116 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24646|app: 0|req: 27/140] 198.35.46.201 () {28 vars in 312 bytes} [Sun Jul 29 09:39:59 2018] GET / => generated 241839 bytes in 108 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24644|app: 0|req: 65/141] 198.35.46.201 () {28 vars in 312 bytes} [Sun Jul 29 10:39:59 2018] GET / => generated 241839 bytes in 146 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 1)
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24646|app: 0|req: 28/142] 198.74.56.4 () {26 vars in 271 bytes} [Sun Jul 29 10:53:46 2018] GET / => generated 241670 bytes in 86 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24647|app: 0|req: 17/143] 198.35.46.201 () {28 vars in 312 bytes} [Sun Jul 29 11:40:03 2018] GET / => generated 241839 bytes in 151 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24644|app: 0|req: 66/144] 198.35.46.201 () {28 vars in 312 bytes} [Sun Jul 29 12:40:10 2018] GET / => generated 241839 bytes in 112 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24644|app: 0|req: 67/145] 198.35.46.201 () {28 vars in 312 bytes} [Sun Jul 29 13:40:05 2018] GET / => generated 241839 bytes in 103 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24646|app: 0|req: 29/146] 198.35.46.201 () {28 vars in 312 bytes} [Sun Jul 29 14:40:03 2018] GET / => generated 241839 bytes in 97 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24647|app: 0|req: 18/147] 198.35.46.201 () {28 vars in 312 bytes} [Sun Jul 29 15:40:05 2018] GET / => generated 241839 bytes in 112 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24644|app: 0|req: 68/148] 198.35.46.201 () {28 vars in 312 bytes} [Sun Jul 29 16:40:01 2018] GET / => generated 241839 bytes in 156 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24646|app: 0|req: 30/149] 198.35.46.201 () {28 vars in 312 bytes} [Sun Jul 29 17:39:59 2018] GET / => generated 241839 bytes in 97 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24644|app: 0|req: 69/150] 198.35.46.201 () {28 vars in 312 bytes} [Sun Jul 29 18:39:57 2018] GET / => generated 241839 bytes in 126 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 0)
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24644|app: 0|req: 70/151] 141.212.122.128 () {34 vars in 391 bytes} [Sun Jul 29 18:40:35 2018] GET / => generated 242212 bytes in 91 msecs (HTTP/1.1 500) 4 headers in 130 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24644|app: 0|req: 71/152] 198.35.46.201 () {28 vars in 312 bytes} [Sun Jul 29 19:39:58 2018] GET / => generated 241839 bytes in 109 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24647|app: 0|req: 19/153] 198.35.46.201 () {28 vars in 312 bytes} [Sun Jul 29 20:39:57 2018] GET / => generated 241839 bytes in 91 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24647|app: 0|req: 20/154] 198.35.46.201 () {28 vars in 312 bytes} [Sun Jul 29 21:39:58 2018] GET / => generated 241839 bytes in 104 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24644|app: 0|req: 72/155] 198.35.46.201 () {28 vars in 312 bytes} [Sun Jul 29 22:39:59 2018] GET / => generated 241839 bytes in 134 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24645|app: 0|req: 34/156] 198.35.46.201 () {28 vars in 312 bytes} [Sun Jul 29 23:39:57 2018] GET / => generated 241839 bytes in 106 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24644|app: 0|req: 73/157] 198.35.46.201 () {28 vars in 312 bytes} [Mon Jul 30 00:39:59 2018] GET / => generated 241839 bytes in 86 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 7937 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24644|app: 0|req: 74/158] 198.35.46.201 () {28 vars in 312 bytes} [Mon Jul 30 01:40:01 2018] GET / => generated 241839 bytes in 108 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24646|app: 0|req: 31/159] 198.35.46.201 () {28 vars in 312 bytes} [Mon Jul 30 02:40:02 2018] GET / => generated 241839 bytes in 125 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 0)
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24644|app: 0|req: 75/160] 71.6.146.185 () {34 vars in 526 bytes} [Mon Jul 30 02:51:26 2018] GET / => generated 242351 bytes in 98 msecs (HTTP/1.1 500) 4 headers in 130 bytes (1 switches on core 1)
Not Found: /favicon.ico
[pid: 24646|app: 0|req: 32/161] 71.6.146.185 () {36 vars in 449 bytes} [Mon Jul 30 02:51:29 2018] GET /favicon.ico => generated 3372 bytes in 5 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24647|app: 0|req: 21/162] 198.35.46.201 () {28 vars in 312 bytes} [Mon Jul 30 03:40:00 2018] GET / => generated 241839 bytes in 107 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24647|app: 0|req: 22/163] 198.35.46.201 () {28 vars in 312 bytes} [Mon Jul 30 04:40:01 2018] GET / => generated 241839 bytes in 157 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24644|app: 0|req: 76/164] 198.35.46.201 () {28 vars in 312 bytes} [Mon Jul 30 05:39:58 2018] GET / => generated 241839 bytes in 122 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24646|app: 0|req: 33/165] 198.35.46.201 () {28 vars in 312 bytes} [Mon Jul 30 06:39:58 2018] GET / => generated 241839 bytes in 101 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24644|app: 0|req: 77/166] 198.35.46.201 () {28 vars in 312 bytes} [Mon Jul 30 07:40:00 2018] GET / => generated 241839 bytes in 100 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24646|app: 0|req: 34/167] 198.35.46.201 () {28 vars in 312 bytes} [Mon Jul 30 08:40:00 2018] GET / => generated 241839 bytes in 103 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24644|app: 0|req: 78/168] 198.35.46.201 () {28 vars in 312 bytes} [Mon Jul 30 09:39:59 2018] GET / => generated 241839 bytes in 110 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24644|app: 0|req: 79/169] 198.35.46.201 () {28 vars in 312 bytes} [Mon Jul 30 10:39:59 2018] GET / => generated 241839 bytes in 104 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 7937 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24644|app: 0|req: 80/170] 198.35.46.201 () {28 vars in 312 bytes} [Mon Jul 30 11:39:59 2018] GET / => generated 241839 bytes in 99 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24645|app: 0|req: 35/171] 198.35.46.201 () {28 vars in 312 bytes} [Mon Jul 30 12:39:58 2018] GET / => generated 241839 bytes in 141 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24646|app: 0|req: 35/172] 198.35.46.201 () {28 vars in 312 bytes} [Mon Jul 30 13:40:00 2018] GET / => generated 241839 bytes in 214 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24646|app: 0|req: 36/173] 198.35.46.201 () {28 vars in 312 bytes} [Mon Jul 30 14:40:02 2018] GET / => generated 241839 bytes in 99 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24644|app: 0|req: 81/174] 198.35.46.201 () {28 vars in 312 bytes} [Mon Jul 30 15:40:04 2018] GET / => generated 241839 bytes in 106 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24644|app: 0|req: 82/175] 198.35.46.201 () {28 vars in 312 bytes} [Mon Jul 30 16:39:59 2018] GET / => generated 241839 bytes in 103 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24646|app: 0|req: 37/176] 198.35.46.201 () {28 vars in 312 bytes} [Mon Jul 30 17:40:04 2018] GET / => generated 241839 bytes in 138 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 0)
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24644|app: 0|req: 83/177] 139.162.83.10 () {34 vars in 385 bytes} [Mon Jul 30 17:48:16 2018] GET / => generated 242206 bytes in 99 msecs (HTTP/1.1 500) 4 headers in 130 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24644|app: 0|req: 84/178] 198.35.46.201 () {28 vars in 312 bytes} [Mon Jul 30 18:40:03 2018] GET / => generated 241839 bytes in 110 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24644|app: 0|req: 85/179] 198.35.46.201 () {28 vars in 312 bytes} [Mon Jul 30 19:40:05 2018] GET / => generated 241839 bytes in 123 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24645|app: 0|req: 36/180] 198.35.46.201 () {28 vars in 312 bytes} [Mon Jul 30 20:40:01 2018] GET / => generated 241839 bytes in 199 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24644|app: 0|req: 86/181] 198.35.46.201 () {28 vars in 312 bytes} [Mon Jul 30 21:39:58 2018] GET / => generated 241839 bytes in 88 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24646|app: 0|req: 38/182] 198.35.46.201 () {28 vars in 312 bytes} [Mon Jul 30 22:40:08 2018] GET / => generated 241839 bytes in 133 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24644|app: 0|req: 87/183] 198.35.46.201 () {28 vars in 312 bytes} [Mon Jul 30 23:39:58 2018] GET / => generated 241839 bytes in 93 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24644|app: 0|req: 88/184] 198.35.46.201 () {28 vars in 312 bytes} [Tue Jul 31 00:40:02 2018] GET / => generated 241839 bytes in 105 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24644|app: 0|req: 89/185] 198.35.46.201 () {28 vars in 312 bytes} [Tue Jul 31 01:39:57 2018] GET / => generated 241839 bytes in 84 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24645|app: 0|req: 37/186] 198.35.46.201 () {28 vars in 312 bytes} [Tue Jul 31 02:40:02 2018] GET / => generated 241839 bytes in 102 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24644|app: 0|req: 90/187] 198.35.46.201 () {28 vars in 312 bytes} [Tue Jul 31 03:40:01 2018] GET / => generated 241839 bytes in 307 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24644|app: 0|req: 91/188] 198.35.46.201 () {28 vars in 312 bytes} [Tue Jul 31 04:39:56 2018] GET / => generated 241839 bytes in 131 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24647|app: 0|req: 23/189] 198.35.46.201 () {28 vars in 312 bytes} [Tue Jul 31 05:40:00 2018] GET / => generated 241839 bytes in 159 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24645|app: 0|req: 38/190] 198.35.46.201 () {28 vars in 312 bytes} [Tue Jul 31 06:40:03 2018] GET / => generated 241839 bytes in 106 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21584 (max 4096)...skip
invalid request block size: 21584 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
-- unavailable modifier requested: 5 --
-- unavailable modifier requested: 4 --
invalid request block size: 21283 (max 4096)...skip
invalid request block size: 28171 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
-- unavailable modifier requested: 128 --
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
invalid request block size: 19525 (max 4096)...skip
-- unavailable modifier requested: 22 --
-- unavailable modifier requested: 22 --
Empty python request. skip.
[pid: 24646|app: -1|req: -1/196]  () {0 vars in 0 bytes} [Tue Jul 31 06:58:18 2018]   => generated 0 bytes in 0 msecs ( 0) 0 headers in 0 bytes (0 switches on core 0)
Empty python request. skip.
[pid: 24644|app: -1|req: -1/197]  () {0 vars in 0 bytes} [Tue Jul 31 06:58:18 2018]   => generated 0 bytes in 0 msecs ( 0) 0 headers in 0 bytes (0 switches on core 1)
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
invalid request block size: 25956 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
invalid request block size: 21584 (max 4096)...skip
invalid request block size: 19790 (max 4096)...skip
-- unavailable modifier requested: 3 --
invalid request block size: 25709 (max 4096)...skip
-- unavailable modifier requested: 58 --
invalid request block size: 19794 (max 4096)...skip
-- unavailable modifier requested: 1 --
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
invalid uwsgi request (current strsize: 0). skip.
[pid: 24644|app: -1|req: -1/201]  () {0 vars in 1 bytes} [Tue Jul 31 06:58:25 2018]   => generated 0 bytes in 1 msecs ( 500) 0 headers in 0 bytes (0 switches on core 0)
uwsgi key cannot be null. skip this var.
[pid: 24644|app: -1|req: -1/202]  () {0 vars in 3 bytes} [Tue Jul 31 06:58:26 2018]   => generated 0 bytes in 0 msecs ( 500) 0 headers in 0 bytes (0 switches on core 1)
invalid request block size: 20297 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24646|app: 0|req: 39/203] 198.35.46.201 () {28 vars in 312 bytes} [Tue Jul 31 07:39:59 2018] GET / => generated 241839 bytes in 110 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24644|app: 0|req: 92/204] 198.35.46.201 () {28 vars in 312 bytes} [Tue Jul 31 08:40:00 2018] GET / => generated 241839 bytes in 120 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 1)
invalid request block size: 16709 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24645|app: 0|req: 39/205] 198.35.46.201 () {28 vars in 312 bytes} [Tue Jul 31 09:40:01 2018] GET / => generated 241839 bytes in 196 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24647|app: 0|req: 24/206] 198.35.46.201 () {28 vars in 312 bytes} [Tue Jul 31 10:40:00 2018] GET / => generated 241839 bytes in 85 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24644|app: 0|req: 93/207] 198.35.46.201 () {28 vars in 312 bytes} [Tue Jul 31 11:39:57 2018] GET / => generated 241839 bytes in 94 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24645|app: 0|req: 40/208] 198.35.46.201 () {28 vars in 312 bytes} [Tue Jul 31 12:39:57 2018] GET / => generated 241839 bytes in 186 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
Internal Server Error: /
Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 582, in connect
    **kwargs)
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 722, in create_connection
    raise err
  File "/usr/Even/.pyenv/versions/3.6.1/lib/python3.6/socket.py", line 713, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/base.py", line 88, in dispatch
    return handler(request, *args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 175, in get
    context = self.get_context_data()
  File "./blog/views.py", line 29, in get_context_data
    context = super().get_context_data(**kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 135, in get_context_data
    paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/views/generic/list.py", line 79, in paginate_queryset
    page = paginator.page(page_number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 57, in page
    number = self.validate_number(number)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 46, in validate_number
    if number > self.num_pages:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 91, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/paginator.py", line 79, in count
    return self.object_list.count()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/query.py", line 364, in count
    return self.query.get_count(using=self.db)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 499, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/query.py", line 480, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 882, in execute_sql
    cursor = self.connection.cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 254, in cursor
    return self._cursor()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 229, in _cursor
    self.ensure_connection()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 213, in ensure_connection
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/base/base.py", line 189, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/backends/mysql/base.py", line 274, in get_new_connection
    conn = Database.connect(**conn_params)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 327, in __init__
    self.connect()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/pymysql/connections.py", line 629, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
[pid: 24644|app: 0|req: 94/209] 198.35.46.201 () {28 vars in 312 bytes} [Tue Jul 31 13:39:58 2018] GET / => generated 241839 bytes in 95 msecs (HTTP/1.0 500) 4 headers in 130 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24645|app: 0|req: 41/210] 198.35.46.201 () {28 vars in 312 bytes} [Tue Jul 31 14:39:55 2018] GET / => generated 8588 bytes in 35 msecs (HTTP/1.0 200) 3 headers in 110 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
<p>[TOC]</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">def Hello():
    pass</pre>
<p>&nbsp;</p>
------------------------------------------------------------------------------------------------------------------------
<p>[TOC]</p>

<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">def Hello():
    pass</pre>

<p>&nbsp;</p>
<div class="toc">
<ul></ul>
</div>

[pid: 24646|app: 0|req: 40/211] 113.92.93.76 () {46 vars in 973 bytes} [Tue Jul 31 15:23:48 2018] GET /post/1/ => generated 9761 bytes in 65 msecs (HTTP/1.1 200) 5 headers in 278 bytes (1 switches on core 1)
Not Found: /favicon.ico
[pid: 24644|app: 0|req: 95/212] 113.92.93.76 () {44 vars in 920 bytes} [Tue Jul 31 15:23:49 2018] GET /favicon.ico => generated 3375 bytes in 5 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 1)
<p>[TOC]</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">def Hello():
    pass</pre>
<p>&nbsp;</p>
------------------------------------------------------------------------------------------------------------------------
<p>[TOC]</p>

<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">def Hello():
    pass</pre>

<p>&nbsp;</p>
<div class="toc">
<ul></ul>
</div>

[pid: 24646|app: 0|req: 41/213] 113.92.93.76 () {46 vars in 973 bytes} [Tue Jul 31 15:23:56 2018] GET /post/1/ => generated 9761 bytes in 40 msecs (HTTP/1.1 200) 5 headers in 278 bytes (1 switches on core 0)
Not Found: /post/1/index.html
[pid: 24645|app: 0|req: 42/214] 113.92.93.76 () {46 vars in 1013 bytes} [Tue Jul 31 15:26:32 2018] GET /post/1/index.html => generated 3393 bytes in 3 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 1)
Not Found: /post/1/index.html
[pid: 24646|app: 0|req: 42/215] 113.92.93.76 () {46 vars in 1013 bytes} [Tue Jul 31 15:26:46 2018] GET /post/1/index.html => generated 3393 bytes in 3 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 1)
[pid: 24644|app: 0|req: 96/216] 113.92.93.76 () {46 vars in 1050 bytes} [Tue Jul 31 15:27:20 2018] GET /admin/blog/category/5/change/ => generated 4083 bytes in 54 msecs (HTTP/1.1 200) 7 headers in 381 bytes (1 switches on core 0)
[pid: 24646|app: 0|req: 43/217] 113.92.93.76 () {44 vars in 910 bytes} [Tue Jul 31 15:27:20 2018] GET /admin/jsi18n/ => generated 7682 bytes in 5 msecs (HTTP/1.1 200) 4 headers in 115 bytes (1 switches on core 0)
[pid: 24644|app: 0|req: 97/218] 113.92.93.76 () {46 vars in 1023 bytes} [Tue Jul 31 15:27:25 2018] GET /admin/blog/category/ => generated 5089 bytes in 50 msecs (HTTP/1.1 200) 7 headers in 381 bytes (1 switches on core 1)
[pid: 24646|app: 0|req: 44/219] 113.92.93.76 () {46 vars in 1018 bytes} [Tue Jul 31 15:27:27 2018] GET /admin/blog/ => generated 2957 bytes in 16 msecs (HTTP/1.1 200) 6 headers in 227 bytes (1 switches on core 1)
[pid: 24644|app: 0|req: 98/220] 113.92.93.76 () {46 vars in 1040 bytes} [Tue Jul 31 15:27:31 2018] GET /admin/blog/category/add/ => generated 3837 bytes in 74 msecs (HTTP/1.1 200) 7 headers in 381 bytes (1 switches on core 0)
[pid: 24644|app: 0|req: 99/221] 113.92.93.76 () {46 vars in 1040 bytes} [Tue Jul 31 15:27:32 2018] GET /admin/blog/category/add/ => generated 3837 bytes in 35 msecs (HTTP/1.1 200) 7 headers in 381 bytes (1 switches on core 1)
[pid: 24646|app: 0|req: 45/222] 113.92.93.76 () {44 vars in 905 bytes} [Tue Jul 31 15:27:33 2018] GET /admin/jsi18n/ => generated 7682 bytes in 5 msecs (HTTP/1.1 200) 4 headers in 115 bytes (1 switches on core 0)
[pid: 24645|app: 0|req: 43/223] 113.92.93.76 () {54 vars in 1304 bytes} [Tue Jul 31 15:27:43 2018] POST /admin/blog/category/add/ => generated 0 bytes in 9 msecs (HTTP/1.1 302) 8 headers in 508 bytes (1 switches on core 0)
[pid: 24645|app: 0|req: 44/224] 113.92.93.76 () {48 vars in 1284 bytes} [Tue Jul 31 15:27:43 2018] GET /admin/blog/category/ => generated 5490 bytes in 36 msecs (HTTP/1.1 200) 8 headers in 465 bytes (1 switches on core 1)
[pid: 24644|app: 0|req: 100/225] 113.92.93.76 () {44 vars in 901 bytes} [Tue Jul 31 15:27:43 2018] GET /admin/jsi18n/ => generated 7682 bytes in 4 msecs (HTTP/1.1 200) 4 headers in 115 bytes (1 switches on core 0)
[pid: 24647|app: 0|req: 25/226] 113.92.93.76 () {46 vars in 1040 bytes} [Tue Jul 31 15:27:50 2018] GET /admin/blog/category/add/ => generated 3837 bytes in 33 msecs (HTTP/1.1 200) 7 headers in 381 bytes (1 switches on core 1)
[pid: 24644|app: 0|req: 101/227] 113.92.93.76 () {46 vars in 1023 bytes} [Tue Jul 31 15:27:51 2018] GET /admin/blog/category/ => generated 5316 bytes in 35 msecs (HTTP/1.1 200) 7 headers in 381 bytes (1 switches on core 0)
[pid: 24644|app: 0|req: 102/228] 113.92.93.76 () {46 vars in 1014 bytes} [Tue Jul 31 15:27:54 2018] GET /admin/blog/ => generated 2957 bytes in 14 msecs (HTTP/1.1 200) 6 headers in 227 bytes (1 switches on core 1)
[pid: 24647|app: 0|req: 26/229] 113.92.93.76 () {46 vars in 1015 bytes} [Tue Jul 31 15:27:55 2018] GET /admin/blog/post/ => generated 5722 bytes in 37 msecs (HTTP/1.1 200) 7 headers in 381 bytes (1 switches on core 0)
[pid: 24644|app: 0|req: 103/230] 113.92.93.76 () {44 vars in 897 bytes} [Tue Jul 31 15:27:56 2018] GET /admin/jsi18n/ => generated 7682 bytes in 4 msecs (HTTP/1.1 200) 4 headers in 115 bytes (1 switches on core 0)
[pid: 24646|app: 0|req: 46/231] 113.92.93.76 () {46 vars in 1028 bytes} [Tue Jul 31 15:27:59 2018] GET /admin/blog/post/add/ => generated 10191 bytes in 54 msecs (HTTP/1.1 200) 7 headers in 382 bytes (1 switches on core 0)
[pid: 24646|app: 0|req: 47/232] 113.92.93.76 () {44 vars in 901 bytes} [Tue Jul 31 15:27:59 2018] GET /admin/jsi18n/ => generated 7682 bytes in 4 msecs (HTTP/1.1 200) 4 headers in 115 bytes (1 switches on core 1)
[pid: 24646|app: 0|req: 48/233] 66.102.6.121 () {38 vars in 625 bytes} [Tue Jul 31 15:32:30 2018] GET / => generated 8588 bytes in 27 msecs (HTTP/1.1 200) 3 headers in 110 bytes (1 switches on core 1)
Not Found: /favicon.ico
[pid: 24645|app: 0|req: 45/234] 66.102.6.121 () {38 vars in 591 bytes} [Tue Jul 31 15:32:31 2018] GET /favicon.ico => generated 3375 bytes in 3 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24646|app: 0|req: 49/235] 198.35.46.201 () {28 vars in 312 bytes} [Tue Jul 31 15:39:57 2018] GET / => generated 8588 bytes in 27 msecs (HTTP/1.0 200) 3 headers in 110 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24647|app: 0|req: 27/236] 198.35.46.201 () {28 vars in 312 bytes} [Tue Jul 31 16:39:57 2018] GET / => generated 8588 bytes in 23 msecs (HTTP/1.0 200) 3 headers in 110 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24645|app: 0|req: 46/237] 198.35.46.201 () {28 vars in 312 bytes} [Tue Jul 31 17:40:00 2018] GET / => generated 8588 bytes in 28 msecs (HTTP/1.0 200) 3 headers in 110 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24646|app: 0|req: 50/238] 198.35.46.201 () {28 vars in 312 bytes} [Tue Jul 31 18:39:59 2018] GET / => generated 8588 bytes in 52 msecs (HTTP/1.0 200) 3 headers in 110 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24645|app: 0|req: 47/239] 198.35.46.201 () {28 vars in 312 bytes} [Tue Jul 31 19:39:58 2018] GET / => generated 8588 bytes in 19 msecs (HTTP/1.0 200) 3 headers in 110 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24645|app: 0|req: 48/240] 198.35.46.201 () {28 vars in 312 bytes} [Tue Jul 31 20:39:59 2018] GET / => generated 8588 bytes in 21 msecs (HTTP/1.0 200) 3 headers in 110 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24646|app: 0|req: 51/241] 198.35.46.201 () {28 vars in 312 bytes} [Tue Jul 31 21:39:58 2018] GET / => generated 8588 bytes in 22 msecs (HTTP/1.0 200) 3 headers in 110 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24645|app: 0|req: 49/242] 198.35.46.201 () {28 vars in 312 bytes} [Tue Jul 31 22:39:59 2018] GET / => generated 8588 bytes in 33 msecs (HTTP/1.0 200) 3 headers in 110 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21327 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24646|app: 0|req: 52/243] 198.35.46.201 () {28 vars in 312 bytes} [Tue Jul 31 23:39:58 2018] GET / => generated 8588 bytes in 21 msecs (HTTP/1.0 200) 3 headers in 110 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24644|app: 0|req: 104/244] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug  1 00:39:56 2018] GET / => generated 8588 bytes in 19 msecs (HTTP/1.0 200) 3 headers in 110 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24646|app: 0|req: 53/245] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug  1 01:39:50 2018] GET / => generated 8588 bytes in 19 msecs (HTTP/1.0 200) 3 headers in 110 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24645|app: 0|req: 50/246] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug  1 02:39:54 2018] GET / => generated 8588 bytes in 20 msecs (HTTP/1.0 200) 3 headers in 110 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 24644|app: 0|req: 105/247] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug  1 03:39:55 2018] GET / => generated 8588 bytes in 52 msecs (HTTP/1.0 200) 3 headers in 110 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 24646|app: 0|req: 54/248] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug  1 04:39:57 2018] GET / => generated 8588 bytes in 30 msecs (HTTP/1.0 200) 3 headers in 110 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24644|app: 0|req: 106/249] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug  1 05:39:55 2018] GET / => generated 8588 bytes in 20 msecs (HTTP/1.0 200) 3 headers in 110 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24645|app: 0|req: 51/250] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug  1 06:39:56 2018] GET / => generated 8588 bytes in 59 msecs (HTTP/1.0 200) 3 headers in 110 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 24645|app: 0|req: 52/251] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug  1 07:39:52 2018] GET / => generated 8588 bytes in 28 msecs (HTTP/1.0 200) 3 headers in 110 bytes (1 switches on core 1)
[pid: 24646|app: 0|req: 55/252] 196.52.43.93 () {30 vars in 401 bytes} [Wed Aug  1 08:25:02 2018] GET / => generated 8588 bytes in 59 msecs (HTTP/1.1 200) 3 headers in 110 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24646|app: 0|req: 56/253] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug  1 08:39:53 2018] GET / => generated 8588 bytes in 19 msecs (HTTP/1.0 200) 3 headers in 110 bytes (1 switches on core 0)
[pid: 24646|app: 0|req: 57/254] 46.29.225.136 () {26 vars in 273 bytes} [Wed Aug  1 09:16:15 2018] GET / => generated 8588 bytes in 18 msecs (HTTP/1.0 200) 3 headers in 110 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 24647|app: 0|req: 28/255] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug  1 09:39:53 2018] GET / => generated 8588 bytes in 22 msecs (HTTP/1.0 200) 3 headers in 110 bytes (1 switches on core 0)
[pid: 24644|app: 0|req: 107/256] 196.52.43.62 () {30 vars in 367 bytes} [Wed Aug  1 10:09:38 2018] GET / => generated 8588 bytes in 19 msecs (HTTP/1.0 200) 3 headers in 110 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 24645|app: 0|req: 53/257] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug  1 10:39:53 2018] GET / => generated 8588 bytes in 21 msecs (HTTP/1.0 200) 3 headers in 110 bytes (1 switches on core 0)
[pid: 24645|app: 0|req: 54/258] 113.92.93.76 () {44 vars in 928 bytes} [Wed Aug  1 11:21:44 2018] GET / => generated 8588 bytes in 19 msecs (HTTP/1.1 200) 3 headers in 110 bytes (1 switches on core 1)
[pid: 24644|app: 0|req: 108/259] 113.92.93.76 () {44 vars in 940 bytes} [Wed Aug  1 11:21:49 2018] GET /admin/ => generated 7726 bytes in 68 msecs (HTTP/1.1 200) 6 headers in 227 bytes (1 switches on core 0)
[pid: 24644|app: 0|req: 109/260] 113.92.93.76 () {46 vars in 1010 bytes} [Wed Aug  1 11:21:55 2018] GET /admin/blog/post/ => generated 5722 bytes in 54 msecs (HTTP/1.1 200) 7 headers in 381 bytes (1 switches on core 1)
[pid: 24644|app: 0|req: 110/261] 113.92.93.76 () {44 vars in 897 bytes} [Wed Aug  1 11:21:58 2018] GET /admin/jsi18n/ => generated 7682 bytes in 9 msecs (HTTP/1.1 200) 4 headers in 115 bytes (1 switches on core 0)
[pid: 24647|app: 0|req: 29/262] 113.92.93.76 () {44 vars in 928 bytes} [Wed Aug  1 11:30:18 2018] GET / => generated 8588 bytes in 25 msecs (HTTP/1.1 200) 3 headers in 110 bytes (1 switches on core 1)
[pid: 24644|app: 0|req: 111/263] 113.92.93.76 () {44 vars in 940 bytes} [Wed Aug  1 11:31:08 2018] GET /admin/ => generated 7726 bytes in 31 msecs (HTTP/1.1 200) 6 headers in 227 bytes (1 switches on core 1)
[pid: 24644|app: 0|req: 112/264] 113.92.93.76 () {46 vars in 1018 bytes} [Wed Aug  1 11:31:14 2018] GET /admin/blog/category/ => generated 5316 bytes in 76 msecs (HTTP/1.1 200) 7 headers in 381 bytes (1 switches on core 0)
[pid: 24644|app: 0|req: 113/265] 113.92.93.76 () {44 vars in 901 bytes} [Wed Aug  1 11:31:15 2018] GET /admin/jsi18n/ => generated 7682 bytes in 7 msecs (HTTP/1.1 200) 4 headers in 115 bytes (1 switches on core 1)
[pid: 24646|app: 0|req: 58/266] 113.92.93.76 () {46 vars in 1014 bytes} [Wed Aug  1 11:31:25 2018] GET /admin/blog/ => generated 2957 bytes in 36 msecs (HTTP/1.1 200) 6 headers in 227 bytes (1 switches on core 0)
[pid: 24644|app: 0|req: 114/267] 113.92.93.76 () {46 vars in 1015 bytes} [Wed Aug  1 11:31:27 2018] GET /admin/blog/post/ => generated 5722 bytes in 47 msecs (HTTP/1.1 200) 7 headers in 381 bytes (1 switches on core 1)
[pid: 24646|app: 0|req: 59/268] 113.92.93.76 () {44 vars in 897 bytes} [Wed Aug  1 11:31:28 2018] GET /admin/jsi18n/ => generated 7682 bytes in 4 msecs (HTTP/1.1 200) 4 headers in 115 bytes (1 switches on core 1)
[pid: 24647|app: 0|req: 30/269] 113.92.93.76 () {46 vars in 1028 bytes} [Wed Aug  1 11:31:32 2018] GET /admin/blog/post/add/ => generated 10191 bytes in 67 msecs (HTTP/1.1 200) 7 headers in 382 bytes (1 switches on core 0)
[pid: 24646|app: 0|req: 60/270] 113.92.93.76 () {44 vars in 901 bytes} [Wed Aug  1 11:31:32 2018] GET /admin/jsi18n/ => generated 7682 bytes in 4 msecs (HTTP/1.1 200) 4 headers in 115 bytes (1 switches on core 0)
[pid: 24645|app: 0|req: 55/271] 66.102.6.125 () {38 vars in 637 bytes} [Wed Aug  1 11:32:11 2018] GET /admin/ => generated 0 bytes in 7 msecs (HTTP/1.1 302) 7 headers in 265 bytes (1 switches on core 0)
[pid: 24645|app: 0|req: 56/272] 66.102.6.121 () {38 vars in 674 bytes} [Wed Aug  1 11:32:11 2018] GET /admin/login/?next=/admin/ => generated 1652 bytes in 22 msecs (HTTP/1.1 200) 7 headers in 381 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24645|app: 0|req: 57/273] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug  1 11:39:54 2018] GET / => generated 8588 bytes in 30 msecs (HTTP/1.0 200) 3 headers in 110 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24646|app: 0|req: 61/274] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug  1 12:40:00 2018] GET / => generated 8588 bytes in 31 msecs (HTTP/1.0 200) 3 headers in 110 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
[pid: 24645|app: 0|req: 58/275] 113.92.93.76 () {46 vars in 1028 bytes} [Wed Aug  1 12:47:34 2018] GET /admin/blog/post/add/ => generated 10191 bytes in 65 msecs (HTTP/1.1 200) 7 headers in 382 bytes (1 switches on core 1)
[pid: 24646|app: 0|req: 62/276] 113.92.93.76 () {54 vars in 1294 bytes} [Wed Aug  1 12:47:39 2018] POST /admin/blog/post/add/ => generated 10527 bytes in 118 msecs (HTTP/1.1 200) 7 headers in 382 bytes (1 switches on core 1)
[pid: 24644|app: 0|req: 115/277] 113.92.93.76 () {44 vars in 901 bytes} [Wed Aug  1 12:47:40 2018] GET /admin/jsi18n/ => generated 7682 bytes in 4 msecs (HTTP/1.1 200) 4 headers in 115 bytes (1 switches on core 0)
[pid: 24645|app: 0|req: 59/278] 113.92.93.76 () {46 vars in 1014 bytes} [Wed Aug  1 12:47:43 2018] GET /admin/blog/ => generated 2957 bytes in 19 msecs (HTTP/1.1 200) 6 headers in 227 bytes (1 switches on core 0)
[pid: 24644|app: 0|req: 116/279] 113.92.93.76 () {44 vars in 928 bytes} [Wed Aug  1 12:47:50 2018] GET / => generated 8588 bytes in 22 msecs (HTTP/1.1 200) 3 headers in 110 bytes (1 switches on core 1)
[pid: 24645|app: 0|req: 60/280] 113.92.93.76 () {44 vars in 944 bytes} [Wed Aug  1 12:48:11 2018] GET /all/rss/ => generated 1188 bytes in 10 msecs (HTTP/1.1 200) 3 headers in 120 bytes (74 switches on core 1)
[pid: 24646|app: 0|req: 63/281] 113.92.93.76 () {42 vars in 827 bytes} [Wed Aug  1 12:48:12 2018] GET /all/rss/ => generated 1188 bytes in 9 msecs (HTTP/1.1 200) 3 headers in 120 bytes (74 switches on core 0)
[pid: 24647|app: 0|req: 31/282] 113.92.93.76 () {44 vars in 958 bytes} [Wed Aug  1 12:48:25 2018] GET /archive/2018/7/ => generated 6552 bytes in 180 msecs (HTTP/1.1 200) 3 headers in 110 bytes (1 switches on core 1)
[pid: 24645|app: 0|req: 61/283] 113.92.93.76 () {46 vars in 959 bytes} [Wed Aug  1 12:49:27 2018] GET / => generated 8588 bytes in 17 msecs (HTTP/1.1 200) 3 headers in 110 bytes (1 switches on core 1)
[pid: 24644|app: 0|req: 117/284] 113.92.93.76 () {44 vars in 928 bytes} [Wed Aug  1 13:02:38 2018] GET / => generated 8588 bytes in 19 msecs (HTTP/1.1 200) 3 headers in 110 bytes (1 switches on core 0)
[pid: 24644|app: 0|req: 118/285] 113.92.93.76 () {54 vars in 1294 bytes} [Wed Aug  1 13:07:23 2018] POST /admin/blog/post/add/ => generated 10519 bytes in 74 msecs (HTTP/1.1 200) 7 headers in 382 bytes (1 switches on core 1)
[pid: 24645|app: 0|req: 62/286] 113.92.93.76 () {44 vars in 901 bytes} [Wed Aug  1 13:07:24 2018] GET /admin/jsi18n/ => generated 7682 bytes in 4 msecs (HTTP/1.1 200) 4 headers in 115 bytes (1 switches on core 0)
[pid: 24645|app: 0|req: 63/287] 113.92.93.76 () {54 vars in 1294 bytes} [Wed Aug  1 13:07:33 2018] POST /admin/blog/post/add/ => generated 0 bytes in 133 msecs (HTTP/1.1 302) 8 headers in 487 bytes (1 switches on core 1)
[pid: 24644|app: 0|req: 119/288] 113.92.93.76 () {44 vars in 1128 bytes} [Wed Aug  1 13:07:37 2018] GET / => generated 10306 bytes in 23 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 0)
[pid: 24644|app: 0|req: 120/289] 113.92.93.76 () {48 vars in 1255 bytes} [Wed Aug  1 13:07:38 2018] GET /admin/blog/post/ => generated 6355 bytes in 36 msecs (HTTP/1.1 200) 8 headers in 465 bytes (1 switches on core 1)
[pid: 24644|app: 0|req: 121/290] 113.92.93.76 () {44 vars in 897 bytes} [Wed Aug  1 13:07:38 2018] GET /admin/jsi18n/ => generated 7682 bytes in 4 msecs (HTTP/1.1 200) 4 headers in 115 bytes (1 switches on core 0)
![Alt text](/var/www/blog/static/images/django_blog/01.jpg)
------------------------------------------------------------------------------------------------------------------------
<p><img alt="Alt text" src="/var/www/blog/static/images/django_blog/01.jpg" /></p>
<div class="toc">
<ul></ul>
</div>

[pid: 24647|app: 0|req: 32/291] 113.92.93.76 () {46 vars in 986 bytes} [Wed Aug  1 13:07:39 2018] GET /post/3/ => generated 10502 bytes in 36 msecs (HTTP/1.1 200) 5 headers in 279 bytes (1 switches on core 0)
Not Found: /var/www/blog/static/images/django_blog/01.jpg
[pid: 24644|app: 0|req: 122/292] 113.92.93.76 () {44 vars in 988 bytes} [Wed Aug  1 13:07:40 2018] GET /var/www/blog/static/images/django_blog/01.jpg => generated 3477 bytes in 5 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 0)
[pid: 24647|app: 0|req: 33/293] 113.92.93.76 () {46 vars in 1038 bytes} [Wed Aug  1 13:07:44 2018] GET /admin/blog/post/3/change/ => generated 10664 bytes in 86 msecs (HTTP/1.1 200) 7 headers in 382 bytes (1 switches on core 1)
[pid: 24644|app: 0|req: 123/294] 113.92.93.76 () {44 vars in 906 bytes} [Wed Aug  1 13:07:45 2018] GET /admin/jsi18n/ => generated 7682 bytes in 4 msecs (HTTP/1.1 200) 4 headers in 115 bytes (1 switches on core 1)
[pid: 24646|app: 0|req: 64/295] 113.92.93.76 () {54 vars in 1309 bytes} [Wed Aug  1 13:08:36 2018] POST /admin/blog/post/3/change/ => generated 0 bytes in 45 msecs (HTTP/1.1 302) 8 headers in 487 bytes (1 switches on core 0)
[pid: 24644|app: 0|req: 124/296] 113.92.93.76 () {48 vars in 1260 bytes} [Wed Aug  1 13:08:37 2018] GET /admin/blog/post/ => generated 6355 bytes in 37 msecs (HTTP/1.1 200) 8 headers in 465 bytes (1 switches on core 1)
[pid: 24646|app: 0|req: 65/297] 113.92.93.76 () {44 vars in 897 bytes} [Wed Aug  1 13:08:37 2018] GET /admin/jsi18n/ => generated 7682 bytes in 5 msecs (HTTP/1.1 200) 4 headers in 115 bytes (1 switches on core 1)
![Alt text](images/django_blog/01.jpg)
------------------------------------------------------------------------------------------------------------------------
<p><img alt="Alt text" src="images/django_blog/01.jpg" /></p>
<div class="toc">
<ul></ul>
</div>

[pid: 24645|app: 0|req: 64/298] 113.92.93.76 () {46 vars in 973 bytes} [Wed Aug  1 13:08:39 2018] GET /post/3/ => generated 10481 bytes in 41 msecs (HTTP/1.1 200) 5 headers in 279 bytes (1 switches on core 0)
Not Found: /post/3/images/django_blog/01.jpg
[pid: 24645|app: 0|req: 65/299] 113.92.93.76 () {44 vars in 962 bytes} [Wed Aug  1 13:08:39 2018] GET /post/3/images/django_blog/01.jpg => generated 3438 bytes in 4 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 1)
[pid: 24647|app: 0|req: 34/300] 113.92.93.76 () {46 vars in 1038 bytes} [Wed Aug  1 13:08:50 2018] GET /admin/blog/post/3/change/ => generated 10643 bytes in 98 msecs (HTTP/1.1 200) 7 headers in 382 bytes (1 switches on core 0)
[pid: 24645|app: 0|req: 66/301] 113.92.93.76 () {44 vars in 906 bytes} [Wed Aug  1 13:08:51 2018] GET /admin/jsi18n/ => generated 7682 bytes in 4 msecs (HTTP/1.1 200) 4 headers in 115 bytes (1 switches on core 1)
[pid: 24646|app: 0|req: 66/302] 113.92.93.76 () {54 vars in 1309 bytes} [Wed Aug  1 13:09:07 2018] POST /admin/blog/post/3/change/ => generated 0 bytes in 35 msecs (HTTP/1.1 302) 8 headers in 487 bytes (1 switches on core 1)
[pid: 24644|app: 0|req: 125/303] 113.92.93.76 () {48 vars in 1260 bytes} [Wed Aug  1 13:09:07 2018] GET /admin/blog/post/ => generated 6355 bytes in 38 msecs (HTTP/1.1 200) 8 headers in 465 bytes (1 switches on core 0)
[pid: 24644|app: 0|req: 126/304] 113.92.93.76 () {44 vars in 897 bytes} [Wed Aug  1 13:09:07 2018] GET /admin/jsi18n/ => generated 7682 bytes in 8 msecs (HTTP/1.1 200) 4 headers in 115 bytes (1 switches on core 1)
![Alt text](static/images/django_blog/01.jpg)
------------------------------------------------------------------------------------------------------------------------
<p><img alt="Alt text" src="static/images/django_blog/01.jpg" /></p>
<div class="toc">
<ul></ul>
</div>

[pid: 24645|app: 0|req: 67/305] 113.92.93.76 () {46 vars in 973 bytes} [Wed Aug  1 13:09:10 2018] GET /post/3/ => generated 10488 bytes in 69 msecs (HTTP/1.1 200) 5 headers in 279 bytes (1 switches on core 0)
Not Found: /post/3/static/images/django_blog/01.jpg
[pid: 24644|app: 0|req: 127/306] 113.92.93.76 () {44 vars in 976 bytes} [Wed Aug  1 13:09:11 2018] GET /post/3/static/images/django_blog/01.jpg => generated 3459 bytes in 4 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 1)
[pid: 24645|app: 0|req: 68/307] 113.92.93.76 () {46 vars in 1038 bytes} [Wed Aug  1 13:09:16 2018] GET /admin/blog/post/3/change/ => generated 10650 bytes in 73 msecs (HTTP/1.1 200) 7 headers in 382 bytes (1 switches on core 1)
[pid: 24644|app: 0|req: 128/308] 113.92.93.76 () {44 vars in 906 bytes} [Wed Aug  1 13:09:17 2018] GET /admin/jsi18n/ => generated 7682 bytes in 11 msecs (HTTP/1.1 200) 4 headers in 115 bytes (1 switches on core 1)
[pid: 24645|app: 0|req: 69/309] 113.92.93.76 () {54 vars in 1309 bytes} [Wed Aug  1 13:09:24 2018] POST /admin/blog/post/3/change/ => generated 0 bytes in 23 msecs (HTTP/1.1 302) 8 headers in 487 bytes (1 switches on core 0)
[pid: 24645|app: 0|req: 70/310] 113.92.93.76 () {48 vars in 1260 bytes} [Wed Aug  1 13:09:24 2018] GET /admin/blog/post/ => generated 6355 bytes in 35 msecs (HTTP/1.1 200) 8 headers in 465 bytes (1 switches on core 1)
[pid: 24644|app: 0|req: 129/311] 113.92.93.76 () {44 vars in 897 bytes} [Wed Aug  1 13:09:25 2018] GET /admin/jsi18n/ => generated 7682 bytes in 4 msecs (HTTP/1.1 200) 4 headers in 115 bytes (1 switches on core 0)
![Alt text](/static/images/django_blog/01.jpg)
------------------------------------------------------------------------------------------------------------------------
<p><img alt="Alt text" src="/static/images/django_blog/01.jpg" /></p>
<div class="toc">
<ul></ul>
</div>

[pid: 24645|app: 0|req: 71/312] 113.92.93.76 () {46 vars in 973 bytes} [Wed Aug  1 13:09:27 2018] GET /post/3/ => generated 10489 bytes in 59 msecs (HTTP/1.1 200) 5 headers in 279 bytes (1 switches on core 0)
[pid: 24645|app: 0|req: 72/313] 113.92.93.76 () {46 vars in 1038 bytes} [Wed Aug  1 13:09:36 2018] GET /admin/blog/post/3/change/ => generated 10651 bytes in 63 msecs (HTTP/1.1 200) 7 headers in 382 bytes (1 switches on core 1)
[pid: 24645|app: 0|req: 73/314] 113.92.93.76 () {44 vars in 906 bytes} [Wed Aug  1 13:09:38 2018] GET /admin/jsi18n/ => generated 7682 bytes in 4 msecs (HTTP/1.1 200) 4 headers in 115 bytes (1 switches on core 0)
[pid: 24644|app: 0|req: 130/315] 113.92.93.76 () {54 vars in 1311 bytes} [Wed Aug  1 13:16:40 2018] POST /admin/blog/post/3/change/ => generated 0 bytes in 574 msecs (HTTP/1.1 302) 8 headers in 487 bytes (1 switches on core 0)
[pid: 24644|app: 0|req: 131/316] 113.92.93.76 () {48 vars in 1260 bytes} [Wed Aug  1 13:16:43 2018] GET /admin/blog/post/ => generated 6355 bytes in 67 msecs (HTTP/1.1 200) 8 headers in 465 bytes (1 switches on core 1)
![Alt text](/static/images/django_blog/01.jpg)

---
typora-copy-images-to: images
typora-root-url: images
---

# Django是个啥

​	最初是被开发来用于管理劳伦斯出版集团旗下的一些以新闻内容为主的网站的。并于2005年7月在BSD许可证下发布。这套框架是以比利时的吉普赛爵士吉他手Django Reinhardt来命名的。

​	Django的主要目标是使得开发复杂的、数据库驱动的网站变得简单。Django注重组件的重用性和“可插拔性”，敏捷开发和DRY法则（Don't Repeat Yourself）。在Django中Python被普遍使用，甚至包括配置文件和数据模型。

- 由 Python 开发的一个免费的开源网站框架，可以用于快速搭建高性能，优雅的网站

- Django 中提供了开发网站经常用到的模块，常见的代码都为你写好了

- Django 提供了通用Web开发模式的高度抽象，提供了频繁进行的编程作业的快速解决方法，以及为“如何解决问题”提供了清晰明了的约定。

- Django的理念是DRY(Don't Repeat Yourself)来鼓励快速开发！

  

# 开发环境

Ubuntu + Python3  + Django + PyCharm



# Ubuntu系统和命令介绍

### 系统设置

### 常用命令

- cd
- ls
- cp
- mv
- rm
- mkdir
- pwd
- touch
- cat
- history
- ps
  - ps -aux
- kill 
  - kill -9 pid
- su/sudo
- chmod
- grep
- which
- whereis
- ifconfig
- netstat
  - netstat -antp 查看网络连接状态
- wget
- ssh username@host -p
  - ssh-keygen
- tar
  - tar -zxvf 解压缩
  - tar -czvf 压缩
- du
  - du -sh
- df
  - df -h
- apt install
- apt update
- apt remove
- apt autoremove
- dpkg -i
- vi/vim

# BS/CS

​        C/S 架构即“客户端-服务器” 架构。这里的“客户端”可以是有 GUI （图形用户界面）的定制软件，也可以是浏览器，甚至可以是通过 SSH 访问服务器的命令行脚本。只要是客户端通过访问服务器调取计算或者存储资源的，统统都是 C/S 架构。所谓的 Browser-Server 架构其实是 C/S 架构的一种特殊的实现形式，而不是其对立面。

- C/S:
  - C: Client
  - S: Server
- B/S
  - B: Browser
  - S: Server       

# MVC/MVT

- MVC

  - M: Model（模型）
  - V: View（视图）
  - C: Controller（控制器）

- MVT

  - M: Model（模型），主要封装对数据库层的访问，对数据库中的数据进行增、删、改、查操作。

  - V: View（视图），用于封装结果，生成页面展示的html内容。

  - T: Template（模板），用于接收请求，处理业务逻辑，与Model和View交互，返回结果。

    ​

# HelloDjango项目

### 创建虚拟环境

### 虚拟环境的优点

- 使不同应用开发环境独立
- 环境升级不影响其他应用，也不会影响全局的python环境
- 可以防止系统中出现包管理混乱和版本冲突

开发会用 virtualenv 来管理多个开发环境

#### Linux/MacOS 下

virtualenvwrapper 使得virtualenv变得更好用，所以我们一起安装了

```
(sudo) pip install virtualenv virtualenvwrapper
```

修改~/.bash_profile或其它环境变量相关文件(如 .bashrc 或用 ZSH 之后的 .zshrc)，添加以下语句

```
export WORKON_HOME=$HOME/.virtualenvs
export PROJECT_HOME=$HOME/workspace
source /usr/local/bin/virtualenvwrapper.sh(每台机子的位置不一样，可以通过find命令找到)
```

修改后使之立即生效(也可以重启终端使之生效)：

```
source ~/.bash_profile
```



#### Windows 下：

```
pip install virtualenv virtualenvwrapper-win
```

【可选】Windows下默认虚拟环境是放在用户名下面的Envs中的，与桌面，我的文档，下载等文件夹在一块的。更改方法：计算机，属性，高级系统设置，环境变量，添加WORKON_HOME，如图（windows 10 环境变量设置截图）：

![](/1.png)

#### 虚拟环境使用方法：

- **mkvirtualenv django：创建运行环境django**

- **workon django: 工作在 django环境 或 从其它环境切换到 django环境**

- **deactivate**: 退出终端环境

- **其它的：**

- **rmvirtualenv** ENV：删除运行环境ENV

- **mkproject** mic：创建mic项目和运行环境mic

- **mktmpenv**：创建临时运行环境

- **lsvirtualenv**: 列出可用的运行环境

- **lssitepackages**: 列出当前环境安装了的包

  ​




### 安装Django框架

- pip install django==1.11.7

- 测试django是否已经安装好

  - 进入python shell

    ```python
    import django
    django.get_version()
    ```

- pip list 显示当前python环境中的所有的库

- pip freeze 显示当前python环境中的除系统内置库外的所有第三方库

### 创建HelloDJango项目

- 开启一个django项目 django-admin startproject day01_HelloDjango
- 测试django项目环境 python manage.py runserver
  - python manage.py runserver 0.0.0.0:8000 表示允许本机所有的IP被外网访问
  - python manage.py runserver 9000 使用本机运行，但端口是9000
- 开启自己的App
  - python manage.py startapp App



### Django的项目结构

1. manage.py
   - 管理整个项目
2. XXX/settings.py  
   - 项目配置文件
3. XXX/urls.py
   - 路由器，接收用户请求，分发给视图函数（控制器）
4. XXX/wsgi.py
   - 网关接口，通常用在线上环境部署（开发过程中不会接触）

### settings.py

1. DEBUG 是否打开DEBUG
2. ALLOWED_HOSTS 允许访问的主机
3. INSTALLED_APPS   安装了的应用 
4. DATABASES   数据库配置
5. LANGUAGE_CODE 中文 zh-hans
6. TIME_ZONE  中国 Asia/Shanghai



### Pycharm安装

1. 解压
2. 目录结构中会有  bin
3. 进入bin
4. bin 中pycharm.sh
5. 执行 ./pycharm.sh
6. 如果想在终端中的任何位置运行，那就配置到环境变量中



### 创建数据库

- 创建更改的文件
  - python manage.py makemigrations
- 将生成的py文件应用到数据库
  - python manage.py migrate
- 清空数据库
  - python manage.py flush
- 导入导出数据
  - python manage.py dumpdata appname > appname.json
  - python manage.py loaddata appname.json

### 创建视图

- 需要配置到工程的配置文件中settings中的INSTALLED_APPS
- views中定义函数，接收request，返回response
- 在urls中配置路由规则
  - 在根urls中配置（管理麻烦，配置简单）
  - 在App中创建自己的urls，在urls中书写规则，将urls配置到工程urls中
- 创建模板目录，在views返回时调用模板的渲染
- 变更数据库
  - 在settings中配置数据库信息



# Django请求流程

- 进来的请求转入/index/。
- Django 通过在 ROOT_URLCONF 配置来决定根 URLconf。
- Django 在 URLconf 中的所有 URL 模式中，查找第一个匹配 /index/ 的条目。
- 如果找到匹配，将调用相应的视图函数。
- 视图函数返回一个 HttpResponse。
- Django 转换 HttpResponse 为一个适合的 HTTP response， 以 Web page 显示出来。



# 设计一个小项目

### 需求分析

- 本示例完成“班级-学生”信息的维护，需要存储两种数据：班级、学生
- 班级表结构设计：
  - 表名：Grade
  - 班级名称：g_name
  - 班级人数：g_num
- 学生表结构设计：
  - 表名：Student
  - 学生姓名：s_name
  - 学生性别：s_gender
  - 所属班级：s_grade
- 班级-学生的关系为一对多

### 数据库配置

- 在settings.py文件中，通过DATABASES项进行数据库设置
- django支持的数据库包括：sqlite、mysql等主流数据库
- Django默认使用SQLite数据库

### 创建应用

- 在一个项目中可以创建一到多个应用，每个应用进行一种业务处理
- 创建应用的命令：

```
python manage.py startapp day1_hello_django
```

- 应用的目录结构如下图

![](/django项目目录结构.png)

### 定义模型类

- 有一个数据表，就有一个模型类与之对应
- 打开models.py文件，定义模型类
- 引入包from django.db import models
- 模型类继承自models.Model类
- **说明：不需要定义主键列，在生成时会自动添加，并且值为自动增长**
- 当输出对象时，会调用对象的str方法

```python
from django.db import models

class Grade(models.Model):
    g_name = models.CharField(max_length=20, db_column="班级名称")
    g_num = models.IntegerField(default=30)
    g_crete_date = models.DateTimeField(auto_now=True)

class Student(models.Model):
    s_name = models.CharField(max_length=20, db_column="姓名")
    s_age = models.IntegerField(default=20, db_column="年龄")
    s_sex = models.BooleanField(default=True)
    s_birthday = models.DateTimeField()
    s_grade = models.ForeignKey(Grade)

    class Meta:
        ordering = ["-s_age"]
        # 为数据库设置别名
        verbose_name = "学生表"
    	verbose_name_plural = "学生表"
        
    def _ _str_ _(self):
        return "%d" % self.pk
```

### 生成数据表

- 激活模型：编辑settings.py文件，将booktest应用加入到installed_apps中

  ![1531115052424](/注册app.png)

- 生成迁移文件：根据模型类生成sql语句

```
python manage.py makemigrations
```

- 迁移文件被生成到应用的migrations目录

![1531115146872](/迁移文件.png)

- 执行迁移：执行sql语句生成数据表

```
python manage.py migrate
```

### 测试数据操作

- 进入python shell，进行简单的模型API练习

```
python manage.py shell
```

- 进入shell后提示如下：

![](/进入django shell.png)

- 引入需要的包：

```
from App.models import Grade,Student
```

- 查询所有班级信息：

```
Grade.objects.all()
```

- 新建班级信息：

```
grade = Grade()
grade.g_name = "深圳python1805班"
grade.g_num = 40
grade.save()
```

- 查找班级信息：

```
grade = Grade.objects.get(pk=1)
```

- 输出班级信息：

```
grade
grade.id
grade.g_name
```

- 修改班级信息：

```
grade.g_name="大神班"
grade.save()
```

- 删除班级信息：

```
grade.delete()
```

### 关联对象的操作

- 对于Student可以按照上面的操作方式进行
- 添加，注意添加关联对象

```
s=Student()
s.s_name='张三'
s.s_sex=True
s.scontent='爱好打篮球'
# 注意grade为Grade的实例，上面我们已经删除了，这里需要重新创建
s.sclass=grade
s.save()
```

### 运行项目

```
python manage.py runserver ip:port
```



# 项目主要部分

### 视图

- 在django中，视图的作用是对路由转发过来的url进行处理
- 视图函数接收的第一个参数是request对象，request对象中包含了请求的信息
- 视图函数写每个app下的views.py文件中

```
from django.shortcuts import render
from django.http import HttpResponse

# Create your views here.

def index(request):
    return HttpResponse("Hello Django")
```

注意：视图函数的第一个参数必须是request，返回必须调用django的定义的方法规范。

### 路由

- 在视图函数写完后，要编写相应的url规则，这样当我们在浏览器上输入网址的时候才能转到相应的视图函数处理逻辑
- 只定义路径部分，不定义域名
- 路由函数的url部分遵循正则的书写方式
- 路由规则由两部分必须指定的参数和其他可选参数组成

```
url(r'^index/', App.index, name="index"),
```

注：每次定义完路由规则，在代码的末尾添加逗号

- 在编写路由规则之前必须导入相应的视图
- 在组织项目时，将app和项目的路由分离



### 模板

- 模板是HTML文件，通过占位符来传递视图函数的数据

- 每个app目录下都可以创建templates的文件夹，django会自动从这些app里寻找相应的模板

  

##### 定义模板

定义index.html模板文件

```
<!DOCTYPE html>
<html>
<head>
  <title>首页</title>
</head>
<body>
<h1>学生列表</h1>
<ul>
{%for student in students%}
<li>
  {{student.s_name}}
</li>
{%endfor%}
</ul>
</body>
</html>
```

定义detail.html模板

```
<!DOCTYPE html>
<html>
<head>
  <title>详情页</title>
</head>
<body>
<h1>学生详情</h1>
<ul>
<li>
  {{student.s_name}}
  {{student.s_gender}}
  {{student.s_content}}
</li>
</ul>
</body>
</html>
```

##### 使用模板

- 定义视图

```
def index(request):
    students = StudentInfo.objects.all()
    return render(request, "index.html", {"students":students})

def index_page(request, id):
    student = StudentInfo.objects.get(pk=id)
    return render(request, "detail.html", {"student":student})
```

- 定义路由

```
url(r'index/$', class_view.index, name="index"),
url(r'index/(\d+)/$', class_view.index_page, name="index_page"),
```

- 运行项目
  - python manage.py runserver
------------------------------------------------------------------------------------------------------------------------
<p><img alt="Alt text" src="/static/images/django_blog/01.jpg" /></p>
<hr />
<p>typora-copy-images-to: images
typora-root-url: images</p>
<hr />
<h1 id="django是个啥">Django是个啥</h1>
<p>​   最初是被开发来用于管理劳伦斯出版集团旗下的一些以新闻内容为主的网站的。并于2005年7月在BSD许可证下发布。这套框架是以比利时的吉普赛爵士吉他手Django Reinhardt来命名的。</p>
<p>​   Django的主要目标是使得开发复杂的、数据库驱动的网站变得简单。Django注重组件的重用性和“可插拔性”，敏捷开发和DRY法则（Don't Repeat Yourself）。在Django中Python被普遍使用，甚至包括配置文件和数据模型。</p>
<ul>
<li>
<p>由 Python 开发的一个免费的开源网站框架，可以用于快速搭建高性能，优雅的网站</p>
</li>
<li>
<p>Django 中提供了开发网站经常用到的模块，常见的代码都为你写好了</p>
</li>
<li>
<p>Django 提供了通用Web开发模式的高度抽象，提供了频繁进行的编程作业的快速解决方法，以及为“如何解决问题”提供了清晰明了的约定。</p>
</li>
<li>
<p>Django的理念是DRY(Don't Repeat Yourself)来鼓励快速开发！</p>
</li>
</ul>
<h1 id="开发环境">开发环境</h1>
<p>Ubuntu + Python3  + Django + PyCharm</p>
<h1 id="ubuntu系统和命令介绍">Ubuntu系统和命令介绍</h1>
<h3 id="系统设置">系统设置</h3>
<h3 id="常用命令">常用命令</h3>
<ul>
<li>cd</li>
<li>ls</li>
<li>cp</li>
<li>mv</li>
<li>rm</li>
<li>mkdir</li>
<li>pwd</li>
<li>touch</li>
<li>cat</li>
<li>history</li>
<li>ps</li>
<li>ps -aux</li>
<li>kill </li>
<li>kill -9 pid</li>
<li>su/sudo</li>
<li>chmod</li>
<li>grep</li>
<li>which</li>
<li>whereis</li>
<li>ifconfig</li>
<li>netstat</li>
<li>netstat -antp 查看网络连接状态</li>
<li>wget</li>
<li>ssh username@host -p</li>
<li>ssh-keygen</li>
<li>tar</li>
<li>tar -zxvf 解压缩</li>
<li>tar -czvf 压缩</li>
<li>du</li>
<li>du -sh</li>
<li>df</li>
<li>df -h</li>
<li>apt install</li>
<li>apt update</li>
<li>apt remove</li>
<li>apt autoremove</li>
<li>dpkg -i</li>
<li>vi/vim</li>
</ul>
<h1 id="bscs">BS/CS</h1>
<p>​        C/S 架构即“客户端-服务器” 架构。这里的“客户端”可以是有 GUI （图形用户界面）的定制软件，也可以是浏览器，甚至可以是通过 SSH 访问服务器的命令行脚本。只要是客户端通过访问服务器调取计算或者存储资源的，统统都是 C/S 架构。所谓的 Browser-Server 架构其实是 C/S 架构的一种特殊的实现形式，而不是其对立面。</p>
<ul>
<li>C/S:</li>
<li>C: Client</li>
<li>S: Server</li>
<li>B/S</li>
<li>B: Browser</li>
<li>S: Server       </li>
</ul>
<h1 id="mvcmvt">MVC/MVT</h1>
<ul>
<li>
<p>MVC</p>
</li>
<li>
<p>M: Model（模型）</p>
</li>
<li>V: View（视图）</li>
<li>
<p>C: Controller（控制器）</p>
</li>
<li>
<p>MVT</p>
</li>
<li>
<p>M: Model（模型），主要封装对数据库层的访问，对数据库中的数据进行增、删、改、查操作。</p>
</li>
<li>
<p>V: View（视图），用于封装结果，生成页面展示的html内容。</p>
</li>
<li>
<p>T: Template（模板），用于接收请求，处理业务逻辑，与Model和View交互，返回结果。</p>
<p>​</p>
</li>
</ul>
<h1 id="hellodjango项目">HelloDjango项目</h1>
<h3 id="创建虚拟环境">创建虚拟环境</h3>
<h3 id="虚拟环境的优点">虚拟环境的优点</h3>
<ul>
<li>使不同应用开发环境独立</li>
<li>环境升级不影响其他应用，也不会影响全局的python环境</li>
<li>可以防止系统中出现包管理混乱和版本冲突</li>
</ul>
<p>开发会用 virtualenv 来管理多个开发环境</p>
<h4 id="linuxmacos-下">Linux/MacOS 下</h4>
<p>virtualenvwrapper 使得virtualenv变得更好用，所以我们一起安装了</p>
<div class="codehilite"><pre><span></span>(sudo) pip install virtualenv virtualenvwrapper
</pre></div>


<p>修改~/.bash_profile或其它环境变量相关文件(如 .bashrc 或用 ZSH 之后的 .zshrc)，添加以下语句</p>
<div class="codehilite"><pre><span></span>export WORKON_HOME=$HOME/.virtualenvs
export PROJECT_HOME=$HOME/workspace
source /usr/local/bin/virtualenvwrapper.sh(每台机子的位置不一样，可以通过find命令找到)
</pre></div>


<p>修改后使之立即生效(也可以重启终端使之生效)：</p>
<div class="codehilite"><pre><span></span>source ~/.bash_profile
</pre></div>


<h4 id="windows-下">Windows 下：</h4>
<div class="codehilite"><pre><span></span>pip install virtualenv virtualenvwrapper-win
</pre></div>


<p>【可选】Windows下默认虚拟环境是放在用户名下面的Envs中的，与桌面，我的文档，下载等文件夹在一块的。更改方法：计算机，属性，高级系统设置，环境变量，添加WORKON_HOME，如图（windows 10 环境变量设置截图）：</p>
<p><img alt="" src="/1.png" /></p>
<h4 id="虚拟环境使用方法">虚拟环境使用方法：</h4>
<ul>
<li>
<p><strong>mkvirtualenv django：创建运行环境django</strong></p>
</li>
<li>
<p><strong>workon django: 工作在 django环境 或 从其它环境切换到 django环境</strong></p>
</li>
<li>
<p><strong>deactivate</strong>: 退出终端环境</p>
</li>
<li>
<p><strong>其它的：</strong></p>
</li>
<li>
<p><strong>rmvirtualenv</strong> ENV：删除运行环境ENV</p>
</li>
<li>
<p><strong>mkproject</strong> mic：创建mic项目和运行环境mic</p>
</li>
<li>
<p><strong>mktmpenv</strong>：创建临时运行环境</p>
</li>
<li>
<p><strong>lsvirtualenv</strong>: 列出可用的运行环境</p>
</li>
<li>
<p><strong>lssitepackages</strong>: 列出当前环境安装了的包</p>
</li>
</ul>
<p>​</p>
<h3 id="安装django框架">安装Django框架</h3>
<ul>
<li>
<p>pip install django==1.11.7</p>
</li>
<li>
<p>测试django是否已经安装好</p>
</li>
<li>
<p>进入python shell</p>
<p><code>python
import django
django.get_version()</code></p>
</li>
<li>
<p>pip list 显示当前python环境中的所有的库</p>
</li>
<li>
<p>pip freeze 显示当前python环境中的除系统内置库外的所有第三方库</p>
</li>
</ul>
<h3 id="创建hellodjango项目">创建HelloDJango项目</h3>
<ul>
<li>开启一个django项目 django-admin startproject day01_HelloDjango</li>
<li>测试django项目环境 python manage.py runserver</li>
<li>python manage.py runserver 0.0.0.0:8000 表示允许本机所有的IP被外网访问</li>
<li>python manage.py runserver 9000 使用本机运行，但端口是9000</li>
<li>开启自己的App</li>
<li>python manage.py startapp App</li>
</ul>
<h3 id="django的项目结构">Django的项目结构</h3>
<ol>
<li>manage.py</li>
<li>管理整个项目</li>
<li>XXX/settings.py  </li>
<li>项目配置文件</li>
<li>XXX/urls.py</li>
<li>路由器，接收用户请求，分发给视图函数（控制器）</li>
<li>XXX/wsgi.py</li>
<li>网关接口，通常用在线上环境部署（开发过程中不会接触）</li>
</ol>
<h3 id="settingspy">settings.py</h3>
<ol>
<li>DEBUG 是否打开DEBUG</li>
<li>ALLOWED_HOSTS 允许访问的主机</li>
<li>INSTALLED_APPS   安装了的应用 </li>
<li>DATABASES   数据库配置</li>
<li>LANGUAGE_CODE 中文 zh-hans</li>
<li>TIME_ZONE  中国 Asia/Shanghai</li>
</ol>
<h3 id="pycharm安装">Pycharm安装</h3>
<ol>
<li>解压</li>
<li>目录结构中会有  bin</li>
<li>进入bin</li>
<li>bin 中pycharm.sh</li>
<li>执行 ./pycharm.sh</li>
<li>如果想在终端中的任何位置运行，那就配置到环境变量中</li>
</ol>
<h3 id="创建数据库">创建数据库</h3>
<ul>
<li>创建更改的文件</li>
<li>python manage.py makemigrations</li>
<li>将生成的py文件应用到数据库</li>
<li>python manage.py migrate</li>
<li>清空数据库</li>
<li>python manage.py flush</li>
<li>导入导出数据</li>
<li>python manage.py dumpdata appname &gt; appname.json</li>
<li>python manage.py loaddata appname.json</li>
</ul>
<h3 id="创建视图">创建视图</h3>
<ul>
<li>需要配置到工程的配置文件中settings中的INSTALLED_APPS</li>
<li>views中定义函数，接收request，返回response</li>
<li>在urls中配置路由规则</li>
<li>在根urls中配置（管理麻烦，配置简单）</li>
<li>在App中创建自己的urls，在urls中书写规则，将urls配置到工程urls中</li>
<li>创建模板目录，在views返回时调用模板的渲染</li>
<li>变更数据库</li>
<li>在settings中配置数据库信息</li>
</ul>
<h1 id="django请求流程">Django请求流程</h1>
<ul>
<li>进来的请求转入/index/。</li>
<li>Django 通过在 ROOT_URLCONF 配置来决定根 URLconf。</li>
<li>Django 在 URLconf 中的所有 URL 模式中，查找第一个匹配 /index/ 的条目。</li>
<li>如果找到匹配，将调用相应的视图函数。</li>
<li>视图函数返回一个 HttpResponse。</li>
<li>Django 转换 HttpResponse 为一个适合的 HTTP response， 以 Web page 显示出来。</li>
</ul>
<h1 id="设计一个小项目">设计一个小项目</h1>
<h3 id="需求分析">需求分析</h3>
<ul>
<li>本示例完成“班级-学生”信息的维护，需要存储两种数据：班级、学生</li>
<li>班级表结构设计：</li>
<li>表名：Grade</li>
<li>班级名称：g_name</li>
<li>班级人数：g_num</li>
<li>学生表结构设计：</li>
<li>表名：Student</li>
<li>学生姓名：s_name</li>
<li>学生性别：s_gender</li>
<li>所属班级：s_grade</li>
<li>班级-学生的关系为一对多</li>
</ul>
<h3 id="数据库配置">数据库配置</h3>
<ul>
<li>在settings.py文件中，通过DATABASES项进行数据库设置</li>
<li>django支持的数据库包括：sqlite、mysql等主流数据库</li>
<li>Django默认使用SQLite数据库</li>
</ul>
<h3 id="创建应用">创建应用</h3>
<ul>
<li>在一个项目中可以创建一到多个应用，每个应用进行一种业务处理</li>
<li>创建应用的命令：</li>
</ul>
<div class="codehilite"><pre><span></span>python manage.py startapp day1_hello_django
</pre></div>


<ul>
<li>应用的目录结构如下图</li>
</ul>
<p><img alt="" src="/django项目目录结构.png" /></p>
<h3 id="定义模型类">定义模型类</h3>
<ul>
<li>有一个数据表，就有一个模型类与之对应</li>
<li>打开models.py文件，定义模型类</li>
<li>引入包from django.db import models</li>
<li>模型类继承自models.Model类</li>
<li><strong>说明：不需要定义主键列，在生成时会自动添加，并且值为自动增长</strong></li>
<li>当输出对象时，会调用对象的str方法</li>
</ul>
<div class="codehilite"><pre><span></span><span class="kn">from</span> <span class="nn">django.db</span> <span class="kn">import</span> <span class="n">models</span>

<span class="k">class</span> <span class="nc">Grade</span><span class="p">(</span><span class="n">models</span><span class="o">.</span><span class="n">Model</span><span class="p">):</span>
    <span class="n">g_name</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">CharField</span><span class="p">(</span><span class="n">max_length</span><span class="o">=</span><span class="mi">20</span><span class="p">,</span> <span class="n">db_column</span><span class="o">=</span><span class="s2">&quot;班级名称&quot;</span><span class="p">)</span>
    <span class="n">g_num</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">IntegerField</span><span class="p">(</span><span class="n">default</span><span class="o">=</span><span class="mi">30</span><span class="p">)</span>
    <span class="n">g_crete_date</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">DateTimeField</span><span class="p">(</span><span class="n">auto_now</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>

<span class="k">class</span> <span class="nc">Student</span><span class="p">(</span><span class="n">models</span><span class="o">.</span><span class="n">Model</span><span class="p">):</span>
    <span class="n">s_name</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">CharField</span><span class="p">(</span><span class="n">max_length</span><span class="o">=</span><span class="mi">20</span><span class="p">,</span> <span class="n">db_column</span><span class="o">=</span><span class="s2">&quot;姓名&quot;</span><span class="p">)</span>
    <span class="n">s_age</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">IntegerField</span><span class="p">(</span><span class="n">default</span><span class="o">=</span><span class="mi">20</span><span class="p">,</span> <span class="n">db_column</span><span class="o">=</span><span class="s2">&quot;年龄&quot;</span><span class="p">)</span>
    <span class="n">s_sex</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">BooleanField</span><span class="p">(</span><span class="n">default</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
    <span class="n">s_birthday</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">DateTimeField</span><span class="p">()</span>
    <span class="n">s_grade</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">ForeignKey</span><span class="p">(</span><span class="n">Grade</span><span class="p">)</span>

    <span class="k">class</span> <span class="nc">Meta</span><span class="p">:</span>
        <span class="n">ordering</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&quot;-s_age&quot;</span><span class="p">]</span>
        <span class="c1"># 为数据库设置别名</span>
        <span class="n">verbose_name</span> <span class="o">=</span> <span class="s2">&quot;学生表&quot;</span>
        <span class="n">verbose_name_plural</span> <span class="o">=</span> <span class="s2">&quot;学生表&quot;</span>

    <span class="k">def</span> <span class="nf">_</span> <span class="n">_str_</span> <span class="n">_</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">return</span> <span class="s2">&quot;</span><span class="si">%d</span><span class="s2">&quot;</span> <span class="o">%</span> <span class="bp">self</span><span class="o">.</span><span class="n">pk</span>
</pre></div>


<h3 id="生成数据表">生成数据表</h3>
<ul>
<li>激活模型：编辑settings.py文件，将booktest应用加入到installed_apps中</li>
</ul>
<p><img alt="1531115052424" src="/注册app.png" /></p>
<ul>
<li>生成迁移文件：根据模型类生成sql语句</li>
</ul>
<div class="codehilite"><pre><span></span>python manage.py makemigrations
</pre></div>


<ul>
<li>迁移文件被生成到应用的migrations目录</li>
</ul>
<p><img alt="1531115146872" src="/迁移文件.png" /></p>
<ul>
<li>执行迁移：执行sql语句生成数据表</li>
</ul>
<div class="codehilite"><pre><span></span>python manage.py migrate
</pre></div>


<h3 id="测试数据操作">测试数据操作</h3>
<ul>
<li>进入python shell，进行简单的模型API练习</li>
</ul>
<div class="codehilite"><pre><span></span>python manage.py shell
</pre></div>


<ul>
<li>进入shell后提示如下：</li>
</ul>
<p>![](/进入django shell.png)</p>
<ul>
<li>引入需要的包：</li>
</ul>
<div class="codehilite"><pre><span></span><span class="kn">from</span> <span class="nn">App.models</span> <span class="kn">import</span> <span class="n">Grade</span><span class="p">,</span><span class="n">Student</span>
</pre></div>


<ul>
<li>查询所有班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>Grade.objects.all()
</pre></div>


<ul>
<li>新建班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>grade = Grade()
grade.g_name = &quot;深圳python1805班&quot;
grade.g_num = 40
grade.save()
</pre></div>


<ul>
<li>查找班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>grade = Grade.objects.get(pk=1)
</pre></div>


<ul>
<li>输出班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>grade
grade.id
grade.g_name
</pre></div>


<ul>
<li>修改班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>grade.g_name=&quot;大神班&quot;
grade.save()
</pre></div>


<ul>
<li>删除班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>grade.delete()
</pre></div>


<h3 id="关联对象的操作">关联对象的操作</h3>
<ul>
<li>对于Student可以按照上面的操作方式进行</li>
<li>添加，注意添加关联对象</li>
</ul>
<div class="codehilite"><pre><span></span>s=Student()
s.s_name=&#39;张三&#39;
s.s_sex=True
s.scontent=&#39;爱好打篮球&#39;
# 注意grade为Grade的实例，上面我们已经删除了，这里需要重新创建
s.sclass=grade
s.save()
</pre></div>


<h3 id="运行项目">运行项目</h3>
<div class="codehilite"><pre><span></span>python manage.py runserver ip:port
</pre></div>


<h1 id="项目主要部分">项目主要部分</h1>
<h3 id="视图">视图</h3>
<ul>
<li>在django中，视图的作用是对路由转发过来的url进行处理</li>
<li>视图函数接收的第一个参数是request对象，request对象中包含了请求的信息</li>
<li>视图函数写每个app下的views.py文件中</li>
</ul>
<div class="codehilite"><pre><span></span><span class="kn">from</span> <span class="nn">django.shortcuts</span> <span class="kn">import</span> <span class="n">render</span>
<span class="kn">from</span> <span class="nn">django.http</span> <span class="kn">import</span> <span class="n">HttpResponse</span>

<span class="c1"># Create your views here.</span>

<span class="k">def</span> <span class="nf">index</span><span class="p">(</span><span class="n">request</span><span class="p">):</span>
    <span class="k">return</span> <span class="n">HttpResponse</span><span class="p">(</span><span class="s2">&quot;Hello Django&quot;</span><span class="p">)</span>
</pre></div>


<p>注意：视图函数的第一个参数必须是request，返回必须调用django的定义的方法规范。</p>
<h3 id="路由">路由</h3>
<ul>
<li>在视图函数写完后，要编写相应的url规则，这样当我们在浏览器上输入网址的时候才能转到相应的视图函数处理逻辑</li>
<li>只定义路径部分，不定义域名</li>
<li>路由函数的url部分遵循正则的书写方式</li>
<li>路由规则由两部分必须指定的参数和其他可选参数组成</li>
</ul>
<div class="codehilite"><pre><span></span>url(r&#39;^index/&#39;, App.index, name=&quot;index&quot;),
</pre></div>


<p>注：每次定义完路由规则，在代码的末尾添加逗号</p>
<ul>
<li>在编写路由规则之前必须导入相应的视图</li>
<li>在组织项目时，将app和项目的路由分离</li>
</ul>
<h3 id="模板">模板</h3>
<ul>
<li>
<p>模板是HTML文件，通过占位符来传递视图函数的数据</p>
</li>
<li>
<p>每个app目录下都可以创建templates的文件夹，django会自动从这些app里寻找相应的模板</p>
</li>
</ul>
<h5 id="定义模板">定义模板</h5>
<p>定义index.html模板文件</p>
<div class="codehilite"><pre><span></span><span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="p">&lt;</span><span class="nt">html</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">title</span><span class="p">&gt;</span>首页<span class="p">&lt;/</span><span class="nt">title</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">h1</span><span class="p">&gt;</span>学生列表<span class="p">&lt;/</span><span class="nt">h1</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">ul</span><span class="p">&gt;</span>
<span class="cp">{%</span><span class="k">for</span> <span class="nv">student</span> <span class="k">in</span> <span class="nv">students</span><span class="cp">%}</span>
<span class="p">&lt;</span><span class="nt">li</span><span class="p">&gt;</span>
  <span class="cp">{{</span><span class="nv">student.s_name</span><span class="cp">}}</span>
<span class="p">&lt;/</span><span class="nt">li</span><span class="p">&gt;</span>
<span class="cp">{%</span><span class="k">endfor</span><span class="cp">%}</span>
<span class="p">&lt;/</span><span class="nt">ul</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span>
</pre></div>


<p>定义detail.html模板</p>
<div class="codehilite"><pre><span></span><span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="p">&lt;</span><span class="nt">html</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">title</span><span class="p">&gt;</span>详情页<span class="p">&lt;/</span><span class="nt">title</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">h1</span><span class="p">&gt;</span>学生详情<span class="p">&lt;/</span><span class="nt">h1</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">ul</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">li</span><span class="p">&gt;</span>
  <span class="cp">{{</span><span class="nv">student.s_name</span><span class="cp">}}</span>
  <span class="cp">{{</span><span class="nv">student.s_gender</span><span class="cp">}}</span>
  <span class="cp">{{</span><span class="nv">student.s_content</span><span class="cp">}}</span>
<span class="p">&lt;/</span><span class="nt">li</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">ul</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span>
</pre></div>


<h5 id="使用模板">使用模板</h5>
<ul>
<li>定义视图</li>
</ul>
<div class="codehilite"><pre><span></span>def index(request):
    students = StudentInfo.objects.all()
    return render(request, &quot;index.html&quot;, {&quot;students&quot;:students})

def index_page(request, id):
    student = StudentInfo.objects.get(pk=id)
    return render(request, &quot;detail.html&quot;, {&quot;student&quot;:student})
</pre></div>


<ul>
<li>定义路由</li>
</ul>
<div class="codehilite"><pre><span></span>url(r&#39;index/$&#39;, class_view.index, name=&quot;index&quot;),
url(r&#39;index/(\d+)/$&#39;, class_view.index_page, name=&quot;index_page&quot;),
</pre></div>


<ul>
<li>运行项目</li>
<li>python manage.py runserver</li>
</ul>
<div class="toc">
<ul>
<li><a href="#django是个啥">Django是个啥</a></li>
<li><a href="#开发环境">开发环境</a></li>
<li><a href="#ubuntu系统和命令介绍">Ubuntu系统和命令介绍</a><ul>
<li><a href="#系统设置">系统设置</a></li>
<li><a href="#常用命令">常用命令</a></li>
</ul>
</li>
<li><a href="#bscs">BS/CS</a></li>
<li><a href="#mvcmvt">MVC/MVT</a></li>
<li><a href="#hellodjango项目">HelloDjango项目</a><ul>
<li><a href="#创建虚拟环境">创建虚拟环境</a></li>
<li><a href="#虚拟环境的优点">虚拟环境的优点</a><ul>
<li><a href="#linuxmacos-下">Linux/MacOS 下</a></li>
<li><a href="#windows-下">Windows 下：</a></li>
<li><a href="#虚拟环境使用方法">虚拟环境使用方法：</a></li>
</ul>
</li>
<li><a href="#安装django框架">安装Django框架</a></li>
<li><a href="#创建hellodjango项目">创建HelloDJango项目</a></li>
<li><a href="#django的项目结构">Django的项目结构</a></li>
<li><a href="#settingspy">settings.py</a></li>
<li><a href="#pycharm安装">Pycharm安装</a></li>
<li><a href="#创建数据库">创建数据库</a></li>
<li><a href="#创建视图">创建视图</a></li>
</ul>
</li>
<li><a href="#django请求流程">Django请求流程</a></li>
<li><a href="#设计一个小项目">设计一个小项目</a><ul>
<li><a href="#需求分析">需求分析</a></li>
<li><a href="#数据库配置">数据库配置</a></li>
<li><a href="#创建应用">创建应用</a></li>
<li><a href="#定义模型类">定义模型类</a></li>
<li><a href="#生成数据表">生成数据表</a></li>
<li><a href="#测试数据操作">测试数据操作</a></li>
<li><a href="#关联对象的操作">关联对象的操作</a></li>
<li><a href="#运行项目">运行项目</a></li>
</ul>
</li>
<li><a href="#项目主要部分">项目主要部分</a><ul>
<li><a href="#视图">视图</a></li>
<li><a href="#路由">路由</a></li>
<li><a href="#模板">模板</a><ul>
<li><a href="#定义模板">定义模板</a></li>
<li><a href="#使用模板">使用模板</a></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>

[pid: 24644|app: 0|req: 132/317] 113.92.93.76 () {46 vars in 973 bytes} [Wed Aug  1 13:16:47 2018] GET /post/3/ => generated 35800 bytes in 480 msecs (HTTP/1.1 200) 5 headers in 279 bytes (1 switches on core 0)
Not Found: /django项目目录结构.png
[pid: 24644|app: 0|req: 133/318] 113.92.93.76 () {44 vars in 990 bytes} [Wed Aug  1 13:16:48 2018] GET /django%E9%A1%B9%E7%9B%AE%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84.png => generated 3462 bytes in 3 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 1)
Not Found: /注册app.png
[pid: 24645|app: 0|req: 74/319] 113.92.93.76 () {44 vars in 936 bytes} [Wed Aug  1 13:16:48 2018] GET /%E6%B3%A8%E5%86%8Capp.png => generated 3393 bytes in 4 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 0)
Not Found: /1.png
[pid: 24645|app: 0|req: 75/320] 113.92.93.76 () {44 vars in 908 bytes} [Wed Aug  1 13:16:49 2018] GET /1.png => generated 3357 bytes in 6 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 1)
Not Found: /迁移文件.png
[pid: 24647|app: 0|req: 35/321] 113.92.93.76 () {44 vars in 954 bytes} [Wed Aug  1 13:16:49 2018] GET /%E8%BF%81%E7%A7%BB%E6%96%87%E4%BB%B6.png => generated 3414 bytes in 5 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 1)
[pid: 24647|app: 0|req: 36/322] 113.92.93.76 () {44 vars in 897 bytes} [Wed Aug  1 13:16:56 2018] GET /admin/jsi18n/ => generated 7682 bytes in 6 msecs (HTTP/1.1 200) 4 headers in 115 bytes (1 switches on core 0)
![Alt text](/static/images/django_blog/01.jpg)

---
typora-copy-images-to: images
typora-root-url: images
---

# Django是个啥

​	最初是被开发来用于管理劳伦斯出版集团旗下的一些以新闻内容为主的网站的。并于2005年7月在BSD许可证下发布。这套框架是以比利时的吉普赛爵士吉他手Django Reinhardt来命名的。

​	Django的主要目标是使得开发复杂的、数据库驱动的网站变得简单。Django注重组件的重用性和“可插拔性”，敏捷开发和DRY法则（Don't Repeat Yourself）。在Django中Python被普遍使用，甚至包括配置文件和数据模型。

- 由 Python 开发的一个免费的开源网站框架，可以用于快速搭建高性能，优雅的网站

- Django 中提供了开发网站经常用到的模块，常见的代码都为你写好了

- Django 提供了通用Web开发模式的高度抽象，提供了频繁进行的编程作业的快速解决方法，以及为“如何解决问题”提供了清晰明了的约定。

- Django的理念是DRY(Don't Repeat Yourself)来鼓励快速开发！

  

# 开发环境

Ubuntu + Python3  + Django + PyCharm



# Ubuntu系统和命令介绍

### 系统设置

### 常用命令

- cd
- ls
- cp
- mv
- rm
- mkdir
- pwd
- touch
- cat
- history
- ps
  - ps -aux
- kill 
  - kill -9 pid
- su/sudo
- chmod
- grep
- which
- whereis
- ifconfig
- netstat
  - netstat -antp 查看网络连接状态
- wget
- ssh username@host -p
  - ssh-keygen
- tar
  - tar -zxvf 解压缩
  - tar -czvf 压缩
- du
  - du -sh
- df
  - df -h
- apt install
- apt update
- apt remove
- apt autoremove
- dpkg -i
- vi/vim

# BS/CS

​        C/S 架构即“客户端-服务器” 架构。这里的“客户端”可以是有 GUI （图形用户界面）的定制软件，也可以是浏览器，甚至可以是通过 SSH 访问服务器的命令行脚本。只要是客户端通过访问服务器调取计算或者存储资源的，统统都是 C/S 架构。所谓的 Browser-Server 架构其实是 C/S 架构的一种特殊的实现形式，而不是其对立面。

- C/S:
  - C: Client
  - S: Server
- B/S
  - B: Browser
  - S: Server       

# MVC/MVT

- MVC

  - M: Model（模型）
  - V: View（视图）
  - C: Controller（控制器）

- MVT

  - M: Model（模型），主要封装对数据库层的访问，对数据库中的数据进行增、删、改、查操作。

  - V: View（视图），用于封装结果，生成页面展示的html内容。

  - T: Template（模板），用于接收请求，处理业务逻辑，与Model和View交互，返回结果。

    ​

# HelloDjango项目

### 创建虚拟环境

### 虚拟环境的优点

- 使不同应用开发环境独立
- 环境升级不影响其他应用，也不会影响全局的python环境
- 可以防止系统中出现包管理混乱和版本冲突

开发会用 virtualenv 来管理多个开发环境

#### Linux/MacOS 下

virtualenvwrapper 使得virtualenv变得更好用，所以我们一起安装了

```
(sudo) pip install virtualenv virtualenvwrapper
```

修改~/.bash_profile或其它环境变量相关文件(如 .bashrc 或用 ZSH 之后的 .zshrc)，添加以下语句

```
export WORKON_HOME=$HOME/.virtualenvs
export PROJECT_HOME=$HOME/workspace
source /usr/local/bin/virtualenvwrapper.sh(每台机子的位置不一样，可以通过find命令找到)
```

修改后使之立即生效(也可以重启终端使之生效)：

```
source ~/.bash_profile
```



#### Windows 下：

```
pip install virtualenv virtualenvwrapper-win
```

【可选】Windows下默认虚拟环境是放在用户名下面的Envs中的，与桌面，我的文档，下载等文件夹在一块的。更改方法：计算机，属性，高级系统设置，环境变量，添加WORKON_HOME，如图（windows 10 环境变量设置截图）：

![](/1.png)

#### 虚拟环境使用方法：

- **mkvirtualenv django：创建运行环境django**

- **workon django: 工作在 django环境 或 从其它环境切换到 django环境**

- **deactivate**: 退出终端环境

- **其它的：**

- **rmvirtualenv** ENV：删除运行环境ENV

- **mkproject** mic：创建mic项目和运行环境mic

- **mktmpenv**：创建临时运行环境

- **lsvirtualenv**: 列出可用的运行环境

- **lssitepackages**: 列出当前环境安装了的包

  ​




### 安装Django框架

- pip install django==1.11.7

- 测试django是否已经安装好

  - 进入python shell

    ```python
    import django
    django.get_version()
    ```

- pip list 显示当前python环境中的所有的库

- pip freeze 显示当前python环境中的除系统内置库外的所有第三方库

### 创建HelloDJango项目

- 开启一个django项目 django-admin startproject day01_HelloDjango
- 测试django项目环境 python manage.py runserver
  - python manage.py runserver 0.0.0.0:8000 表示允许本机所有的IP被外网访问
  - python manage.py runserver 9000 使用本机运行，但端口是9000
- 开启自己的App
  - python manage.py startapp App



### Django的项目结构

1. manage.py
   - 管理整个项目
2. XXX/settings.py  
   - 项目配置文件
3. XXX/urls.py
   - 路由器，接收用户请求，分发给视图函数（控制器）
4. XXX/wsgi.py
   - 网关接口，通常用在线上环境部署（开发过程中不会接触）

### settings.py

1. DEBUG 是否打开DEBUG
2. ALLOWED_HOSTS 允许访问的主机
3. INSTALLED_APPS   安装了的应用 
4. DATABASES   数据库配置
5. LANGUAGE_CODE 中文 zh-hans
6. TIME_ZONE  中国 Asia/Shanghai



### Pycharm安装

1. 解压
2. 目录结构中会有  bin
3. 进入bin
4. bin 中pycharm.sh
5. 执行 ./pycharm.sh
6. 如果想在终端中的任何位置运行，那就配置到环境变量中



### 创建数据库

- 创建更改的文件
  - python manage.py makemigrations
- 将生成的py文件应用到数据库
  - python manage.py migrate
- 清空数据库
  - python manage.py flush
- 导入导出数据
  - python manage.py dumpdata appname > appname.json
  - python manage.py loaddata appname.json

### 创建视图

- 需要配置到工程的配置文件中settings中的INSTALLED_APPS
- views中定义函数，接收request，返回response
- 在urls中配置路由规则
  - 在根urls中配置（管理麻烦，配置简单）
  - 在App中创建自己的urls，在urls中书写规则，将urls配置到工程urls中
- 创建模板目录，在views返回时调用模板的渲染
- 变更数据库
  - 在settings中配置数据库信息



# Django请求流程

- 进来的请求转入/index/。
- Django 通过在 ROOT_URLCONF 配置来决定根 URLconf。
- Django 在 URLconf 中的所有 URL 模式中，查找第一个匹配 /index/ 的条目。
- 如果找到匹配，将调用相应的视图函数。
- 视图函数返回一个 HttpResponse。
- Django 转换 HttpResponse 为一个适合的 HTTP response， 以 Web page 显示出来。



# 设计一个小项目

### 需求分析

- 本示例完成“班级-学生”信息的维护，需要存储两种数据：班级、学生
- 班级表结构设计：
  - 表名：Grade
  - 班级名称：g_name
  - 班级人数：g_num
- 学生表结构设计：
  - 表名：Student
  - 学生姓名：s_name
  - 学生性别：s_gender
  - 所属班级：s_grade
- 班级-学生的关系为一对多

### 数据库配置

- 在settings.py文件中，通过DATABASES项进行数据库设置
- django支持的数据库包括：sqlite、mysql等主流数据库
- Django默认使用SQLite数据库

### 创建应用

- 在一个项目中可以创建一到多个应用，每个应用进行一种业务处理
- 创建应用的命令：

```
python manage.py startapp day1_hello_django
```

- 应用的目录结构如下图

![](/django项目目录结构.png)

### 定义模型类

- 有一个数据表，就有一个模型类与之对应
- 打开models.py文件，定义模型类
- 引入包from django.db import models
- 模型类继承自models.Model类
- **说明：不需要定义主键列，在生成时会自动添加，并且值为自动增长**
- 当输出对象时，会调用对象的str方法

```python
from django.db import models

class Grade(models.Model):
    g_name = models.CharField(max_length=20, db_column="班级名称")
    g_num = models.IntegerField(default=30)
    g_crete_date = models.DateTimeField(auto_now=True)

class Student(models.Model):
    s_name = models.CharField(max_length=20, db_column="姓名")
    s_age = models.IntegerField(default=20, db_column="年龄")
    s_sex = models.BooleanField(default=True)
    s_birthday = models.DateTimeField()
    s_grade = models.ForeignKey(Grade)

    class Meta:
        ordering = ["-s_age"]
        # 为数据库设置别名
        verbose_name = "学生表"
    	verbose_name_plural = "学生表"
        
    def _ _str_ _(self):
        return "%d" % self.pk
```

### 生成数据表

- 激活模型：编辑settings.py文件，将booktest应用加入到installed_apps中

  ![1531115052424](/注册app.png)

- 生成迁移文件：根据模型类生成sql语句

```
python manage.py makemigrations
```

- 迁移文件被生成到应用的migrations目录

![1531115146872](/迁移文件.png)

- 执行迁移：执行sql语句生成数据表

```
python manage.py migrate
```

### 测试数据操作

- 进入python shell，进行简单的模型API练习

```
python manage.py shell
```

- 进入shell后提示如下：

![](/进入django shell.png)

- 引入需要的包：

```
from App.models import Grade,Student
```

- 查询所有班级信息：

```
Grade.objects.all()
```

- 新建班级信息：

```
grade = Grade()
grade.g_name = "深圳python1805班"
grade.g_num = 40
grade.save()
```

- 查找班级信息：

```
grade = Grade.objects.get(pk=1)
```

- 输出班级信息：

```
grade
grade.id
grade.g_name
```

- 修改班级信息：

```
grade.g_name="大神班"
grade.save()
```

- 删除班级信息：

```
grade.delete()
```

### 关联对象的操作

- 对于Student可以按照上面的操作方式进行
- 添加，注意添加关联对象

```
s=Student()
s.s_name='张三'
s.s_sex=True
s.scontent='爱好打篮球'
# 注意grade为Grade的实例，上面我们已经删除了，这里需要重新创建
s.sclass=grade
s.save()
```

### 运行项目

```
python manage.py runserver ip:port
```



# 项目主要部分

### 视图

- 在django中，视图的作用是对路由转发过来的url进行处理
- 视图函数接收的第一个参数是request对象，request对象中包含了请求的信息
- 视图函数写每个app下的views.py文件中

```
from django.shortcuts import render
from django.http import HttpResponse

# Create your views here.

def index(request):
    return HttpResponse("Hello Django")
```

注意：视图函数的第一个参数必须是request，返回必须调用django的定义的方法规范。

### 路由

- 在视图函数写完后，要编写相应的url规则，这样当我们在浏览器上输入网址的时候才能转到相应的视图函数处理逻辑
- 只定义路径部分，不定义域名
- 路由函数的url部分遵循正则的书写方式
- 路由规则由两部分必须指定的参数和其他可选参数组成

```
url(r'^index/', App.index, name="index"),
```

注：每次定义完路由规则，在代码的末尾添加逗号

- 在编写路由规则之前必须导入相应的视图
- 在组织项目时，将app和项目的路由分离



### 模板

- 模板是HTML文件，通过占位符来传递视图函数的数据

- 每个app目录下都可以创建templates的文件夹，django会自动从这些app里寻找相应的模板

  

##### 定义模板

定义index.html模板文件

```
<!DOCTYPE html>
<html>
<head>
  <title>首页</title>
</head>
<body>
<h1>学生列表</h1>
<ul>
{%for student in students%}
<li>
  {{student.s_name}}
</li>
{%endfor%}
</ul>
</body>
</html>
```

定义detail.html模板

```
<!DOCTYPE html>
<html>
<head>
  <title>详情页</title>
</head>
<body>
<h1>学生详情</h1>
<ul>
<li>
  {{student.s_name}}
  {{student.s_gender}}
  {{student.s_content}}
</li>
</ul>
</body>
</html>
```

##### 使用模板

- 定义视图

```
def index(request):
    students = StudentInfo.objects.all()
    return render(request, "index.html", {"students":students})

def index_page(request, id):
    student = StudentInfo.objects.get(pk=id)
    return render(request, "detail.html", {"student":student})
```

- 定义路由

```
url(r'index/$', class_view.index, name="index"),
url(r'index/(\d+)/$', class_view.index_page, name="index_page"),
```

- 运行项目
  - python manage.py runserver
------------------------------------------------------------------------------------------------------------------------
<p><img alt="Alt text" src="/static/images/django_blog/01.jpg" /></p>
<hr />
<p>typora-copy-images-to: images
typora-root-url: images</p>
<hr />
<h1 id="django是个啥">Django是个啥</h1>
<p>​   最初是被开发来用于管理劳伦斯出版集团旗下的一些以新闻内容为主的网站的。并于2005年7月在BSD许可证下发布。这套框架是以比利时的吉普赛爵士吉他手Django Reinhardt来命名的。</p>
<p>​   Django的主要目标是使得开发复杂的、数据库驱动的网站变得简单。Django注重组件的重用性和“可插拔性”，敏捷开发和DRY法则（Don't Repeat Yourself）。在Django中Python被普遍使用，甚至包括配置文件和数据模型。</p>
<ul>
<li>
<p>由 Python 开发的一个免费的开源网站框架，可以用于快速搭建高性能，优雅的网站</p>
</li>
<li>
<p>Django 中提供了开发网站经常用到的模块，常见的代码都为你写好了</p>
</li>
<li>
<p>Django 提供了通用Web开发模式的高度抽象，提供了频繁进行的编程作业的快速解决方法，以及为“如何解决问题”提供了清晰明了的约定。</p>
</li>
<li>
<p>Django的理念是DRY(Don't Repeat Yourself)来鼓励快速开发！</p>
</li>
</ul>
<h1 id="开发环境">开发环境</h1>
<p>Ubuntu + Python3  + Django + PyCharm</p>
<h1 id="ubuntu系统和命令介绍">Ubuntu系统和命令介绍</h1>
<h3 id="系统设置">系统设置</h3>
<h3 id="常用命令">常用命令</h3>
<ul>
<li>cd</li>
<li>ls</li>
<li>cp</li>
<li>mv</li>
<li>rm</li>
<li>mkdir</li>
<li>pwd</li>
<li>touch</li>
<li>cat</li>
<li>history</li>
<li>ps</li>
<li>ps -aux</li>
<li>kill </li>
<li>kill -9 pid</li>
<li>su/sudo</li>
<li>chmod</li>
<li>grep</li>
<li>which</li>
<li>whereis</li>
<li>ifconfig</li>
<li>netstat</li>
<li>netstat -antp 查看网络连接状态</li>
<li>wget</li>
<li>ssh username@host -p</li>
<li>ssh-keygen</li>
<li>tar</li>
<li>tar -zxvf 解压缩</li>
<li>tar -czvf 压缩</li>
<li>du</li>
<li>du -sh</li>
<li>df</li>
<li>df -h</li>
<li>apt install</li>
<li>apt update</li>
<li>apt remove</li>
<li>apt autoremove</li>
<li>dpkg -i</li>
<li>vi/vim</li>
</ul>
<h1 id="bscs">BS/CS</h1>
<p>​        C/S 架构即“客户端-服务器” 架构。这里的“客户端”可以是有 GUI （图形用户界面）的定制软件，也可以是浏览器，甚至可以是通过 SSH 访问服务器的命令行脚本。只要是客户端通过访问服务器调取计算或者存储资源的，统统都是 C/S 架构。所谓的 Browser-Server 架构其实是 C/S 架构的一种特殊的实现形式，而不是其对立面。</p>
<ul>
<li>C/S:</li>
<li>C: Client</li>
<li>S: Server</li>
<li>B/S</li>
<li>B: Browser</li>
<li>S: Server       </li>
</ul>
<h1 id="mvcmvt">MVC/MVT</h1>
<ul>
<li>
<p>MVC</p>
</li>
<li>
<p>M: Model（模型）</p>
</li>
<li>V: View（视图）</li>
<li>
<p>C: Controller（控制器）</p>
</li>
<li>
<p>MVT</p>
</li>
<li>
<p>M: Model（模型），主要封装对数据库层的访问，对数据库中的数据进行增、删、改、查操作。</p>
</li>
<li>
<p>V: View（视图），用于封装结果，生成页面展示的html内容。</p>
</li>
<li>
<p>T: Template（模板），用于接收请求，处理业务逻辑，与Model和View交互，返回结果。</p>
<p>​</p>
</li>
</ul>
<h1 id="hellodjango项目">HelloDjango项目</h1>
<h3 id="创建虚拟环境">创建虚拟环境</h3>
<h3 id="虚拟环境的优点">虚拟环境的优点</h3>
<ul>
<li>使不同应用开发环境独立</li>
<li>环境升级不影响其他应用，也不会影响全局的python环境</li>
<li>可以防止系统中出现包管理混乱和版本冲突</li>
</ul>
<p>开发会用 virtualenv 来管理多个开发环境</p>
<h4 id="linuxmacos-下">Linux/MacOS 下</h4>
<p>virtualenvwrapper 使得virtualenv变得更好用，所以我们一起安装了</p>
<div class="codehilite"><pre><span></span>(sudo) pip install virtualenv virtualenvwrapper
</pre></div>


<p>修改~/.bash_profile或其它环境变量相关文件(如 .bashrc 或用 ZSH 之后的 .zshrc)，添加以下语句</p>
<div class="codehilite"><pre><span></span>export WORKON_HOME=$HOME/.virtualenvs
export PROJECT_HOME=$HOME/workspace
source /usr/local/bin/virtualenvwrapper.sh(每台机子的位置不一样，可以通过find命令找到)
</pre></div>


<p>修改后使之立即生效(也可以重启终端使之生效)：</p>
<div class="codehilite"><pre><span></span>source ~/.bash_profile
</pre></div>


<h4 id="windows-下">Windows 下：</h4>
<div class="codehilite"><pre><span></span>pip install virtualenv virtualenvwrapper-win
</pre></div>


<p>【可选】Windows下默认虚拟环境是放在用户名下面的Envs中的，与桌面，我的文档，下载等文件夹在一块的。更改方法：计算机，属性，高级系统设置，环境变量，添加WORKON_HOME，如图（windows 10 环境变量设置截图）：</p>
<p><img alt="" src="/1.png" /></p>
<h4 id="虚拟环境使用方法">虚拟环境使用方法：</h4>
<ul>
<li>
<p><strong>mkvirtualenv django：创建运行环境django</strong></p>
</li>
<li>
<p><strong>workon django: 工作在 django环境 或 从其它环境切换到 django环境</strong></p>
</li>
<li>
<p><strong>deactivate</strong>: 退出终端环境</p>
</li>
<li>
<p><strong>其它的：</strong></p>
</li>
<li>
<p><strong>rmvirtualenv</strong> ENV：删除运行环境ENV</p>
</li>
<li>
<p><strong>mkproject</strong> mic：创建mic项目和运行环境mic</p>
</li>
<li>
<p><strong>mktmpenv</strong>：创建临时运行环境</p>
</li>
<li>
<p><strong>lsvirtualenv</strong>: 列出可用的运行环境</p>
</li>
<li>
<p><strong>lssitepackages</strong>: 列出当前环境安装了的包</p>
</li>
</ul>
<p>​</p>
<h3 id="安装django框架">安装Django框架</h3>
<ul>
<li>
<p>pip install django==1.11.7</p>
</li>
<li>
<p>测试django是否已经安装好</p>
</li>
<li>
<p>进入python shell</p>
<p><code>python
import django
django.get_version()</code></p>
</li>
<li>
<p>pip list 显示当前python环境中的所有的库</p>
</li>
<li>
<p>pip freeze 显示当前python环境中的除系统内置库外的所有第三方库</p>
</li>
</ul>
<h3 id="创建hellodjango项目">创建HelloDJango项目</h3>
<ul>
<li>开启一个django项目 django-admin startproject day01_HelloDjango</li>
<li>测试django项目环境 python manage.py runserver</li>
<li>python manage.py runserver 0.0.0.0:8000 表示允许本机所有的IP被外网访问</li>
<li>python manage.py runserver 9000 使用本机运行，但端口是9000</li>
<li>开启自己的App</li>
<li>python manage.py startapp App</li>
</ul>
<h3 id="django的项目结构">Django的项目结构</h3>
<ol>
<li>manage.py</li>
<li>管理整个项目</li>
<li>XXX/settings.py  </li>
<li>项目配置文件</li>
<li>XXX/urls.py</li>
<li>路由器，接收用户请求，分发给视图函数（控制器）</li>
<li>XXX/wsgi.py</li>
<li>网关接口，通常用在线上环境部署（开发过程中不会接触）</li>
</ol>
<h3 id="settingspy">settings.py</h3>
<ol>
<li>DEBUG 是否打开DEBUG</li>
<li>ALLOWED_HOSTS 允许访问的主机</li>
<li>INSTALLED_APPS   安装了的应用 </li>
<li>DATABASES   数据库配置</li>
<li>LANGUAGE_CODE 中文 zh-hans</li>
<li>TIME_ZONE  中国 Asia/Shanghai</li>
</ol>
<h3 id="pycharm安装">Pycharm安装</h3>
<ol>
<li>解压</li>
<li>目录结构中会有  bin</li>
<li>进入bin</li>
<li>bin 中pycharm.sh</li>
<li>执行 ./pycharm.sh</li>
<li>如果想在终端中的任何位置运行，那就配置到环境变量中</li>
</ol>
<h3 id="创建数据库">创建数据库</h3>
<ul>
<li>创建更改的文件</li>
<li>python manage.py makemigrations</li>
<li>将生成的py文件应用到数据库</li>
<li>python manage.py migrate</li>
<li>清空数据库</li>
<li>python manage.py flush</li>
<li>导入导出数据</li>
<li>python manage.py dumpdata appname &gt; appname.json</li>
<li>python manage.py loaddata appname.json</li>
</ul>
<h3 id="创建视图">创建视图</h3>
<ul>
<li>需要配置到工程的配置文件中settings中的INSTALLED_APPS</li>
<li>views中定义函数，接收request，返回response</li>
<li>在urls中配置路由规则</li>
<li>在根urls中配置（管理麻烦，配置简单）</li>
<li>在App中创建自己的urls，在urls中书写规则，将urls配置到工程urls中</li>
<li>创建模板目录，在views返回时调用模板的渲染</li>
<li>变更数据库</li>
<li>在settings中配置数据库信息</li>
</ul>
<h1 id="django请求流程">Django请求流程</h1>
<ul>
<li>进来的请求转入/index/。</li>
<li>Django 通过在 ROOT_URLCONF 配置来决定根 URLconf。</li>
<li>Django 在 URLconf 中的所有 URL 模式中，查找第一个匹配 /index/ 的条目。</li>
<li>如果找到匹配，将调用相应的视图函数。</li>
<li>视图函数返回一个 HttpResponse。</li>
<li>Django 转换 HttpResponse 为一个适合的 HTTP response， 以 Web page 显示出来。</li>
</ul>
<h1 id="设计一个小项目">设计一个小项目</h1>
<h3 id="需求分析">需求分析</h3>
<ul>
<li>本示例完成“班级-学生”信息的维护，需要存储两种数据：班级、学生</li>
<li>班级表结构设计：</li>
<li>表名：Grade</li>
<li>班级名称：g_name</li>
<li>班级人数：g_num</li>
<li>学生表结构设计：</li>
<li>表名：Student</li>
<li>学生姓名：s_name</li>
<li>学生性别：s_gender</li>
<li>所属班级：s_grade</li>
<li>班级-学生的关系为一对多</li>
</ul>
<h3 id="数据库配置">数据库配置</h3>
<ul>
<li>在settings.py文件中，通过DATABASES项进行数据库设置</li>
<li>django支持的数据库包括：sqlite、mysql等主流数据库</li>
<li>Django默认使用SQLite数据库</li>
</ul>
<h3 id="创建应用">创建应用</h3>
<ul>
<li>在一个项目中可以创建一到多个应用，每个应用进行一种业务处理</li>
<li>创建应用的命令：</li>
</ul>
<div class="codehilite"><pre><span></span>python manage.py startapp day1_hello_django
</pre></div>


<ul>
<li>应用的目录结构如下图</li>
</ul>
<p><img alt="" src="/django项目目录结构.png" /></p>
<h3 id="定义模型类">定义模型类</h3>
<ul>
<li>有一个数据表，就有一个模型类与之对应</li>
<li>打开models.py文件，定义模型类</li>
<li>引入包from django.db import models</li>
<li>模型类继承自models.Model类</li>
<li><strong>说明：不需要定义主键列，在生成时会自动添加，并且值为自动增长</strong></li>
<li>当输出对象时，会调用对象的str方法</li>
</ul>
<div class="codehilite"><pre><span></span><span class="kn">from</span> <span class="nn">django.db</span> <span class="kn">import</span> <span class="n">models</span>

<span class="k">class</span> <span class="nc">Grade</span><span class="p">(</span><span class="n">models</span><span class="o">.</span><span class="n">Model</span><span class="p">):</span>
    <span class="n">g_name</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">CharField</span><span class="p">(</span><span class="n">max_length</span><span class="o">=</span><span class="mi">20</span><span class="p">,</span> <span class="n">db_column</span><span class="o">=</span><span class="s2">&quot;班级名称&quot;</span><span class="p">)</span>
    <span class="n">g_num</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">IntegerField</span><span class="p">(</span><span class="n">default</span><span class="o">=</span><span class="mi">30</span><span class="p">)</span>
    <span class="n">g_crete_date</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">DateTimeField</span><span class="p">(</span><span class="n">auto_now</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>

<span class="k">class</span> <span class="nc">Student</span><span class="p">(</span><span class="n">models</span><span class="o">.</span><span class="n">Model</span><span class="p">):</span>
    <span class="n">s_name</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">CharField</span><span class="p">(</span><span class="n">max_length</span><span class="o">=</span><span class="mi">20</span><span class="p">,</span> <span class="n">db_column</span><span class="o">=</span><span class="s2">&quot;姓名&quot;</span><span class="p">)</span>
    <span class="n">s_age</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">IntegerField</span><span class="p">(</span><span class="n">default</span><span class="o">=</span><span class="mi">20</span><span class="p">,</span> <span class="n">db_column</span><span class="o">=</span><span class="s2">&quot;年龄&quot;</span><span class="p">)</span>
    <span class="n">s_sex</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">BooleanField</span><span class="p">(</span><span class="n">default</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
    <span class="n">s_birthday</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">DateTimeField</span><span class="p">()</span>
    <span class="n">s_grade</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">ForeignKey</span><span class="p">(</span><span class="n">Grade</span><span class="p">)</span>

    <span class="k">class</span> <span class="nc">Meta</span><span class="p">:</span>
        <span class="n">ordering</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&quot;-s_age&quot;</span><span class="p">]</span>
        <span class="c1"># 为数据库设置别名</span>
        <span class="n">verbose_name</span> <span class="o">=</span> <span class="s2">&quot;学生表&quot;</span>
        <span class="n">verbose_name_plural</span> <span class="o">=</span> <span class="s2">&quot;学生表&quot;</span>

    <span class="k">def</span> <span class="nf">_</span> <span class="n">_str_</span> <span class="n">_</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">return</span> <span class="s2">&quot;</span><span class="si">%d</span><span class="s2">&quot;</span> <span class="o">%</span> <span class="bp">self</span><span class="o">.</span><span class="n">pk</span>
</pre></div>


<h3 id="生成数据表">生成数据表</h3>
<ul>
<li>激活模型：编辑settings.py文件，将booktest应用加入到installed_apps中</li>
</ul>
<p><img alt="1531115052424" src="/注册app.png" /></p>
<ul>
<li>生成迁移文件：根据模型类生成sql语句</li>
</ul>
<div class="codehilite"><pre><span></span>python manage.py makemigrations
</pre></div>


<ul>
<li>迁移文件被生成到应用的migrations目录</li>
</ul>
<p><img alt="1531115146872" src="/迁移文件.png" /></p>
<ul>
<li>执行迁移：执行sql语句生成数据表</li>
</ul>
<div class="codehilite"><pre><span></span>python manage.py migrate
</pre></div>


<h3 id="测试数据操作">测试数据操作</h3>
<ul>
<li>进入python shell，进行简单的模型API练习</li>
</ul>
<div class="codehilite"><pre><span></span>python manage.py shell
</pre></div>


<ul>
<li>进入shell后提示如下：</li>
</ul>
<p>![](/进入django shell.png)</p>
<ul>
<li>引入需要的包：</li>
</ul>
<div class="codehilite"><pre><span></span><span class="kn">from</span> <span class="nn">App.models</span> <span class="kn">import</span> <span class="n">Grade</span><span class="p">,</span><span class="n">Student</span>
</pre></div>


<ul>
<li>查询所有班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>Grade.objects.all()
</pre></div>


<ul>
<li>新建班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>grade = Grade()
grade.g_name = &quot;深圳python1805班&quot;
grade.g_num = 40
grade.save()
</pre></div>


<ul>
<li>查找班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>grade = Grade.objects.get(pk=1)
</pre></div>


<ul>
<li>输出班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>grade
grade.id
grade.g_name
</pre></div>


<ul>
<li>修改班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>grade.g_name=&quot;大神班&quot;
grade.save()
</pre></div>


<ul>
<li>删除班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>grade.delete()
</pre></div>


<h3 id="关联对象的操作">关联对象的操作</h3>
<ul>
<li>对于Student可以按照上面的操作方式进行</li>
<li>添加，注意添加关联对象</li>
</ul>
<div class="codehilite"><pre><span></span>s=Student()
s.s_name=&#39;张三&#39;
s.s_sex=True
s.scontent=&#39;爱好打篮球&#39;
# 注意grade为Grade的实例，上面我们已经删除了，这里需要重新创建
s.sclass=grade
s.save()
</pre></div>


<h3 id="运行项目">运行项目</h3>
<div class="codehilite"><pre><span></span>python manage.py runserver ip:port
</pre></div>


<h1 id="项目主要部分">项目主要部分</h1>
<h3 id="视图">视图</h3>
<ul>
<li>在django中，视图的作用是对路由转发过来的url进行处理</li>
<li>视图函数接收的第一个参数是request对象，request对象中包含了请求的信息</li>
<li>视图函数写每个app下的views.py文件中</li>
</ul>
<div class="codehilite"><pre><span></span><span class="kn">from</span> <span class="nn">django.shortcuts</span> <span class="kn">import</span> <span class="n">render</span>
<span class="kn">from</span> <span class="nn">django.http</span> <span class="kn">import</span> <span class="n">HttpResponse</span>

<span class="c1"># Create your views here.</span>

<span class="k">def</span> <span class="nf">index</span><span class="p">(</span><span class="n">request</span><span class="p">):</span>
    <span class="k">return</span> <span class="n">HttpResponse</span><span class="p">(</span><span class="s2">&quot;Hello Django&quot;</span><span class="p">)</span>
</pre></div>


<p>注意：视图函数的第一个参数必须是request，返回必须调用django的定义的方法规范。</p>
<h3 id="路由">路由</h3>
<ul>
<li>在视图函数写完后，要编写相应的url规则，这样当我们在浏览器上输入网址的时候才能转到相应的视图函数处理逻辑</li>
<li>只定义路径部分，不定义域名</li>
<li>路由函数的url部分遵循正则的书写方式</li>
<li>路由规则由两部分必须指定的参数和其他可选参数组成</li>
</ul>
<div class="codehilite"><pre><span></span>url(r&#39;^index/&#39;, App.index, name=&quot;index&quot;),
</pre></div>


<p>注：每次定义完路由规则，在代码的末尾添加逗号</p>
<ul>
<li>在编写路由规则之前必须导入相应的视图</li>
<li>在组织项目时，将app和项目的路由分离</li>
</ul>
<h3 id="模板">模板</h3>
<ul>
<li>
<p>模板是HTML文件，通过占位符来传递视图函数的数据</p>
</li>
<li>
<p>每个app目录下都可以创建templates的文件夹，django会自动从这些app里寻找相应的模板</p>
</li>
</ul>
<h5 id="定义模板">定义模板</h5>
<p>定义index.html模板文件</p>
<div class="codehilite"><pre><span></span><span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="p">&lt;</span><span class="nt">html</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">title</span><span class="p">&gt;</span>首页<span class="p">&lt;/</span><span class="nt">title</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">h1</span><span class="p">&gt;</span>学生列表<span class="p">&lt;/</span><span class="nt">h1</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">ul</span><span class="p">&gt;</span>
<span class="cp">{%</span><span class="k">for</span> <span class="nv">student</span> <span class="k">in</span> <span class="nv">students</span><span class="cp">%}</span>
<span class="p">&lt;</span><span class="nt">li</span><span class="p">&gt;</span>
  <span class="cp">{{</span><span class="nv">student.s_name</span><span class="cp">}}</span>
<span class="p">&lt;/</span><span class="nt">li</span><span class="p">&gt;</span>
<span class="cp">{%</span><span class="k">endfor</span><span class="cp">%}</span>
<span class="p">&lt;/</span><span class="nt">ul</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span>
</pre></div>


<p>定义detail.html模板</p>
<div class="codehilite"><pre><span></span><span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="p">&lt;</span><span class="nt">html</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">title</span><span class="p">&gt;</span>详情页<span class="p">&lt;/</span><span class="nt">title</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">h1</span><span class="p">&gt;</span>学生详情<span class="p">&lt;/</span><span class="nt">h1</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">ul</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">li</span><span class="p">&gt;</span>
  <span class="cp">{{</span><span class="nv">student.s_name</span><span class="cp">}}</span>
  <span class="cp">{{</span><span class="nv">student.s_gender</span><span class="cp">}}</span>
  <span class="cp">{{</span><span class="nv">student.s_content</span><span class="cp">}}</span>
<span class="p">&lt;/</span><span class="nt">li</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">ul</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span>
</pre></div>


<h5 id="使用模板">使用模板</h5>
<ul>
<li>定义视图</li>
</ul>
<div class="codehilite"><pre><span></span>def index(request):
    students = StudentInfo.objects.all()
    return render(request, &quot;index.html&quot;, {&quot;students&quot;:students})

def index_page(request, id):
    student = StudentInfo.objects.get(pk=id)
    return render(request, &quot;detail.html&quot;, {&quot;student&quot;:student})
</pre></div>


<ul>
<li>定义路由</li>
</ul>
<div class="codehilite"><pre><span></span>url(r&#39;index/$&#39;, class_view.index, name=&quot;index&quot;),
url(r&#39;index/(\d+)/$&#39;, class_view.index_page, name=&quot;index_page&quot;),
</pre></div>


<ul>
<li>运行项目</li>
<li>python manage.py runserver</li>
</ul>
<div class="toc">
<ul>
<li><a href="#django是个啥">Django是个啥</a></li>
<li><a href="#开发环境">开发环境</a></li>
<li><a href="#ubuntu系统和命令介绍">Ubuntu系统和命令介绍</a><ul>
<li><a href="#系统设置">系统设置</a></li>
<li><a href="#常用命令">常用命令</a></li>
</ul>
</li>
<li><a href="#bscs">BS/CS</a></li>
<li><a href="#mvcmvt">MVC/MVT</a></li>
<li><a href="#hellodjango项目">HelloDjango项目</a><ul>
<li><a href="#创建虚拟环境">创建虚拟环境</a></li>
<li><a href="#虚拟环境的优点">虚拟环境的优点</a><ul>
<li><a href="#linuxmacos-下">Linux/MacOS 下</a></li>
<li><a href="#windows-下">Windows 下：</a></li>
<li><a href="#虚拟环境使用方法">虚拟环境使用方法：</a></li>
</ul>
</li>
<li><a href="#安装django框架">安装Django框架</a></li>
<li><a href="#创建hellodjango项目">创建HelloDJango项目</a></li>
<li><a href="#django的项目结构">Django的项目结构</a></li>
<li><a href="#settingspy">settings.py</a></li>
<li><a href="#pycharm安装">Pycharm安装</a></li>
<li><a href="#创建数据库">创建数据库</a></li>
<li><a href="#创建视图">创建视图</a></li>
</ul>
</li>
<li><a href="#django请求流程">Django请求流程</a></li>
<li><a href="#设计一个小项目">设计一个小项目</a><ul>
<li><a href="#需求分析">需求分析</a></li>
<li><a href="#数据库配置">数据库配置</a></li>
<li><a href="#创建应用">创建应用</a></li>
<li><a href="#定义模型类">定义模型类</a></li>
<li><a href="#生成数据表">生成数据表</a></li>
<li><a href="#测试数据操作">测试数据操作</a></li>
<li><a href="#关联对象的操作">关联对象的操作</a></li>
<li><a href="#运行项目">运行项目</a></li>
</ul>
</li>
<li><a href="#项目主要部分">项目主要部分</a><ul>
<li><a href="#视图">视图</a></li>
<li><a href="#路由">路由</a></li>
<li><a href="#模板">模板</a><ul>
<li><a href="#定义模板">定义模板</a></li>
<li><a href="#使用模板">使用模板</a></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>

[pid: 24644|app: 0|req: 134/323] 113.92.93.76 () {44 vars in 942 bytes} [Wed Aug  1 13:18:02 2018] GET /post/3/ => generated 35800 bytes in 624 msecs (HTTP/1.1 200) 5 headers in 279 bytes (1 switches on core 1)
Not Found: /1.png
[pid: 24644|app: 0|req: 135/324] 113.92.93.76 () {44 vars in 908 bytes} [Wed Aug  1 13:18:05 2018] GET /1.png => generated 3357 bytes in 3 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 0)
Not Found: /django项目目录结构.png
[pid: 24647|app: 0|req: 37/325] 113.92.93.76 () {44 vars in 990 bytes} [Wed Aug  1 13:18:05 2018] GET /django%E9%A1%B9%E7%9B%AE%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84.png => generated 3462 bytes in 3 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 1)
Not Found: /注册app.png
[pid: 24646|app: 0|req: 67/326] 113.92.93.76 () {44 vars in 936 bytes} [Wed Aug  1 13:18:05 2018] GET /%E6%B3%A8%E5%86%8Capp.png => generated 3393 bytes in 3 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 0)
Not Found: /迁移文件.png
[pid: 24645|app: 0|req: 76/327] 113.92.93.76 () {44 vars in 954 bytes} [Wed Aug  1 13:18:05 2018] GET /%E8%BF%81%E7%A7%BB%E6%96%87%E4%BB%B6.png => generated 3414 bytes in 5 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 0)
![Alt text](/static/images/django_blog/01.jpg)

---
typora-copy-images-to: images
typora-root-url: images
---

# Django是个啥

​	最初是被开发来用于管理劳伦斯出版集团旗下的一些以新闻内容为主的网站的。并于2005年7月在BSD许可证下发布。这套框架是以比利时的吉普赛爵士吉他手Django Reinhardt来命名的。

​	Django的主要目标是使得开发复杂的、数据库驱动的网站变得简单。Django注重组件的重用性和“可插拔性”，敏捷开发和DRY法则（Don't Repeat Yourself）。在Django中Python被普遍使用，甚至包括配置文件和数据模型。

- 由 Python 开发的一个免费的开源网站框架，可以用于快速搭建高性能，优雅的网站

- Django 中提供了开发网站经常用到的模块，常见的代码都为你写好了

- Django 提供了通用Web开发模式的高度抽象，提供了频繁进行的编程作业的快速解决方法，以及为“如何解决问题”提供了清晰明了的约定。

- Django的理念是DRY(Don't Repeat Yourself)来鼓励快速开发！

  

# 开发环境

Ubuntu + Python3  + Django + PyCharm



# Ubuntu系统和命令介绍

### 系统设置

### 常用命令

- cd
- ls
- cp
- mv
- rm
- mkdir
- pwd
- touch
- cat
- history
- ps
  - ps -aux
- kill 
  - kill -9 pid
- su/sudo
- chmod
- grep
- which
- whereis
- ifconfig
- netstat
  - netstat -antp 查看网络连接状态
- wget
- ssh username@host -p
  - ssh-keygen
- tar
  - tar -zxvf 解压缩
  - tar -czvf 压缩
- du
  - du -sh
- df
  - df -h
- apt install
- apt update
- apt remove
- apt autoremove
- dpkg -i
- vi/vim

# BS/CS

​        C/S 架构即“客户端-服务器” 架构。这里的“客户端”可以是有 GUI （图形用户界面）的定制软件，也可以是浏览器，甚至可以是通过 SSH 访问服务器的命令行脚本。只要是客户端通过访问服务器调取计算或者存储资源的，统统都是 C/S 架构。所谓的 Browser-Server 架构其实是 C/S 架构的一种特殊的实现形式，而不是其对立面。

- C/S:
  - C: Client
  - S: Server
- B/S
  - B: Browser
  - S: Server       

# MVC/MVT

- MVC

  - M: Model（模型）
  - V: View（视图）
  - C: Controller（控制器）

- MVT

  - M: Model（模型），主要封装对数据库层的访问，对数据库中的数据进行增、删、改、查操作。

  - V: View（视图），用于封装结果，生成页面展示的html内容。

  - T: Template（模板），用于接收请求，处理业务逻辑，与Model和View交互，返回结果。

    ​

# HelloDjango项目

### 创建虚拟环境

### 虚拟环境的优点

- 使不同应用开发环境独立
- 环境升级不影响其他应用，也不会影响全局的python环境
- 可以防止系统中出现包管理混乱和版本冲突

开发会用 virtualenv 来管理多个开发环境

#### Linux/MacOS 下

virtualenvwrapper 使得virtualenv变得更好用，所以我们一起安装了

```
(sudo) pip install virtualenv virtualenvwrapper
```

修改~/.bash_profile或其它环境变量相关文件(如 .bashrc 或用 ZSH 之后的 .zshrc)，添加以下语句

```
export WORKON_HOME=$HOME/.virtualenvs
export PROJECT_HOME=$HOME/workspace
source /usr/local/bin/virtualenvwrapper.sh(每台机子的位置不一样，可以通过find命令找到)
```

修改后使之立即生效(也可以重启终端使之生效)：

```
source ~/.bash_profile
```



#### Windows 下：

```
pip install virtualenv virtualenvwrapper-win
```

【可选】Windows下默认虚拟环境是放在用户名下面的Envs中的，与桌面，我的文档，下载等文件夹在一块的。更改方法：计算机，属性，高级系统设置，环境变量，添加WORKON_HOME，如图（windows 10 环境变量设置截图）：

![](/1.png)

#### 虚拟环境使用方法：

- **mkvirtualenv django：创建运行环境django**

- **workon django: 工作在 django环境 或 从其它环境切换到 django环境**

- **deactivate**: 退出终端环境

- **其它的：**

- **rmvirtualenv** ENV：删除运行环境ENV

- **mkproject** mic：创建mic项目和运行环境mic

- **mktmpenv**：创建临时运行环境

- **lsvirtualenv**: 列出可用的运行环境

- **lssitepackages**: 列出当前环境安装了的包

  ​




### 安装Django框架

- pip install django==1.11.7

- 测试django是否已经安装好

  - 进入python shell

    ```python
    import django
    django.get_version()
    ```

- pip list 显示当前python环境中的所有的库

- pip freeze 显示当前python环境中的除系统内置库外的所有第三方库

### 创建HelloDJango项目

- 开启一个django项目 django-admin startproject day01_HelloDjango
- 测试django项目环境 python manage.py runserver
  - python manage.py runserver 0.0.0.0:8000 表示允许本机所有的IP被外网访问
  - python manage.py runserver 9000 使用本机运行，但端口是9000
- 开启自己的App
  - python manage.py startapp App



### Django的项目结构

1. manage.py
   - 管理整个项目
2. XXX/settings.py  
   - 项目配置文件
3. XXX/urls.py
   - 路由器，接收用户请求，分发给视图函数（控制器）
4. XXX/wsgi.py
   - 网关接口，通常用在线上环境部署（开发过程中不会接触）

### settings.py

1. DEBUG 是否打开DEBUG
2. ALLOWED_HOSTS 允许访问的主机
3. INSTALLED_APPS   安装了的应用 
4. DATABASES   数据库配置
5. LANGUAGE_CODE 中文 zh-hans
6. TIME_ZONE  中国 Asia/Shanghai



### Pycharm安装

1. 解压
2. 目录结构中会有  bin
3. 进入bin
4. bin 中pycharm.sh
5. 执行 ./pycharm.sh
6. 如果想在终端中的任何位置运行，那就配置到环境变量中



### 创建数据库

- 创建更改的文件
  - python manage.py makemigrations
- 将生成的py文件应用到数据库
  - python manage.py migrate
- 清空数据库
  - python manage.py flush
- 导入导出数据
  - python manage.py dumpdata appname > appname.json
  - python manage.py loaddata appname.json

### 创建视图

- 需要配置到工程的配置文件中settings中的INSTALLED_APPS
- views中定义函数，接收request，返回response
- 在urls中配置路由规则
  - 在根urls中配置（管理麻烦，配置简单）
  - 在App中创建自己的urls，在urls中书写规则，将urls配置到工程urls中
- 创建模板目录，在views返回时调用模板的渲染
- 变更数据库
  - 在settings中配置数据库信息



# Django请求流程

- 进来的请求转入/index/。
- Django 通过在 ROOT_URLCONF 配置来决定根 URLconf。
- Django 在 URLconf 中的所有 URL 模式中，查找第一个匹配 /index/ 的条目。
- 如果找到匹配，将调用相应的视图函数。
- 视图函数返回一个 HttpResponse。
- Django 转换 HttpResponse 为一个适合的 HTTP response， 以 Web page 显示出来。



# 设计一个小项目

### 需求分析

- 本示例完成“班级-学生”信息的维护，需要存储两种数据：班级、学生
- 班级表结构设计：
  - 表名：Grade
  - 班级名称：g_name
  - 班级人数：g_num
- 学生表结构设计：
  - 表名：Student
  - 学生姓名：s_name
  - 学生性别：s_gender
  - 所属班级：s_grade
- 班级-学生的关系为一对多

### 数据库配置

- 在settings.py文件中，通过DATABASES项进行数据库设置
- django支持的数据库包括：sqlite、mysql等主流数据库
- Django默认使用SQLite数据库

### 创建应用

- 在一个项目中可以创建一到多个应用，每个应用进行一种业务处理
- 创建应用的命令：

```
python manage.py startapp day1_hello_django
```

- 应用的目录结构如下图

![](/django项目目录结构.png)

### 定义模型类

- 有一个数据表，就有一个模型类与之对应
- 打开models.py文件，定义模型类
- 引入包from django.db import models
- 模型类继承自models.Model类
- **说明：不需要定义主键列，在生成时会自动添加，并且值为自动增长**
- 当输出对象时，会调用对象的str方法

```python
from django.db import models

class Grade(models.Model):
    g_name = models.CharField(max_length=20, db_column="班级名称")
    g_num = models.IntegerField(default=30)
    g_crete_date = models.DateTimeField(auto_now=True)

class Student(models.Model):
    s_name = models.CharField(max_length=20, db_column="姓名")
    s_age = models.IntegerField(default=20, db_column="年龄")
    s_sex = models.BooleanField(default=True)
    s_birthday = models.DateTimeField()
    s_grade = models.ForeignKey(Grade)

    class Meta:
        ordering = ["-s_age"]
        # 为数据库设置别名
        verbose_name = "学生表"
    	verbose_name_plural = "学生表"
        
    def _ _str_ _(self):
        return "%d" % self.pk
```

### 生成数据表

- 激活模型：编辑settings.py文件，将booktest应用加入到installed_apps中

  ![1531115052424](/注册app.png)

- 生成迁移文件：根据模型类生成sql语句

```
python manage.py makemigrations
```

- 迁移文件被生成到应用的migrations目录

![1531115146872](/迁移文件.png)

- 执行迁移：执行sql语句生成数据表

```
python manage.py migrate
```

### 测试数据操作

- 进入python shell，进行简单的模型API练习

```
python manage.py shell
```

- 进入shell后提示如下：

![](/进入django shell.png)

- 引入需要的包：

```
from App.models import Grade,Student
```

- 查询所有班级信息：

```
Grade.objects.all()
```

- 新建班级信息：

```
grade = Grade()
grade.g_name = "深圳python1805班"
grade.g_num = 40
grade.save()
```

- 查找班级信息：

```
grade = Grade.objects.get(pk=1)
```

- 输出班级信息：

```
grade
grade.id
grade.g_name
```

- 修改班级信息：

```
grade.g_name="大神班"
grade.save()
```

- 删除班级信息：

```
grade.delete()
```

### 关联对象的操作

- 对于Student可以按照上面的操作方式进行
- 添加，注意添加关联对象

```
s=Student()
s.s_name='张三'
s.s_sex=True
s.scontent='爱好打篮球'
# 注意grade为Grade的实例，上面我们已经删除了，这里需要重新创建
s.sclass=grade
s.save()
```

### 运行项目

```
python manage.py runserver ip:port
```



# 项目主要部分

### 视图

- 在django中，视图的作用是对路由转发过来的url进行处理
- 视图函数接收的第一个参数是request对象，request对象中包含了请求的信息
- 视图函数写每个app下的views.py文件中

```
from django.shortcuts import render
from django.http import HttpResponse

# Create your views here.

def index(request):
    return HttpResponse("Hello Django")
```

注意：视图函数的第一个参数必须是request，返回必须调用django的定义的方法规范。

### 路由

- 在视图函数写完后，要编写相应的url规则，这样当我们在浏览器上输入网址的时候才能转到相应的视图函数处理逻辑
- 只定义路径部分，不定义域名
- 路由函数的url部分遵循正则的书写方式
- 路由规则由两部分必须指定的参数和其他可选参数组成

```
url(r'^index/', App.index, name="index"),
```

注：每次定义完路由规则，在代码的末尾添加逗号

- 在编写路由规则之前必须导入相应的视图
- 在组织项目时，将app和项目的路由分离



### 模板

- 模板是HTML文件，通过占位符来传递视图函数的数据

- 每个app目录下都可以创建templates的文件夹，django会自动从这些app里寻找相应的模板

  

##### 定义模板

定义index.html模板文件

```
<!DOCTYPE html>
<html>
<head>
  <title>首页</title>
</head>
<body>
<h1>学生列表</h1>
<ul>
{%for student in students%}
<li>
  {{student.s_name}}
</li>
{%endfor%}
</ul>
</body>
</html>
```

定义detail.html模板

```
<!DOCTYPE html>
<html>
<head>
  <title>详情页</title>
</head>
<body>
<h1>学生详情</h1>
<ul>
<li>
  {{student.s_name}}
  {{student.s_gender}}
  {{student.s_content}}
</li>
</ul>
</body>
</html>
```

##### 使用模板

- 定义视图

```
def index(request):
    students = StudentInfo.objects.all()
    return render(request, "index.html", {"students":students})

def index_page(request, id):
    student = StudentInfo.objects.get(pk=id)
    return render(request, "detail.html", {"student":student})
```

- 定义路由

```
url(r'index/$', class_view.index, name="index"),
url(r'index/(\d+)/$', class_view.index_page, name="index_page"),
```

- 运行项目
  - python manage.py runserver
------------------------------------------------------------------------------------------------------------------------
<p><img alt="Alt text" src="/static/images/django_blog/01.jpg" /></p>
<hr />
<p>typora-copy-images-to: images
typora-root-url: images</p>
<hr />
<h1 id="django是个啥">Django是个啥</h1>
<p>​   最初是被开发来用于管理劳伦斯出版集团旗下的一些以新闻内容为主的网站的。并于2005年7月在BSD许可证下发布。这套框架是以比利时的吉普赛爵士吉他手Django Reinhardt来命名的。</p>
<p>​   Django的主要目标是使得开发复杂的、数据库驱动的网站变得简单。Django注重组件的重用性和“可插拔性”，敏捷开发和DRY法则（Don't Repeat Yourself）。在Django中Python被普遍使用，甚至包括配置文件和数据模型。</p>
<ul>
<li>
<p>由 Python 开发的一个免费的开源网站框架，可以用于快速搭建高性能，优雅的网站</p>
</li>
<li>
<p>Django 中提供了开发网站经常用到的模块，常见的代码都为你写好了</p>
</li>
<li>
<p>Django 提供了通用Web开发模式的高度抽象，提供了频繁进行的编程作业的快速解决方法，以及为“如何解决问题”提供了清晰明了的约定。</p>
</li>
<li>
<p>Django的理念是DRY(Don't Repeat Yourself)来鼓励快速开发！</p>
</li>
</ul>
<h1 id="开发环境">开发环境</h1>
<p>Ubuntu + Python3  + Django + PyCharm</p>
<h1 id="ubuntu系统和命令介绍">Ubuntu系统和命令介绍</h1>
<h3 id="系统设置">系统设置</h3>
<h3 id="常用命令">常用命令</h3>
<ul>
<li>cd</li>
<li>ls</li>
<li>cp</li>
<li>mv</li>
<li>rm</li>
<li>mkdir</li>
<li>pwd</li>
<li>touch</li>
<li>cat</li>
<li>history</li>
<li>ps</li>
<li>ps -aux</li>
<li>kill </li>
<li>kill -9 pid</li>
<li>su/sudo</li>
<li>chmod</li>
<li>grep</li>
<li>which</li>
<li>whereis</li>
<li>ifconfig</li>
<li>netstat</li>
<li>netstat -antp 查看网络连接状态</li>
<li>wget</li>
<li>ssh username@host -p</li>
<li>ssh-keygen</li>
<li>tar</li>
<li>tar -zxvf 解压缩</li>
<li>tar -czvf 压缩</li>
<li>du</li>
<li>du -sh</li>
<li>df</li>
<li>df -h</li>
<li>apt install</li>
<li>apt update</li>
<li>apt remove</li>
<li>apt autoremove</li>
<li>dpkg -i</li>
<li>vi/vim</li>
</ul>
<h1 id="bscs">BS/CS</h1>
<p>​        C/S 架构即“客户端-服务器” 架构。这里的“客户端”可以是有 GUI （图形用户界面）的定制软件，也可以是浏览器，甚至可以是通过 SSH 访问服务器的命令行脚本。只要是客户端通过访问服务器调取计算或者存储资源的，统统都是 C/S 架构。所谓的 Browser-Server 架构其实是 C/S 架构的一种特殊的实现形式，而不是其对立面。</p>
<ul>
<li>C/S:</li>
<li>C: Client</li>
<li>S: Server</li>
<li>B/S</li>
<li>B: Browser</li>
<li>S: Server       </li>
</ul>
<h1 id="mvcmvt">MVC/MVT</h1>
<ul>
<li>
<p>MVC</p>
</li>
<li>
<p>M: Model（模型）</p>
</li>
<li>V: View（视图）</li>
<li>
<p>C: Controller（控制器）</p>
</li>
<li>
<p>MVT</p>
</li>
<li>
<p>M: Model（模型），主要封装对数据库层的访问，对数据库中的数据进行增、删、改、查操作。</p>
</li>
<li>
<p>V: View（视图），用于封装结果，生成页面展示的html内容。</p>
</li>
<li>
<p>T: Template（模板），用于接收请求，处理业务逻辑，与Model和View交互，返回结果。</p>
<p>​</p>
</li>
</ul>
<h1 id="hellodjango项目">HelloDjango项目</h1>
<h3 id="创建虚拟环境">创建虚拟环境</h3>
<h3 id="虚拟环境的优点">虚拟环境的优点</h3>
<ul>
<li>使不同应用开发环境独立</li>
<li>环境升级不影响其他应用，也不会影响全局的python环境</li>
<li>可以防止系统中出现包管理混乱和版本冲突</li>
</ul>
<p>开发会用 virtualenv 来管理多个开发环境</p>
<h4 id="linuxmacos-下">Linux/MacOS 下</h4>
<p>virtualenvwrapper 使得virtualenv变得更好用，所以我们一起安装了</p>
<div class="codehilite"><pre><span></span>(sudo) pip install virtualenv virtualenvwrapper
</pre></div>


<p>修改~/.bash_profile或其它环境变量相关文件(如 .bashrc 或用 ZSH 之后的 .zshrc)，添加以下语句</p>
<div class="codehilite"><pre><span></span>export WORKON_HOME=$HOME/.virtualenvs
export PROJECT_HOME=$HOME/workspace
source /usr/local/bin/virtualenvwrapper.sh(每台机子的位置不一样，可以通过find命令找到)
</pre></div>


<p>修改后使之立即生效(也可以重启终端使之生效)：</p>
<div class="codehilite"><pre><span></span>source ~/.bash_profile
</pre></div>


<h4 id="windows-下">Windows 下：</h4>
<div class="codehilite"><pre><span></span>pip install virtualenv virtualenvwrapper-win
</pre></div>


<p>【可选】Windows下默认虚拟环境是放在用户名下面的Envs中的，与桌面，我的文档，下载等文件夹在一块的。更改方法：计算机，属性，高级系统设置，环境变量，添加WORKON_HOME，如图（windows 10 环境变量设置截图）：</p>
<p><img alt="" src="/1.png" /></p>
<h4 id="虚拟环境使用方法">虚拟环境使用方法：</h4>
<ul>
<li>
<p><strong>mkvirtualenv django：创建运行环境django</strong></p>
</li>
<li>
<p><strong>workon django: 工作在 django环境 或 从其它环境切换到 django环境</strong></p>
</li>
<li>
<p><strong>deactivate</strong>: 退出终端环境</p>
</li>
<li>
<p><strong>其它的：</strong></p>
</li>
<li>
<p><strong>rmvirtualenv</strong> ENV：删除运行环境ENV</p>
</li>
<li>
<p><strong>mkproject</strong> mic：创建mic项目和运行环境mic</p>
</li>
<li>
<p><strong>mktmpenv</strong>：创建临时运行环境</p>
</li>
<li>
<p><strong>lsvirtualenv</strong>: 列出可用的运行环境</p>
</li>
<li>
<p><strong>lssitepackages</strong>: 列出当前环境安装了的包</p>
</li>
</ul>
<p>​</p>
<h3 id="安装django框架">安装Django框架</h3>
<ul>
<li>
<p>pip install django==1.11.7</p>
</li>
<li>
<p>测试django是否已经安装好</p>
</li>
<li>
<p>进入python shell</p>
<p><code>python
import django
django.get_version()</code></p>
</li>
<li>
<p>pip list 显示当前python环境中的所有的库</p>
</li>
<li>
<p>pip freeze 显示当前python环境中的除系统内置库外的所有第三方库</p>
</li>
</ul>
<h3 id="创建hellodjango项目">创建HelloDJango项目</h3>
<ul>
<li>开启一个django项目 django-admin startproject day01_HelloDjango</li>
<li>测试django项目环境 python manage.py runserver</li>
<li>python manage.py runserver 0.0.0.0:8000 表示允许本机所有的IP被外网访问</li>
<li>python manage.py runserver 9000 使用本机运行，但端口是9000</li>
<li>开启自己的App</li>
<li>python manage.py startapp App</li>
</ul>
<h3 id="django的项目结构">Django的项目结构</h3>
<ol>
<li>manage.py</li>
<li>管理整个项目</li>
<li>XXX/settings.py  </li>
<li>项目配置文件</li>
<li>XXX/urls.py</li>
<li>路由器，接收用户请求，分发给视图函数（控制器）</li>
<li>XXX/wsgi.py</li>
<li>网关接口，通常用在线上环境部署（开发过程中不会接触）</li>
</ol>
<h3 id="settingspy">settings.py</h3>
<ol>
<li>DEBUG 是否打开DEBUG</li>
<li>ALLOWED_HOSTS 允许访问的主机</li>
<li>INSTALLED_APPS   安装了的应用 </li>
<li>DATABASES   数据库配置</li>
<li>LANGUAGE_CODE 中文 zh-hans</li>
<li>TIME_ZONE  中国 Asia/Shanghai</li>
</ol>
<h3 id="pycharm安装">Pycharm安装</h3>
<ol>
<li>解压</li>
<li>目录结构中会有  bin</li>
<li>进入bin</li>
<li>bin 中pycharm.sh</li>
<li>执行 ./pycharm.sh</li>
<li>如果想在终端中的任何位置运行，那就配置到环境变量中</li>
</ol>
<h3 id="创建数据库">创建数据库</h3>
<ul>
<li>创建更改的文件</li>
<li>python manage.py makemigrations</li>
<li>将生成的py文件应用到数据库</li>
<li>python manage.py migrate</li>
<li>清空数据库</li>
<li>python manage.py flush</li>
<li>导入导出数据</li>
<li>python manage.py dumpdata appname &gt; appname.json</li>
<li>python manage.py loaddata appname.json</li>
</ul>
<h3 id="创建视图">创建视图</h3>
<ul>
<li>需要配置到工程的配置文件中settings中的INSTALLED_APPS</li>
<li>views中定义函数，接收request，返回response</li>
<li>在urls中配置路由规则</li>
<li>在根urls中配置（管理麻烦，配置简单）</li>
<li>在App中创建自己的urls，在urls中书写规则，将urls配置到工程urls中</li>
<li>创建模板目录，在views返回时调用模板的渲染</li>
<li>变更数据库</li>
<li>在settings中配置数据库信息</li>
</ul>
<h1 id="django请求流程">Django请求流程</h1>
<ul>
<li>进来的请求转入/index/。</li>
<li>Django 通过在 ROOT_URLCONF 配置来决定根 URLconf。</li>
<li>Django 在 URLconf 中的所有 URL 模式中，查找第一个匹配 /index/ 的条目。</li>
<li>如果找到匹配，将调用相应的视图函数。</li>
<li>视图函数返回一个 HttpResponse。</li>
<li>Django 转换 HttpResponse 为一个适合的 HTTP response， 以 Web page 显示出来。</li>
</ul>
<h1 id="设计一个小项目">设计一个小项目</h1>
<h3 id="需求分析">需求分析</h3>
<ul>
<li>本示例完成“班级-学生”信息的维护，需要存储两种数据：班级、学生</li>
<li>班级表结构设计：</li>
<li>表名：Grade</li>
<li>班级名称：g_name</li>
<li>班级人数：g_num</li>
<li>学生表结构设计：</li>
<li>表名：Student</li>
<li>学生姓名：s_name</li>
<li>学生性别：s_gender</li>
<li>所属班级：s_grade</li>
<li>班级-学生的关系为一对多</li>
</ul>
<h3 id="数据库配置">数据库配置</h3>
<ul>
<li>在settings.py文件中，通过DATABASES项进行数据库设置</li>
<li>django支持的数据库包括：sqlite、mysql等主流数据库</li>
<li>Django默认使用SQLite数据库</li>
</ul>
<h3 id="创建应用">创建应用</h3>
<ul>
<li>在一个项目中可以创建一到多个应用，每个应用进行一种业务处理</li>
<li>创建应用的命令：</li>
</ul>
<div class="codehilite"><pre><span></span>python manage.py startapp day1_hello_django
</pre></div>


<ul>
<li>应用的目录结构如下图</li>
</ul>
<p><img alt="" src="/django项目目录结构.png" /></p>
<h3 id="定义模型类">定义模型类</h3>
<ul>
<li>有一个数据表，就有一个模型类与之对应</li>
<li>打开models.py文件，定义模型类</li>
<li>引入包from django.db import models</li>
<li>模型类继承自models.Model类</li>
<li><strong>说明：不需要定义主键列，在生成时会自动添加，并且值为自动增长</strong></li>
<li>当输出对象时，会调用对象的str方法</li>
</ul>
<div class="codehilite"><pre><span></span><span class="kn">from</span> <span class="nn">django.db</span> <span class="kn">import</span> <span class="n">models</span>

<span class="k">class</span> <span class="nc">Grade</span><span class="p">(</span><span class="n">models</span><span class="o">.</span><span class="n">Model</span><span class="p">):</span>
    <span class="n">g_name</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">CharField</span><span class="p">(</span><span class="n">max_length</span><span class="o">=</span><span class="mi">20</span><span class="p">,</span> <span class="n">db_column</span><span class="o">=</span><span class="s2">&quot;班级名称&quot;</span><span class="p">)</span>
    <span class="n">g_num</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">IntegerField</span><span class="p">(</span><span class="n">default</span><span class="o">=</span><span class="mi">30</span><span class="p">)</span>
    <span class="n">g_crete_date</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">DateTimeField</span><span class="p">(</span><span class="n">auto_now</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>

<span class="k">class</span> <span class="nc">Student</span><span class="p">(</span><span class="n">models</span><span class="o">.</span><span class="n">Model</span><span class="p">):</span>
    <span class="n">s_name</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">CharField</span><span class="p">(</span><span class="n">max_length</span><span class="o">=</span><span class="mi">20</span><span class="p">,</span> <span class="n">db_column</span><span class="o">=</span><span class="s2">&quot;姓名&quot;</span><span class="p">)</span>
    <span class="n">s_age</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">IntegerField</span><span class="p">(</span><span class="n">default</span><span class="o">=</span><span class="mi">20</span><span class="p">,</span> <span class="n">db_column</span><span class="o">=</span><span class="s2">&quot;年龄&quot;</span><span class="p">)</span>
    <span class="n">s_sex</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">BooleanField</span><span class="p">(</span><span class="n">default</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
    <span class="n">s_birthday</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">DateTimeField</span><span class="p">()</span>
    <span class="n">s_grade</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">ForeignKey</span><span class="p">(</span><span class="n">Grade</span><span class="p">)</span>

    <span class="k">class</span> <span class="nc">Meta</span><span class="p">:</span>
        <span class="n">ordering</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&quot;-s_age&quot;</span><span class="p">]</span>
        <span class="c1"># 为数据库设置别名</span>
        <span class="n">verbose_name</span> <span class="o">=</span> <span class="s2">&quot;学生表&quot;</span>
        <span class="n">verbose_name_plural</span> <span class="o">=</span> <span class="s2">&quot;学生表&quot;</span>

    <span class="k">def</span> <span class="nf">_</span> <span class="n">_str_</span> <span class="n">_</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">return</span> <span class="s2">&quot;</span><span class="si">%d</span><span class="s2">&quot;</span> <span class="o">%</span> <span class="bp">self</span><span class="o">.</span><span class="n">pk</span>
</pre></div>


<h3 id="生成数据表">生成数据表</h3>
<ul>
<li>激活模型：编辑settings.py文件，将booktest应用加入到installed_apps中</li>
</ul>
<p><img alt="1531115052424" src="/注册app.png" /></p>
<ul>
<li>生成迁移文件：根据模型类生成sql语句</li>
</ul>
<div class="codehilite"><pre><span></span>python manage.py makemigrations
</pre></div>


<ul>
<li>迁移文件被生成到应用的migrations目录</li>
</ul>
<p><img alt="1531115146872" src="/迁移文件.png" /></p>
<ul>
<li>执行迁移：执行sql语句生成数据表</li>
</ul>
<div class="codehilite"><pre><span></span>python manage.py migrate
</pre></div>


<h3 id="测试数据操作">测试数据操作</h3>
<ul>
<li>进入python shell，进行简单的模型API练习</li>
</ul>
<div class="codehilite"><pre><span></span>python manage.py shell
</pre></div>


<ul>
<li>进入shell后提示如下：</li>
</ul>
<p>![](/进入django shell.png)</p>
<ul>
<li>引入需要的包：</li>
</ul>
<div class="codehilite"><pre><span></span><span class="kn">from</span> <span class="nn">App.models</span> <span class="kn">import</span> <span class="n">Grade</span><span class="p">,</span><span class="n">Student</span>
</pre></div>


<ul>
<li>查询所有班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>Grade.objects.all()
</pre></div>


<ul>
<li>新建班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>grade = Grade()
grade.g_name = &quot;深圳python1805班&quot;
grade.g_num = 40
grade.save()
</pre></div>


<ul>
<li>查找班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>grade = Grade.objects.get(pk=1)
</pre></div>


<ul>
<li>输出班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>grade
grade.id
grade.g_name
</pre></div>


<ul>
<li>修改班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>grade.g_name=&quot;大神班&quot;
grade.save()
</pre></div>


<ul>
<li>删除班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>grade.delete()
</pre></div>


<h3 id="关联对象的操作">关联对象的操作</h3>
<ul>
<li>对于Student可以按照上面的操作方式进行</li>
<li>添加，注意添加关联对象</li>
</ul>
<div class="codehilite"><pre><span></span>s=Student()
s.s_name=&#39;张三&#39;
s.s_sex=True
s.scontent=&#39;爱好打篮球&#39;
# 注意grade为Grade的实例，上面我们已经删除了，这里需要重新创建
s.sclass=grade
s.save()
</pre></div>


<h3 id="运行项目">运行项目</h3>
<div class="codehilite"><pre><span></span>python manage.py runserver ip:port
</pre></div>


<h1 id="项目主要部分">项目主要部分</h1>
<h3 id="视图">视图</h3>
<ul>
<li>在django中，视图的作用是对路由转发过来的url进行处理</li>
<li>视图函数接收的第一个参数是request对象，request对象中包含了请求的信息</li>
<li>视图函数写每个app下的views.py文件中</li>
</ul>
<div class="codehilite"><pre><span></span><span class="kn">from</span> <span class="nn">django.shortcuts</span> <span class="kn">import</span> <span class="n">render</span>
<span class="kn">from</span> <span class="nn">django.http</span> <span class="kn">import</span> <span class="n">HttpResponse</span>

<span class="c1"># Create your views here.</span>

<span class="k">def</span> <span class="nf">index</span><span class="p">(</span><span class="n">request</span><span class="p">):</span>
    <span class="k">return</span> <span class="n">HttpResponse</span><span class="p">(</span><span class="s2">&quot;Hello Django&quot;</span><span class="p">)</span>
</pre></div>


<p>注意：视图函数的第一个参数必须是request，返回必须调用django的定义的方法规范。</p>
<h3 id="路由">路由</h3>
<ul>
<li>在视图函数写完后，要编写相应的url规则，这样当我们在浏览器上输入网址的时候才能转到相应的视图函数处理逻辑</li>
<li>只定义路径部分，不定义域名</li>
<li>路由函数的url部分遵循正则的书写方式</li>
<li>路由规则由两部分必须指定的参数和其他可选参数组成</li>
</ul>
<div class="codehilite"><pre><span></span>url(r&#39;^index/&#39;, App.index, name=&quot;index&quot;),
</pre></div>


<p>注：每次定义完路由规则，在代码的末尾添加逗号</p>
<ul>
<li>在编写路由规则之前必须导入相应的视图</li>
<li>在组织项目时，将app和项目的路由分离</li>
</ul>
<h3 id="模板">模板</h3>
<ul>
<li>
<p>模板是HTML文件，通过占位符来传递视图函数的数据</p>
</li>
<li>
<p>每个app目录下都可以创建templates的文件夹，django会自动从这些app里寻找相应的模板</p>
</li>
</ul>
<h5 id="定义模板">定义模板</h5>
<p>定义index.html模板文件</p>
<div class="codehilite"><pre><span></span><span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="p">&lt;</span><span class="nt">html</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">title</span><span class="p">&gt;</span>首页<span class="p">&lt;/</span><span class="nt">title</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">h1</span><span class="p">&gt;</span>学生列表<span class="p">&lt;/</span><span class="nt">h1</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">ul</span><span class="p">&gt;</span>
<span class="cp">{%</span><span class="k">for</span> <span class="nv">student</span> <span class="k">in</span> <span class="nv">students</span><span class="cp">%}</span>
<span class="p">&lt;</span><span class="nt">li</span><span class="p">&gt;</span>
  <span class="cp">{{</span><span class="nv">student.s_name</span><span class="cp">}}</span>
<span class="p">&lt;/</span><span class="nt">li</span><span class="p">&gt;</span>
<span class="cp">{%</span><span class="k">endfor</span><span class="cp">%}</span>
<span class="p">&lt;/</span><span class="nt">ul</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span>
</pre></div>


<p>定义detail.html模板</p>
<div class="codehilite"><pre><span></span><span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="p">&lt;</span><span class="nt">html</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">title</span><span class="p">&gt;</span>详情页<span class="p">&lt;/</span><span class="nt">title</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">h1</span><span class="p">&gt;</span>学生详情<span class="p">&lt;/</span><span class="nt">h1</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">ul</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">li</span><span class="p">&gt;</span>
  <span class="cp">{{</span><span class="nv">student.s_name</span><span class="cp">}}</span>
  <span class="cp">{{</span><span class="nv">student.s_gender</span><span class="cp">}}</span>
  <span class="cp">{{</span><span class="nv">student.s_content</span><span class="cp">}}</span>
<span class="p">&lt;/</span><span class="nt">li</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">ul</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span>
</pre></div>


<h5 id="使用模板">使用模板</h5>
<ul>
<li>定义视图</li>
</ul>
<div class="codehilite"><pre><span></span>def index(request):
    students = StudentInfo.objects.all()
    return render(request, &quot;index.html&quot;, {&quot;students&quot;:students})

def index_page(request, id):
    student = StudentInfo.objects.get(pk=id)
    return render(request, &quot;detail.html&quot;, {&quot;student&quot;:student})
</pre></div>


<ul>
<li>定义路由</li>
</ul>
<div class="codehilite"><pre><span></span>url(r&#39;index/$&#39;, class_view.index, name=&quot;index&quot;),
url(r&#39;index/(\d+)/$&#39;, class_view.index_page, name=&quot;index_page&quot;),
</pre></div>


<ul>
<li>运行项目</li>
<li>python manage.py runserver</li>
</ul>
<div class="toc">
<ul>
<li><a href="#django是个啥">Django是个啥</a></li>
<li><a href="#开发环境">开发环境</a></li>
<li><a href="#ubuntu系统和命令介绍">Ubuntu系统和命令介绍</a><ul>
<li><a href="#系统设置">系统设置</a></li>
<li><a href="#常用命令">常用命令</a></li>
</ul>
</li>
<li><a href="#bscs">BS/CS</a></li>
<li><a href="#mvcmvt">MVC/MVT</a></li>
<li><a href="#hellodjango项目">HelloDjango项目</a><ul>
<li><a href="#创建虚拟环境">创建虚拟环境</a></li>
<li><a href="#虚拟环境的优点">虚拟环境的优点</a><ul>
<li><a href="#linuxmacos-下">Linux/MacOS 下</a></li>
<li><a href="#windows-下">Windows 下：</a></li>
<li><a href="#虚拟环境使用方法">虚拟环境使用方法：</a></li>
</ul>
</li>
<li><a href="#安装django框架">安装Django框架</a></li>
<li><a href="#创建hellodjango项目">创建HelloDJango项目</a></li>
<li><a href="#django的项目结构">Django的项目结构</a></li>
<li><a href="#settingspy">settings.py</a></li>
<li><a href="#pycharm安装">Pycharm安装</a></li>
<li><a href="#创建数据库">创建数据库</a></li>
<li><a href="#创建视图">创建视图</a></li>
</ul>
</li>
<li><a href="#django请求流程">Django请求流程</a></li>
<li><a href="#设计一个小项目">设计一个小项目</a><ul>
<li><a href="#需求分析">需求分析</a></li>
<li><a href="#数据库配置">数据库配置</a></li>
<li><a href="#创建应用">创建应用</a></li>
<li><a href="#定义模型类">定义模型类</a></li>
<li><a href="#生成数据表">生成数据表</a></li>
<li><a href="#测试数据操作">测试数据操作</a></li>
<li><a href="#关联对象的操作">关联对象的操作</a></li>
<li><a href="#运行项目">运行项目</a></li>
</ul>
</li>
<li><a href="#项目主要部分">项目主要部分</a><ul>
<li><a href="#视图">视图</a></li>
<li><a href="#路由">路由</a></li>
<li><a href="#模板">模板</a><ul>
<li><a href="#定义模板">定义模板</a></li>
<li><a href="#使用模板">使用模板</a></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>

[pid: 24645|app: 0|req: 77/328] 113.92.93.76 () {46 vars in 993 bytes} [Wed Aug  1 13:18:16 2018] GET /post/3/ => generated 35800 bytes in 715 msecs (HTTP/1.1 200) 5 headers in 279 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
![Alt text](/static/images/django_blog/01.jpg)

---
typora-copy-images-to: images
typora-root-url: images
---

# Django是个啥

​	最初是被开发来用于管理劳伦斯出版集团旗下的一些以新闻内容为主的网站的。并于2005年7月在BSD许可证下发布。这套框架是以比利时的吉普赛爵士吉他手Django Reinhardt来命名的。

​	Django的主要目标是使得开发复杂的、数据库驱动的网站变得简单。Django注重组件的重用性和“可插拔性”，敏捷开发和DRY法则（Don't Repeat Yourself）。在Django中Python被普遍使用，甚至包括配置文件和数据模型。

- 由 Python 开发的一个免费的开源网站框架，可以用于快速搭建高性能，优雅的网站

- Django 中提供了开发网站经常用到的模块，常见的代码都为你写好了

- Django 提供了通用Web开发模式的高度抽象，提供了频繁进行的编程作业的快速解决方法，以及为“如何解决问题”提供了清晰明了的约定。

- Django的理念是DRY(Don't Repeat Yourself)来鼓励快速开发！

  

# 开发环境

Ubuntu + Python3  + Django + PyCharm



# Ubuntu系统和命令介绍

### 系统设置

### 常用命令

- cd
- ls
- cp
- mv
- rm
- mkdir
- pwd
- touch
- cat
- history
- ps
  - ps -aux
- kill 
  - kill -9 pid
- su/sudo
- chmod
- grep
- which
- whereis
- ifconfig
- netstat
  - netstat -antp 查看网络连接状态
- wget
- ssh username@host -p
  - ssh-keygen
- tar
  - tar -zxvf 解压缩
  - tar -czvf 压缩
- du
  - du -sh
- df
  - df -h
- apt install
- apt update
- apt remove
- apt autoremove
- dpkg -i
- vi/vim

# BS/CS

​        C/S 架构即“客户端-服务器” 架构。这里的“客户端”可以是有 GUI （图形用户界面）的定制软件，也可以是浏览器，甚至可以是通过 SSH 访问服务器的命令行脚本。只要是客户端通过访问服务器调取计算或者存储资源的，统统都是 C/S 架构。所谓的 Browser-Server 架构其实是 C/S 架构的一种特殊的实现形式，而不是其对立面。

- C/S:
  - C: Client
  - S: Server
- B/S
  - B: Browser
  - S: Server       

# MVC/MVT

- MVC

  - M: Model（模型）
  - V: View（视图）
  - C: Controller（控制器）

- MVT

  - M: Model（模型），主要封装对数据库层的访问，对数据库中的数据进行增、删、改、查操作。

  - V: View（视图），用于封装结果，生成页面展示的html内容。

  - T: Template（模板），用于接收请求，处理业务逻辑，与Model和View交互，返回结果。

    ​

# HelloDjango项目

### 创建虚拟环境

### 虚拟环境的优点

- 使不同应用开发环境独立
- 环境升级不影响其他应用，也不会影响全局的python环境
- 可以防止系统中出现包管理混乱和版本冲突

开发会用 virtualenv 来管理多个开发环境

#### Linux/MacOS 下

virtualenvwrapper 使得virtualenv变得更好用，所以我们一起安装了

```
(sudo) pip install virtualenv virtualenvwrapper
```

修改~/.bash_profile或其它环境变量相关文件(如 .bashrc 或用 ZSH 之后的 .zshrc)，添加以下语句

```
export WORKON_HOME=$HOME/.virtualenvs
export PROJECT_HOME=$HOME/workspace
source /usr/local/bin/virtualenvwrapper.sh(每台机子的位置不一样，可以通过find命令找到)
```

修改后使之立即生效(也可以重启终端使之生效)：

```
source ~/.bash_profile
```



#### Windows 下：

```
pip install virtualenv virtualenvwrapper-win
```

【可选】Windows下默认虚拟环境是放在用户名下面的Envs中的，与桌面，我的文档，下载等文件夹在一块的。更改方法：计算机，属性，高级系统设置，环境变量，添加WORKON_HOME，如图（windows 10 环境变量设置截图）：

![](/1.png)

#### 虚拟环境使用方法：

- **mkvirtualenv django：创建运行环境django**

- **workon django: 工作在 django环境 或 从其它环境切换到 django环境**

- **deactivate**: 退出终端环境

- **其它的：**

- **rmvirtualenv** ENV：删除运行环境ENV

- **mkproject** mic：创建mic项目和运行环境mic

- **mktmpenv**：创建临时运行环境

- **lsvirtualenv**: 列出可用的运行环境

- **lssitepackages**: 列出当前环境安装了的包

  ​




### 安装Django框架

- pip install django==1.11.7

- 测试django是否已经安装好

  - 进入python shell

    ```python
    import django
    django.get_version()
    ```

- pip list 显示当前python环境中的所有的库

- pip freeze 显示当前python环境中的除系统内置库外的所有第三方库

### 创建HelloDJango项目

- 开启一个django项目 django-admin startproject day01_HelloDjango
- 测试django项目环境 python manage.py runserver
  - python manage.py runserver 0.0.0.0:8000 表示允许本机所有的IP被外网访问
  - python manage.py runserver 9000 使用本机运行，但端口是9000
- 开启自己的App
  - python manage.py startapp App



### Django的项目结构

1. manage.py
   - 管理整个项目
2. XXX/settings.py  
   - 项目配置文件
3. XXX/urls.py
   - 路由器，接收用户请求，分发给视图函数（控制器）
4. XXX/wsgi.py
   - 网关接口，通常用在线上环境部署（开发过程中不会接触）

### settings.py

1. DEBUG 是否打开DEBUG
2. ALLOWED_HOSTS 允许访问的主机
3. INSTALLED_APPS   安装了的应用 
4. DATABASES   数据库配置
5. LANGUAGE_CODE 中文 zh-hans
6. TIME_ZONE  中国 Asia/Shanghai



### Pycharm安装

1. 解压
2. 目录结构中会有  bin
3. 进入bin
4. bin 中pycharm.sh
5. 执行 ./pycharm.sh
6. 如果想在终端中的任何位置运行，那就配置到环境变量中



### 创建数据库

- 创建更改的文件
  - python manage.py makemigrations
- 将生成的py文件应用到数据库
  - python manage.py migrate
- 清空数据库
  - python manage.py flush
- 导入导出数据
  - python manage.py dumpdata appname > appname.json
  - python manage.py loaddata appname.json

### 创建视图

- 需要配置到工程的配置文件中settings中的INSTALLED_APPS
- views中定义函数，接收request，返回response
- 在urls中配置路由规则
  - 在根urls中配置（管理麻烦，配置简单）
  - 在App中创建自己的urls，在urls中书写规则，将urls配置到工程urls中
- 创建模板目录，在views返回时调用模板的渲染
- 变更数据库
  - 在settings中配置数据库信息



# Django请求流程

- 进来的请求转入/index/。
- Django 通过在 ROOT_URLCONF 配置来决定根 URLconf。
- Django 在 URLconf 中的所有 URL 模式中，查找第一个匹配 /index/ 的条目。
- 如果找到匹配，将调用相应的视图函数。
- 视图函数返回一个 HttpResponse。
- Django 转换 HttpResponse 为一个适合的 HTTP response， 以 Web page 显示出来。



# 设计一个小项目

### 需求分析

- 本示例完成“班级-学生”信息的维护，需要存储两种数据：班级、学生
- 班级表结构设计：
  - 表名：Grade
  - 班级名称：g_name
  - 班级人数：g_num
- 学生表结构设计：
  - 表名：Student
  - 学生姓名：s_name
  - 学生性别：s_gender
  - 所属班级：s_grade
- 班级-学生的关系为一对多

### 数据库配置

- 在settings.py文件中，通过DATABASES项进行数据库设置
- django支持的数据库包括：sqlite、mysql等主流数据库
- Django默认使用SQLite数据库

### 创建应用

- 在一个项目中可以创建一到多个应用，每个应用进行一种业务处理
- 创建应用的命令：

```
python manage.py startapp day1_hello_django
```

- 应用的目录结构如下图

![](/django项目目录结构.png)

### 定义模型类

- 有一个数据表，就有一个模型类与之对应
- 打开models.py文件，定义模型类
- 引入包from django.db import models
- 模型类继承自models.Model类
- **说明：不需要定义主键列，在生成时会自动添加，并且值为自动增长**
- 当输出对象时，会调用对象的str方法

```python
from django.db import models

class Grade(models.Model):
    g_name = models.CharField(max_length=20, db_column="班级名称")
    g_num = models.IntegerField(default=30)
    g_crete_date = models.DateTimeField(auto_now=True)

class Student(models.Model):
    s_name = models.CharField(max_length=20, db_column="姓名")
    s_age = models.IntegerField(default=20, db_column="年龄")
    s_sex = models.BooleanField(default=True)
    s_birthday = models.DateTimeField()
    s_grade = models.ForeignKey(Grade)

    class Meta:
        ordering = ["-s_age"]
        # 为数据库设置别名
        verbose_name = "学生表"
    	verbose_name_plural = "学生表"
        
    def _ _str_ _(self):
        return "%d" % self.pk
```

### 生成数据表

- 激活模型：编辑settings.py文件，将booktest应用加入到installed_apps中

  ![1531115052424](/注册app.png)

- 生成迁移文件：根据模型类生成sql语句

```
python manage.py makemigrations
```

- 迁移文件被生成到应用的migrations目录

![1531115146872](/迁移文件.png)

- 执行迁移：执行sql语句生成数据表

```
python manage.py migrate
```

### 测试数据操作

- 进入python shell，进行简单的模型API练习

```
python manage.py shell
```

- 进入shell后提示如下：

![](/进入django shell.png)

- 引入需要的包：

```
from App.models import Grade,Student
```

- 查询所有班级信息：

```
Grade.objects.all()
```

- 新建班级信息：

```
grade = Grade()
grade.g_name = "深圳python1805班"
grade.g_num = 40
grade.save()
```

- 查找班级信息：

```
grade = Grade.objects.get(pk=1)
```

- 输出班级信息：

```
grade
grade.id
grade.g_name
```

- 修改班级信息：

```
grade.g_name="大神班"
grade.save()
```

- 删除班级信息：

```
grade.delete()
```

### 关联对象的操作

- 对于Student可以按照上面的操作方式进行
- 添加，注意添加关联对象

```
s=Student()
s.s_name='张三'
s.s_sex=True
s.scontent='爱好打篮球'
# 注意grade为Grade的实例，上面我们已经删除了，这里需要重新创建
s.sclass=grade
s.save()
```

### 运行项目

```
python manage.py runserver ip:port
```



# 项目主要部分

### 视图

- 在django中，视图的作用是对路由转发过来的url进行处理
- 视图函数接收的第一个参数是request对象，request对象中包含了请求的信息
- 视图函数写每个app下的views.py文件中

```
from django.shortcuts import render
from django.http import HttpResponse

# Create your views here.

def index(request):
    return HttpResponse("Hello Django")
```

注意：视图函数的第一个参数必须是request，返回必须调用django的定义的方法规范。

### 路由

- 在视图函数写完后，要编写相应的url规则，这样当我们在浏览器上输入网址的时候才能转到相应的视图函数处理逻辑
- 只定义路径部分，不定义域名
- 路由函数的url部分遵循正则的书写方式
- 路由规则由两部分必须指定的参数和其他可选参数组成

```
url(r'^index/', App.index, name="index"),
```

注：每次定义完路由规则，在代码的末尾添加逗号

- 在编写路由规则之前必须导入相应的视图
- 在组织项目时，将app和项目的路由分离



### 模板

- 模板是HTML文件，通过占位符来传递视图函数的数据

- 每个app目录下都可以创建templates的文件夹，django会自动从这些app里寻找相应的模板

  

##### 定义模板

定义index.html模板文件

```
<!DOCTYPE html>
<html>
<head>
  <title>首页</title>
</head>
<body>
<h1>学生列表</h1>
<ul>
{%for student in students%}
<li>
  {{student.s_name}}
</li>
{%endfor%}
</ul>
</body>
</html>
```

定义detail.html模板

```
<!DOCTYPE html>
<html>
<head>
  <title>详情页</title>
</head>
<body>
<h1>学生详情</h1>
<ul>
<li>
  {{student.s_name}}
  {{student.s_gender}}
  {{student.s_content}}
</li>
</ul>
</body>
</html>
```

##### 使用模板

- 定义视图

```
def index(request):
    students = StudentInfo.objects.all()
    return render(request, "index.html", {"students":students})

def index_page(request, id):
    student = StudentInfo.objects.get(pk=id)
    return render(request, "detail.html", {"student":student})
```

- 定义路由

```
url(r'index/$', class_view.index, name="index"),
url(r'index/(\d+)/$', class_view.index_page, name="index_page"),
```

- 运行项目
  - python manage.py runserver
------------------------------------------------------------------------------------------------------------------------
<p><img alt="Alt text" src="/static/images/django_blog/01.jpg" /></p>
<hr />
<p>typora-copy-images-to: images
typora-root-url: images</p>
<hr />
<h1 id="django是个啥">Django是个啥</h1>
<p>​   最初是被开发来用于管理劳伦斯出版集团旗下的一些以新闻内容为主的网站的。并于2005年7月在BSD许可证下发布。这套框架是以比利时的吉普赛爵士吉他手Django Reinhardt来命名的。</p>
<p>​   Django的主要目标是使得开发复杂的、数据库驱动的网站变得简单。Django注重组件的重用性和“可插拔性”，敏捷开发和DRY法则（Don't Repeat Yourself）。在Django中Python被普遍使用，甚至包括配置文件和数据模型。</p>
<ul>
<li>
<p>由 Python 开发的一个免费的开源网站框架，可以用于快速搭建高性能，优雅的网站</p>
</li>
<li>
<p>Django 中提供了开发网站经常用到的模块，常见的代码都为你写好了</p>
</li>
<li>
<p>Django 提供了通用Web开发模式的高度抽象，提供了频繁进行的编程作业的快速解决方法，以及为“如何解决问题”提供了清晰明了的约定。</p>
</li>
<li>
<p>Django的理念是DRY(Don't Repeat Yourself)来鼓励快速开发！</p>
</li>
</ul>
<h1 id="开发环境">开发环境</h1>
<p>Ubuntu + Python3  + Django + PyCharm</p>
<h1 id="ubuntu系统和命令介绍">Ubuntu系统和命令介绍</h1>
<h3 id="系统设置">系统设置</h3>
<h3 id="常用命令">常用命令</h3>
<ul>
<li>cd</li>
<li>ls</li>
<li>cp</li>
<li>mv</li>
<li>rm</li>
<li>mkdir</li>
<li>pwd</li>
<li>touch</li>
<li>cat</li>
<li>history</li>
<li>ps</li>
<li>ps -aux</li>
<li>kill </li>
<li>kill -9 pid</li>
<li>su/sudo</li>
<li>chmod</li>
<li>grep</li>
<li>which</li>
<li>whereis</li>
<li>ifconfig</li>
<li>netstat</li>
<li>netstat -antp 查看网络连接状态</li>
<li>wget</li>
<li>ssh username@host -p</li>
<li>ssh-keygen</li>
<li>tar</li>
<li>tar -zxvf 解压缩</li>
<li>tar -czvf 压缩</li>
<li>du</li>
<li>du -sh</li>
<li>df</li>
<li>df -h</li>
<li>apt install</li>
<li>apt update</li>
<li>apt remove</li>
<li>apt autoremove</li>
<li>dpkg -i</li>
<li>vi/vim</li>
</ul>
<h1 id="bscs">BS/CS</h1>
<p>​        C/S 架构即“客户端-服务器” 架构。这里的“客户端”可以是有 GUI （图形用户界面）的定制软件，也可以是浏览器，甚至可以是通过 SSH 访问服务器的命令行脚本。只要是客户端通过访问服务器调取计算或者存储资源的，统统都是 C/S 架构。所谓的 Browser-Server 架构其实是 C/S 架构的一种特殊的实现形式，而不是其对立面。</p>
<ul>
<li>C/S:</li>
<li>C: Client</li>
<li>S: Server</li>
<li>B/S</li>
<li>B: Browser</li>
<li>S: Server       </li>
</ul>
<h1 id="mvcmvt">MVC/MVT</h1>
<ul>
<li>
<p>MVC</p>
</li>
<li>
<p>M: Model（模型）</p>
</li>
<li>V: View（视图）</li>
<li>
<p>C: Controller（控制器）</p>
</li>
<li>
<p>MVT</p>
</li>
<li>
<p>M: Model（模型），主要封装对数据库层的访问，对数据库中的数据进行增、删、改、查操作。</p>
</li>
<li>
<p>V: View（视图），用于封装结果，生成页面展示的html内容。</p>
</li>
<li>
<p>T: Template（模板），用于接收请求，处理业务逻辑，与Model和View交互，返回结果。</p>
<p>​</p>
</li>
</ul>
<h1 id="hellodjango项目">HelloDjango项目</h1>
<h3 id="创建虚拟环境">创建虚拟环境</h3>
<h3 id="虚拟环境的优点">虚拟环境的优点</h3>
<ul>
<li>使不同应用开发环境独立</li>
<li>环境升级不影响其他应用，也不会影响全局的python环境</li>
<li>可以防止系统中出现包管理混乱和版本冲突</li>
</ul>
<p>开发会用 virtualenv 来管理多个开发环境</p>
<h4 id="linuxmacos-下">Linux/MacOS 下</h4>
<p>virtualenvwrapper 使得virtualenv变得更好用，所以我们一起安装了</p>
<div class="codehilite"><pre><span></span>(sudo) pip install virtualenv virtualenvwrapper
</pre></div>


<p>修改~/.bash_profile或其它环境变量相关文件(如 .bashrc 或用 ZSH 之后的 .zshrc)，添加以下语句</p>
<div class="codehilite"><pre><span></span>export WORKON_HOME=$HOME/.virtualenvs
export PROJECT_HOME=$HOME/workspace
source /usr/local/bin/virtualenvwrapper.sh(每台机子的位置不一样，可以通过find命令找到)
</pre></div>


<p>修改后使之立即生效(也可以重启终端使之生效)：</p>
<div class="codehilite"><pre><span></span>source ~/.bash_profile
</pre></div>


<h4 id="windows-下">Windows 下：</h4>
<div class="codehilite"><pre><span></span>pip install virtualenv virtualenvwrapper-win
</pre></div>


<p>【可选】Windows下默认虚拟环境是放在用户名下面的Envs中的，与桌面，我的文档，下载等文件夹在一块的。更改方法：计算机，属性，高级系统设置，环境变量，添加WORKON_HOME，如图（windows 10 环境变量设置截图）：</p>
<p><img alt="" src="/1.png" /></p>
<h4 id="虚拟环境使用方法">虚拟环境使用方法：</h4>
<ul>
<li>
<p><strong>mkvirtualenv django：创建运行环境django</strong></p>
</li>
<li>
<p><strong>workon django: 工作在 django环境 或 从其它环境切换到 django环境</strong></p>
</li>
<li>
<p><strong>deactivate</strong>: 退出终端环境</p>
</li>
<li>
<p><strong>其它的：</strong></p>
</li>
<li>
<p><strong>rmvirtualenv</strong> ENV：删除运行环境ENV</p>
</li>
<li>
<p><strong>mkproject</strong> mic：创建mic项目和运行环境mic</p>
</li>
<li>
<p><strong>mktmpenv</strong>：创建临时运行环境</p>
</li>
<li>
<p><strong>lsvirtualenv</strong>: 列出可用的运行环境</p>
</li>
<li>
<p><strong>lssitepackages</strong>: 列出当前环境安装了的包</p>
</li>
</ul>
<p>​</p>
<h3 id="安装django框架">安装Django框架</h3>
<ul>
<li>
<p>pip install django==1.11.7</p>
</li>
<li>
<p>测试django是否已经安装好</p>
</li>
<li>
<p>进入python shell</p>
<p><code>python
import django
django.get_version()</code></p>
</li>
<li>
<p>pip list 显示当前python环境中的所有的库</p>
</li>
<li>
<p>pip freeze 显示当前python环境中的除系统内置库外的所有第三方库</p>
</li>
</ul>
<h3 id="创建hellodjango项目">创建HelloDJango项目</h3>
<ul>
<li>开启一个django项目 django-admin startproject day01_HelloDjango</li>
<li>测试django项目环境 python manage.py runserver</li>
<li>python manage.py runserver 0.0.0.0:8000 表示允许本机所有的IP被外网访问</li>
<li>python manage.py runserver 9000 使用本机运行，但端口是9000</li>
<li>开启自己的App</li>
<li>python manage.py startapp App</li>
</ul>
<h3 id="django的项目结构">Django的项目结构</h3>
<ol>
<li>manage.py</li>
<li>管理整个项目</li>
<li>XXX/settings.py  </li>
<li>项目配置文件</li>
<li>XXX/urls.py</li>
<li>路由器，接收用户请求，分发给视图函数（控制器）</li>
<li>XXX/wsgi.py</li>
<li>网关接口，通常用在线上环境部署（开发过程中不会接触）</li>
</ol>
<h3 id="settingspy">settings.py</h3>
<ol>
<li>DEBUG 是否打开DEBUG</li>
<li>ALLOWED_HOSTS 允许访问的主机</li>
<li>INSTALLED_APPS   安装了的应用 </li>
<li>DATABASES   数据库配置</li>
<li>LANGUAGE_CODE 中文 zh-hans</li>
<li>TIME_ZONE  中国 Asia/Shanghai</li>
</ol>
<h3 id="pycharm安装">Pycharm安装</h3>
<ol>
<li>解压</li>
<li>目录结构中会有  bin</li>
<li>进入bin</li>
<li>bin 中pycharm.sh</li>
<li>执行 ./pycharm.sh</li>
<li>如果想在终端中的任何位置运行，那就配置到环境变量中</li>
</ol>
<h3 id="创建数据库">创建数据库</h3>
<ul>
<li>创建更改的文件</li>
<li>python manage.py makemigrations</li>
<li>将生成的py文件应用到数据库</li>
<li>python manage.py migrate</li>
<li>清空数据库</li>
<li>python manage.py flush</li>
<li>导入导出数据</li>
<li>python manage.py dumpdata appname &gt; appname.json</li>
<li>python manage.py loaddata appname.json</li>
</ul>
<h3 id="创建视图">创建视图</h3>
<ul>
<li>需要配置到工程的配置文件中settings中的INSTALLED_APPS</li>
<li>views中定义函数，接收request，返回response</li>
<li>在urls中配置路由规则</li>
<li>在根urls中配置（管理麻烦，配置简单）</li>
<li>在App中创建自己的urls，在urls中书写规则，将urls配置到工程urls中</li>
<li>创建模板目录，在views返回时调用模板的渲染</li>
<li>变更数据库</li>
<li>在settings中配置数据库信息</li>
</ul>
<h1 id="django请求流程">Django请求流程</h1>
<ul>
<li>进来的请求转入/index/。</li>
<li>Django 通过在 ROOT_URLCONF 配置来决定根 URLconf。</li>
<li>Django 在 URLconf 中的所有 URL 模式中，查找第一个匹配 /index/ 的条目。</li>
<li>如果找到匹配，将调用相应的视图函数。</li>
<li>视图函数返回一个 HttpResponse。</li>
<li>Django 转换 HttpResponse 为一个适合的 HTTP response， 以 Web page 显示出来。</li>
</ul>
<h1 id="设计一个小项目">设计一个小项目</h1>
<h3 id="需求分析">需求分析</h3>
<ul>
<li>本示例完成“班级-学生”信息的维护，需要存储两种数据：班级、学生</li>
<li>班级表结构设计：</li>
<li>表名：Grade</li>
<li>班级名称：g_name</li>
<li>班级人数：g_num</li>
<li>学生表结构设计：</li>
<li>表名：Student</li>
<li>学生姓名：s_name</li>
<li>学生性别：s_gender</li>
<li>所属班级：s_grade</li>
<li>班级-学生的关系为一对多</li>
</ul>
<h3 id="数据库配置">数据库配置</h3>
<ul>
<li>在settings.py文件中，通过DATABASES项进行数据库设置</li>
<li>django支持的数据库包括：sqlite、mysql等主流数据库</li>
<li>Django默认使用SQLite数据库</li>
</ul>
<h3 id="创建应用">创建应用</h3>
<ul>
<li>在一个项目中可以创建一到多个应用，每个应用进行一种业务处理</li>
<li>创建应用的命令：</li>
</ul>
<div class="codehilite"><pre><span></span>python manage.py startapp day1_hello_django
</pre></div>


<ul>
<li>应用的目录结构如下图</li>
</ul>
<p><img alt="" src="/django项目目录结构.png" /></p>
<h3 id="定义模型类">定义模型类</h3>
<ul>
<li>有一个数据表，就有一个模型类与之对应</li>
<li>打开models.py文件，定义模型类</li>
<li>引入包from django.db import models</li>
<li>模型类继承自models.Model类</li>
<li><strong>说明：不需要定义主键列，在生成时会自动添加，并且值为自动增长</strong></li>
<li>当输出对象时，会调用对象的str方法</li>
</ul>
<div class="codehilite"><pre><span></span><span class="kn">from</span> <span class="nn">django.db</span> <span class="kn">import</span> <span class="n">models</span>

<span class="k">class</span> <span class="nc">Grade</span><span class="p">(</span><span class="n">models</span><span class="o">.</span><span class="n">Model</span><span class="p">):</span>
    <span class="n">g_name</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">CharField</span><span class="p">(</span><span class="n">max_length</span><span class="o">=</span><span class="mi">20</span><span class="p">,</span> <span class="n">db_column</span><span class="o">=</span><span class="s2">&quot;班级名称&quot;</span><span class="p">)</span>
    <span class="n">g_num</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">IntegerField</span><span class="p">(</span><span class="n">default</span><span class="o">=</span><span class="mi">30</span><span class="p">)</span>
    <span class="n">g_crete_date</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">DateTimeField</span><span class="p">(</span><span class="n">auto_now</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>

<span class="k">class</span> <span class="nc">Student</span><span class="p">(</span><span class="n">models</span><span class="o">.</span><span class="n">Model</span><span class="p">):</span>
    <span class="n">s_name</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">CharField</span><span class="p">(</span><span class="n">max_length</span><span class="o">=</span><span class="mi">20</span><span class="p">,</span> <span class="n">db_column</span><span class="o">=</span><span class="s2">&quot;姓名&quot;</span><span class="p">)</span>
    <span class="n">s_age</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">IntegerField</span><span class="p">(</span><span class="n">default</span><span class="o">=</span><span class="mi">20</span><span class="p">,</span> <span class="n">db_column</span><span class="o">=</span><span class="s2">&quot;年龄&quot;</span><span class="p">)</span>
    <span class="n">s_sex</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">BooleanField</span><span class="p">(</span><span class="n">default</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
    <span class="n">s_birthday</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">DateTimeField</span><span class="p">()</span>
    <span class="n">s_grade</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">ForeignKey</span><span class="p">(</span><span class="n">Grade</span><span class="p">)</span>

    <span class="k">class</span> <span class="nc">Meta</span><span class="p">:</span>
        <span class="n">ordering</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&quot;-s_age&quot;</span><span class="p">]</span>
        <span class="c1"># 为数据库设置别名</span>
        <span class="n">verbose_name</span> <span class="o">=</span> <span class="s2">&quot;学生表&quot;</span>
        <span class="n">verbose_name_plural</span> <span class="o">=</span> <span class="s2">&quot;学生表&quot;</span>

    <span class="k">def</span> <span class="nf">_</span> <span class="n">_str_</span> <span class="n">_</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">return</span> <span class="s2">&quot;</span><span class="si">%d</span><span class="s2">&quot;</span> <span class="o">%</span> <span class="bp">self</span><span class="o">.</span><span class="n">pk</span>
</pre></div>


<h3 id="生成数据表">生成数据表</h3>
<ul>
<li>激活模型：编辑settings.py文件，将booktest应用加入到installed_apps中</li>
</ul>
<p><img alt="1531115052424" src="/注册app.png" /></p>
<ul>
<li>生成迁移文件：根据模型类生成sql语句</li>
</ul>
<div class="codehilite"><pre><span></span>python manage.py makemigrations
</pre></div>


<ul>
<li>迁移文件被生成到应用的migrations目录</li>
</ul>
<p><img alt="1531115146872" src="/迁移文件.png" /></p>
<ul>
<li>执行迁移：执行sql语句生成数据表</li>
</ul>
<div class="codehilite"><pre><span></span>python manage.py migrate
</pre></div>


<h3 id="测试数据操作">测试数据操作</h3>
<ul>
<li>进入python shell，进行简单的模型API练习</li>
</ul>
<div class="codehilite"><pre><span></span>python manage.py shell
</pre></div>


<ul>
<li>进入shell后提示如下：</li>
</ul>
<p>![](/进入django shell.png)</p>
<ul>
<li>引入需要的包：</li>
</ul>
<div class="codehilite"><pre><span></span><span class="kn">from</span> <span class="nn">App.models</span> <span class="kn">import</span> <span class="n">Grade</span><span class="p">,</span><span class="n">Student</span>
</pre></div>


<ul>
<li>查询所有班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>Grade.objects.all()
</pre></div>


<ul>
<li>新建班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>grade = Grade()
grade.g_name = &quot;深圳python1805班&quot;
grade.g_num = 40
grade.save()
</pre></div>


<ul>
<li>查找班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>grade = Grade.objects.get(pk=1)
</pre></div>


<ul>
<li>输出班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>grade
grade.id
grade.g_name
</pre></div>


<ul>
<li>修改班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>grade.g_name=&quot;大神班&quot;
grade.save()
</pre></div>


<ul>
<li>删除班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>grade.delete()
</pre></div>


<h3 id="关联对象的操作">关联对象的操作</h3>
<ul>
<li>对于Student可以按照上面的操作方式进行</li>
<li>添加，注意添加关联对象</li>
</ul>
<div class="codehilite"><pre><span></span>s=Student()
s.s_name=&#39;张三&#39;
s.s_sex=True
s.scontent=&#39;爱好打篮球&#39;
# 注意grade为Grade的实例，上面我们已经删除了，这里需要重新创建
s.sclass=grade
s.save()
</pre></div>


<h3 id="运行项目">运行项目</h3>
<div class="codehilite"><pre><span></span>python manage.py runserver ip:port
</pre></div>


<h1 id="项目主要部分">项目主要部分</h1>
<h3 id="视图">视图</h3>
<ul>
<li>在django中，视图的作用是对路由转发过来的url进行处理</li>
<li>视图函数接收的第一个参数是request对象，request对象中包含了请求的信息</li>
<li>视图函数写每个app下的views.py文件中</li>
</ul>
<div class="codehilite"><pre><span></span><span class="kn">from</span> <span class="nn">django.shortcuts</span> <span class="kn">import</span> <span class="n">render</span>
<span class="kn">from</span> <span class="nn">django.http</span> <span class="kn">import</span> <span class="n">HttpResponse</span>

<span class="c1"># Create your views here.</span>

<span class="k">def</span> <span class="nf">index</span><span class="p">(</span><span class="n">request</span><span class="p">):</span>
    <span class="k">return</span> <span class="n">HttpResponse</span><span class="p">(</span><span class="s2">&quot;Hello Django&quot;</span><span class="p">)</span>
</pre></div>


<p>注意：视图函数的第一个参数必须是request，返回必须调用django的定义的方法规范。</p>
<h3 id="路由">路由</h3>
<ul>
<li>在视图函数写完后，要编写相应的url规则，这样当我们在浏览器上输入网址的时候才能转到相应的视图函数处理逻辑</li>
<li>只定义路径部分，不定义域名</li>
<li>路由函数的url部分遵循正则的书写方式</li>
<li>路由规则由两部分必须指定的参数和其他可选参数组成</li>
</ul>
<div class="codehilite"><pre><span></span>url(r&#39;^index/&#39;, App.index, name=&quot;index&quot;),
</pre></div>


<p>注：每次定义完路由规则，在代码的末尾添加逗号</p>
<ul>
<li>在编写路由规则之前必须导入相应的视图</li>
<li>在组织项目时，将app和项目的路由分离</li>
</ul>
<h3 id="模板">模板</h3>
<ul>
<li>
<p>模板是HTML文件，通过占位符来传递视图函数的数据</p>
</li>
<li>
<p>每个app目录下都可以创建templates的文件夹，django会自动从这些app里寻找相应的模板</p>
</li>
</ul>
<h5 id="定义模板">定义模板</h5>
<p>定义index.html模板文件</p>
<div class="codehilite"><pre><span></span><span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="p">&lt;</span><span class="nt">html</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">title</span><span class="p">&gt;</span>首页<span class="p">&lt;/</span><span class="nt">title</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">h1</span><span class="p">&gt;</span>学生列表<span class="p">&lt;/</span><span class="nt">h1</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">ul</span><span class="p">&gt;</span>
<span class="cp">{%</span><span class="k">for</span> <span class="nv">student</span> <span class="k">in</span> <span class="nv">students</span><span class="cp">%}</span>
<span class="p">&lt;</span><span class="nt">li</span><span class="p">&gt;</span>
  <span class="cp">{{</span><span class="nv">student.s_name</span><span class="cp">}}</span>
<span class="p">&lt;/</span><span class="nt">li</span><span class="p">&gt;</span>
<span class="cp">{%</span><span class="k">endfor</span><span class="cp">%}</span>
<span class="p">&lt;/</span><span class="nt">ul</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span>
</pre></div>


<p>定义detail.html模板</p>
<div class="codehilite"><pre><span></span><span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="p">&lt;</span><span class="nt">html</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">title</span><span class="p">&gt;</span>详情页<span class="p">&lt;/</span><span class="nt">title</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">h1</span><span class="p">&gt;</span>学生详情<span class="p">&lt;/</span><span class="nt">h1</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">ul</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">li</span><span class="p">&gt;</span>
  <span class="cp">{{</span><span class="nv">student.s_name</span><span class="cp">}}</span>
  <span class="cp">{{</span><span class="nv">student.s_gender</span><span class="cp">}}</span>
  <span class="cp">{{</span><span class="nv">student.s_content</span><span class="cp">}}</span>
<span class="p">&lt;/</span><span class="nt">li</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">ul</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span>
</pre></div>


<h5 id="使用模板">使用模板</h5>
<ul>
<li>定义视图</li>
</ul>
<div class="codehilite"><pre><span></span>def index(request):
    students = StudentInfo.objects.all()
    return render(request, &quot;index.html&quot;, {&quot;students&quot;:students})

def index_page(request, id):
    student = StudentInfo.objects.get(pk=id)
    return render(request, &quot;detail.html&quot;, {&quot;student&quot;:student})
</pre></div>


<ul>
<li>定义路由</li>
</ul>
<div class="codehilite"><pre><span></span>url(r&#39;index/$&#39;, class_view.index, name=&quot;index&quot;),
url(r&#39;index/(\d+)/$&#39;, class_view.index_page, name=&quot;index_page&quot;),
</pre></div>


<ul>
<li>运行项目</li>
<li>python manage.py runserver</li>
</ul>
<div class="toc">
<ul>
<li><a href="#django是个啥">Django是个啥</a></li>
<li><a href="#开发环境">开发环境</a></li>
<li><a href="#ubuntu系统和命令介绍">Ubuntu系统和命令介绍</a><ul>
<li><a href="#系统设置">系统设置</a></li>
<li><a href="#常用命令">常用命令</a></li>
</ul>
</li>
<li><a href="#bscs">BS/CS</a></li>
<li><a href="#mvcmvt">MVC/MVT</a></li>
<li><a href="#hellodjango项目">HelloDjango项目</a><ul>
<li><a href="#创建虚拟环境">创建虚拟环境</a></li>
<li><a href="#虚拟环境的优点">虚拟环境的优点</a><ul>
<li><a href="#linuxmacos-下">Linux/MacOS 下</a></li>
<li><a href="#windows-下">Windows 下：</a></li>
<li><a href="#虚拟环境使用方法">虚拟环境使用方法：</a></li>
</ul>
</li>
<li><a href="#安装django框架">安装Django框架</a></li>
<li><a href="#创建hellodjango项目">创建HelloDJango项目</a></li>
<li><a href="#django的项目结构">Django的项目结构</a></li>
<li><a href="#settingspy">settings.py</a></li>
<li><a href="#pycharm安装">Pycharm安装</a></li>
<li><a href="#创建数据库">创建数据库</a></li>
<li><a href="#创建视图">创建视图</a></li>
</ul>
</li>
<li><a href="#django请求流程">Django请求流程</a></li>
<li><a href="#设计一个小项目">设计一个小项目</a><ul>
<li><a href="#需求分析">需求分析</a></li>
<li><a href="#数据库配置">数据库配置</a></li>
<li><a href="#创建应用">创建应用</a></li>
<li><a href="#定义模型类">定义模型类</a></li>
<li><a href="#生成数据表">生成数据表</a></li>
<li><a href="#测试数据操作">测试数据操作</a></li>
<li><a href="#关联对象的操作">关联对象的操作</a></li>
<li><a href="#运行项目">运行项目</a></li>
</ul>
</li>
<li><a href="#项目主要部分">项目主要部分</a><ul>
<li><a href="#视图">视图</a></li>
<li><a href="#路由">路由</a></li>
<li><a href="#模板">模板</a><ul>
<li><a href="#定义模板">定义模板</a></li>
<li><a href="#使用模板">使用模板</a></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>

[pid: 24647|app: 0|req: 38/329] 61.129.7.217 () {46 vars in 1312 bytes} [Wed Aug  1 13:37:11 2018] GET /post/3/?nsukey=RUWLozw0JTV1G6JNLHruMmJxPEqHtfm79LjNa26gKYTYoS9XsDFW2FSO2B4TvUffJQkKX36AhVj313U7HvoLYi9g1QddVM0IExIvs5s2R5j2Bp7VvffN99berzIFnIZgGlXHi2BorKwfIDaBz2F1khnOmmLi9JPlaah36ANaFfo6qHb83D => generated 35800 bytes in 805 msecs (HTTP/1.1 200) 5 headers in 279 bytes (1 switches on core 0)
![Alt text](/static/images/django_blog/01.jpg)

---
typora-copy-images-to: images
typora-root-url: images
---

# Django是个啥

​	最初是被开发来用于管理劳伦斯出版集团旗下的一些以新闻内容为主的网站的。并于2005年7月在BSD许可证下发布。这套框架是以比利时的吉普赛爵士吉他手Django Reinhardt来命名的。

​	Django的主要目标是使得开发复杂的、数据库驱动的网站变得简单。Django注重组件的重用性和“可插拔性”，敏捷开发和DRY法则（Don't Repeat Yourself）。在Django中Python被普遍使用，甚至包括配置文件和数据模型。

- 由 Python 开发的一个免费的开源网站框架，可以用于快速搭建高性能，优雅的网站

- Django 中提供了开发网站经常用到的模块，常见的代码都为你写好了

- Django 提供了通用Web开发模式的高度抽象，提供了频繁进行的编程作业的快速解决方法，以及为“如何解决问题”提供了清晰明了的约定。

- Django的理念是DRY(Don't Repeat Yourself)来鼓励快速开发！

  

# 开发环境

Ubuntu + Python3  + Django + PyCharm



# Ubuntu系统和命令介绍

### 系统设置

### 常用命令

- cd
- ls
- cp
- mv
- rm
- mkdir
- pwd
- touch
- cat
- history
- ps
  - ps -aux
- kill 
  - kill -9 pid
- su/sudo
- chmod
- grep
- which
- whereis
- ifconfig
- netstat
  - netstat -antp 查看网络连接状态
- wget
- ssh username@host -p
  - ssh-keygen
- tar
  - tar -zxvf 解压缩
  - tar -czvf 压缩
- du
  - du -sh
- df
  - df -h
- apt install
- apt update
- apt remove
- apt autoremove
- dpkg -i
- vi/vim

# BS/CS

​        C/S 架构即“客户端-服务器” 架构。这里的“客户端”可以是有 GUI （图形用户界面）的定制软件，也可以是浏览器，甚至可以是通过 SSH 访问服务器的命令行脚本。只要是客户端通过访问服务器调取计算或者存储资源的，统统都是 C/S 架构。所谓的 Browser-Server 架构其实是 C/S 架构的一种特殊的实现形式，而不是其对立面。

- C/S:
  - C: Client
  - S: Server
- B/S
  - B: Browser
  - S: Server       

# MVC/MVT

- MVC

  - M: Model（模型）
  - V: View（视图）
  - C: Controller（控制器）

- MVT

  - M: Model（模型），主要封装对数据库层的访问，对数据库中的数据进行增、删、改、查操作。

  - V: View（视图），用于封装结果，生成页面展示的html内容。

  - T: Template（模板），用于接收请求，处理业务逻辑，与Model和View交互，返回结果。

    ​

# HelloDjango项目

### 创建虚拟环境

### 虚拟环境的优点

- 使不同应用开发环境独立
- 环境升级不影响其他应用，也不会影响全局的python环境
- 可以防止系统中出现包管理混乱和版本冲突

开发会用 virtualenv 来管理多个开发环境

#### Linux/MacOS 下

virtualenvwrapper 使得virtualenv变得更好用，所以我们一起安装了

```
(sudo) pip install virtualenv virtualenvwrapper
```

修改~/.bash_profile或其它环境变量相关文件(如 .bashrc 或用 ZSH 之后的 .zshrc)，添加以下语句

```
export WORKON_HOME=$HOME/.virtualenvs
export PROJECT_HOME=$HOME/workspace
source /usr/local/bin/virtualenvwrapper.sh(每台机子的位置不一样，可以通过find命令找到)
```

修改后使之立即生效(也可以重启终端使之生效)：

```
source ~/.bash_profile
```



#### Windows 下：

```
pip install virtualenv virtualenvwrapper-win
```

【可选】Windows下默认虚拟环境是放在用户名下面的Envs中的，与桌面，我的文档，下载等文件夹在一块的。更改方法：计算机，属性，高级系统设置，环境变量，添加WORKON_HOME，如图（windows 10 环境变量设置截图）：

![](/1.png)

#### 虚拟环境使用方法：

- **mkvirtualenv django：创建运行环境django**

- **workon django: 工作在 django环境 或 从其它环境切换到 django环境**

- **deactivate**: 退出终端环境

- **其它的：**

- **rmvirtualenv** ENV：删除运行环境ENV

- **mkproject** mic：创建mic项目和运行环境mic

- **mktmpenv**：创建临时运行环境

- **lsvirtualenv**: 列出可用的运行环境

- **lssitepackages**: 列出当前环境安装了的包

  ​




### 安装Django框架

- pip install django==1.11.7

- 测试django是否已经安装好

  - 进入python shell

    ```python
    import django
    django.get_version()
    ```

- pip list 显示当前python环境中的所有的库

- pip freeze 显示当前python环境中的除系统内置库外的所有第三方库

### 创建HelloDJango项目

- 开启一个django项目 django-admin startproject day01_HelloDjango
- 测试django项目环境 python manage.py runserver
  - python manage.py runserver 0.0.0.0:8000 表示允许本机所有的IP被外网访问
  - python manage.py runserver 9000 使用本机运行，但端口是9000
- 开启自己的App
  - python manage.py startapp App



### Django的项目结构

1. manage.py
   - 管理整个项目
2. XXX/settings.py  
   - 项目配置文件
3. XXX/urls.py
   - 路由器，接收用户请求，分发给视图函数（控制器）
4. XXX/wsgi.py
   - 网关接口，通常用在线上环境部署（开发过程中不会接触）

### settings.py

1. DEBUG 是否打开DEBUG
2. ALLOWED_HOSTS 允许访问的主机
3. INSTALLED_APPS   安装了的应用 
4. DATABASES   数据库配置
5. LANGUAGE_CODE 中文 zh-hans
6. TIME_ZONE  中国 Asia/Shanghai



### Pycharm安装

1. 解压
2. 目录结构中会有  bin
3. 进入bin
4. bin 中pycharm.sh
5. 执行 ./pycharm.sh
6. 如果想在终端中的任何位置运行，那就配置到环境变量中



### 创建数据库

- 创建更改的文件
  - python manage.py makemigrations
- 将生成的py文件应用到数据库
  - python manage.py migrate
- 清空数据库
  - python manage.py flush
- 导入导出数据
  - python manage.py dumpdata appname > appname.json
  - python manage.py loaddata appname.json

### 创建视图

- 需要配置到工程的配置文件中settings中的INSTALLED_APPS
- views中定义函数，接收request，返回response
- 在urls中配置路由规则
  - 在根urls中配置（管理麻烦，配置简单）
  - 在App中创建自己的urls，在urls中书写规则，将urls配置到工程urls中
- 创建模板目录，在views返回时调用模板的渲染
- 变更数据库
  - 在settings中配置数据库信息



# Django请求流程

- 进来的请求转入/index/。
- Django 通过在 ROOT_URLCONF 配置来决定根 URLconf。
- Django 在 URLconf 中的所有 URL 模式中，查找第一个匹配 /index/ 的条目。
- 如果找到匹配，将调用相应的视图函数。
- 视图函数返回一个 HttpResponse。
- Django 转换 HttpResponse 为一个适合的 HTTP response， 以 Web page 显示出来。



# 设计一个小项目

### 需求分析

- 本示例完成“班级-学生”信息的维护，需要存储两种数据：班级、学生
- 班级表结构设计：
  - 表名：Grade
  - 班级名称：g_name
  - 班级人数：g_num
- 学生表结构设计：
  - 表名：Student
  - 学生姓名：s_name
  - 学生性别：s_gender
  - 所属班级：s_grade
- 班级-学生的关系为一对多

### 数据库配置

- 在settings.py文件中，通过DATABASES项进行数据库设置
- django支持的数据库包括：sqlite、mysql等主流数据库
- Django默认使用SQLite数据库

### 创建应用

- 在一个项目中可以创建一到多个应用，每个应用进行一种业务处理
- 创建应用的命令：

```
python manage.py startapp day1_hello_django
```

- 应用的目录结构如下图

![](/django项目目录结构.png)

### 定义模型类

- 有一个数据表，就有一个模型类与之对应
- 打开models.py文件，定义模型类
- 引入包from django.db import models
- 模型类继承自models.Model类
- **说明：不需要定义主键列，在生成时会自动添加，并且值为自动增长**
- 当输出对象时，会调用对象的str方法

```python
from django.db import models

class Grade(models.Model):
    g_name = models.CharField(max_length=20, db_column="班级名称")
    g_num = models.IntegerField(default=30)
    g_crete_date = models.DateTimeField(auto_now=True)

class Student(models.Model):
    s_name = models.CharField(max_length=20, db_column="姓名")
    s_age = models.IntegerField(default=20, db_column="年龄")
    s_sex = models.BooleanField(default=True)
    s_birthday = models.DateTimeField()
    s_grade = models.ForeignKey(Grade)

    class Meta:
        ordering = ["-s_age"]
        # 为数据库设置别名
        verbose_name = "学生表"
    	verbose_name_plural = "学生表"
        
    def _ _str_ _(self):
        return "%d" % self.pk
```

### 生成数据表

- 激活模型：编辑settings.py文件，将booktest应用加入到installed_apps中

  ![1531115052424](/注册app.png)

- 生成迁移文件：根据模型类生成sql语句

```
python manage.py makemigrations
```

- 迁移文件被生成到应用的migrations目录

![1531115146872](/迁移文件.png)

- 执行迁移：执行sql语句生成数据表

```
python manage.py migrate
```

### 测试数据操作

- 进入python shell，进行简单的模型API练习

```
python manage.py shell
```

- 进入shell后提示如下：

![](/进入django shell.png)

- 引入需要的包：

```
from App.models import Grade,Student
```

- 查询所有班级信息：

```
Grade.objects.all()
```

- 新建班级信息：

```
grade = Grade()
grade.g_name = "深圳python1805班"
grade.g_num = 40
grade.save()
```

- 查找班级信息：

```
grade = Grade.objects.get(pk=1)
```

- 输出班级信息：

```
grade
grade.id
grade.g_name
```

- 修改班级信息：

```
grade.g_name="大神班"
grade.save()
```

- 删除班级信息：

```
grade.delete()
```

### 关联对象的操作

- 对于Student可以按照上面的操作方式进行
- 添加，注意添加关联对象

```
s=Student()
s.s_name='张三'
s.s_sex=True
s.scontent='爱好打篮球'
# 注意grade为Grade的实例，上面我们已经删除了，这里需要重新创建
s.sclass=grade
s.save()
```

### 运行项目

```
python manage.py runserver ip:port
```



# 项目主要部分

### 视图

- 在django中，视图的作用是对路由转发过来的url进行处理
- 视图函数接收的第一个参数是request对象，request对象中包含了请求的信息
- 视图函数写每个app下的views.py文件中

```
from django.shortcuts import render
from django.http import HttpResponse

# Create your views here.

def index(request):
    return HttpResponse("Hello Django")
```

注意：视图函数的第一个参数必须是request，返回必须调用django的定义的方法规范。

### 路由

- 在视图函数写完后，要编写相应的url规则，这样当我们在浏览器上输入网址的时候才能转到相应的视图函数处理逻辑
- 只定义路径部分，不定义域名
- 路由函数的url部分遵循正则的书写方式
- 路由规则由两部分必须指定的参数和其他可选参数组成

```
url(r'^index/', App.index, name="index"),
```

注：每次定义完路由规则，在代码的末尾添加逗号

- 在编写路由规则之前必须导入相应的视图
- 在组织项目时，将app和项目的路由分离



### 模板

- 模板是HTML文件，通过占位符来传递视图函数的数据

- 每个app目录下都可以创建templates的文件夹，django会自动从这些app里寻找相应的模板

  

##### 定义模板

定义index.html模板文件

```
<!DOCTYPE html>
<html>
<head>
  <title>首页</title>
</head>
<body>
<h1>学生列表</h1>
<ul>
{%for student in students%}
<li>
  {{student.s_name}}
</li>
{%endfor%}
</ul>
</body>
</html>
```

定义detail.html模板

```
<!DOCTYPE html>
<html>
<head>
  <title>详情页</title>
</head>
<body>
<h1>学生详情</h1>
<ul>
<li>
  {{student.s_name}}
  {{student.s_gender}}
  {{student.s_content}}
</li>
</ul>
</body>
</html>
```

##### 使用模板

- 定义视图

```
def index(request):
    students = StudentInfo.objects.all()
    return render(request, "index.html", {"students":students})

def index_page(request, id):
    student = StudentInfo.objects.get(pk=id)
    return render(request, "detail.html", {"student":student})
```

- 定义路由

```
url(r'index/$', class_view.index, name="index"),
url(r'index/(\d+)/$', class_view.index_page, name="index_page"),
```

- 运行项目
  - python manage.py runserver
------------------------------------------------------------------------------------------------------------------------
<p><img alt="Alt text" src="/static/images/django_blog/01.jpg" /></p>
<hr />
<p>typora-copy-images-to: images
typora-root-url: images</p>
<hr />
<h1 id="django是个啥">Django是个啥</h1>
<p>​   最初是被开发来用于管理劳伦斯出版集团旗下的一些以新闻内容为主的网站的。并于2005年7月在BSD许可证下发布。这套框架是以比利时的吉普赛爵士吉他手Django Reinhardt来命名的。</p>
<p>​   Django的主要目标是使得开发复杂的、数据库驱动的网站变得简单。Django注重组件的重用性和“可插拔性”，敏捷开发和DRY法则（Don't Repeat Yourself）。在Django中Python被普遍使用，甚至包括配置文件和数据模型。</p>
<ul>
<li>
<p>由 Python 开发的一个免费的开源网站框架，可以用于快速搭建高性能，优雅的网站</p>
</li>
<li>
<p>Django 中提供了开发网站经常用到的模块，常见的代码都为你写好了</p>
</li>
<li>
<p>Django 提供了通用Web开发模式的高度抽象，提供了频繁进行的编程作业的快速解决方法，以及为“如何解决问题”提供了清晰明了的约定。</p>
</li>
<li>
<p>Django的理念是DRY(Don't Repeat Yourself)来鼓励快速开发！</p>
</li>
</ul>
<h1 id="开发环境">开发环境</h1>
<p>Ubuntu + Python3  + Django + PyCharm</p>
<h1 id="ubuntu系统和命令介绍">Ubuntu系统和命令介绍</h1>
<h3 id="系统设置">系统设置</h3>
<h3 id="常用命令">常用命令</h3>
<ul>
<li>cd</li>
<li>ls</li>
<li>cp</li>
<li>mv</li>
<li>rm</li>
<li>mkdir</li>
<li>pwd</li>
<li>touch</li>
<li>cat</li>
<li>history</li>
<li>ps</li>
<li>ps -aux</li>
<li>kill </li>
<li>kill -9 pid</li>
<li>su/sudo</li>
<li>chmod</li>
<li>grep</li>
<li>which</li>
<li>whereis</li>
<li>ifconfig</li>
<li>netstat</li>
<li>netstat -antp 查看网络连接状态</li>
<li>wget</li>
<li>ssh username@host -p</li>
<li>ssh-keygen</li>
<li>tar</li>
<li>tar -zxvf 解压缩</li>
<li>tar -czvf 压缩</li>
<li>du</li>
<li>du -sh</li>
<li>df</li>
<li>df -h</li>
<li>apt install</li>
<li>apt update</li>
<li>apt remove</li>
<li>apt autoremove</li>
<li>dpkg -i</li>
<li>vi/vim</li>
</ul>
<h1 id="bscs">BS/CS</h1>
<p>​        C/S 架构即“客户端-服务器” 架构。这里的“客户端”可以是有 GUI （图形用户界面）的定制软件，也可以是浏览器，甚至可以是通过 SSH 访问服务器的命令行脚本。只要是客户端通过访问服务器调取计算或者存储资源的，统统都是 C/S 架构。所谓的 Browser-Server 架构其实是 C/S 架构的一种特殊的实现形式，而不是其对立面。</p>
<ul>
<li>C/S:</li>
<li>C: Client</li>
<li>S: Server</li>
<li>B/S</li>
<li>B: Browser</li>
<li>S: Server       </li>
</ul>
<h1 id="mvcmvt">MVC/MVT</h1>
<ul>
<li>
<p>MVC</p>
</li>
<li>
<p>M: Model（模型）</p>
</li>
<li>V: View（视图）</li>
<li>
<p>C: Controller（控制器）</p>
</li>
<li>
<p>MVT</p>
</li>
<li>
<p>M: Model（模型），主要封装对数据库层的访问，对数据库中的数据进行增、删、改、查操作。</p>
</li>
<li>
<p>V: View（视图），用于封装结果，生成页面展示的html内容。</p>
</li>
<li>
<p>T: Template（模板），用于接收请求，处理业务逻辑，与Model和View交互，返回结果。</p>
<p>​</p>
</li>
</ul>
<h1 id="hellodjango项目">HelloDjango项目</h1>
<h3 id="创建虚拟环境">创建虚拟环境</h3>
<h3 id="虚拟环境的优点">虚拟环境的优点</h3>
<ul>
<li>使不同应用开发环境独立</li>
<li>环境升级不影响其他应用，也不会影响全局的python环境</li>
<li>可以防止系统中出现包管理混乱和版本冲突</li>
</ul>
<p>开发会用 virtualenv 来管理多个开发环境</p>
<h4 id="linuxmacos-下">Linux/MacOS 下</h4>
<p>virtualenvwrapper 使得virtualenv变得更好用，所以我们一起安装了</p>
<div class="codehilite"><pre><span></span>(sudo) pip install virtualenv virtualenvwrapper
</pre></div>


<p>修改~/.bash_profile或其它环境变量相关文件(如 .bashrc 或用 ZSH 之后的 .zshrc)，添加以下语句</p>
<div class="codehilite"><pre><span></span>export WORKON_HOME=$HOME/.virtualenvs
export PROJECT_HOME=$HOME/workspace
source /usr/local/bin/virtualenvwrapper.sh(每台机子的位置不一样，可以通过find命令找到)
</pre></div>


<p>修改后使之立即生效(也可以重启终端使之生效)：</p>
<div class="codehilite"><pre><span></span>source ~/.bash_profile
</pre></div>


<h4 id="windows-下">Windows 下：</h4>
<div class="codehilite"><pre><span></span>pip install virtualenv virtualenvwrapper-win
</pre></div>


<p>【可选】Windows下默认虚拟环境是放在用户名下面的Envs中的，与桌面，我的文档，下载等文件夹在一块的。更改方法：计算机，属性，高级系统设置，环境变量，添加WORKON_HOME，如图（windows 10 环境变量设置截图）：</p>
<p><img alt="" src="/1.png" /></p>
<h4 id="虚拟环境使用方法">虚拟环境使用方法：</h4>
<ul>
<li>
<p><strong>mkvirtualenv django：创建运行环境django</strong></p>
</li>
<li>
<p><strong>workon django: 工作在 django环境 或 从其它环境切换到 django环境</strong></p>
</li>
<li>
<p><strong>deactivate</strong>: 退出终端环境</p>
</li>
<li>
<p><strong>其它的：</strong></p>
</li>
<li>
<p><strong>rmvirtualenv</strong> ENV：删除运行环境ENV</p>
</li>
<li>
<p><strong>mkproject</strong> mic：创建mic项目和运行环境mic</p>
</li>
<li>
<p><strong>mktmpenv</strong>：创建临时运行环境</p>
</li>
<li>
<p><strong>lsvirtualenv</strong>: 列出可用的运行环境</p>
</li>
<li>
<p><strong>lssitepackages</strong>: 列出当前环境安装了的包</p>
</li>
</ul>
<p>​</p>
<h3 id="安装django框架">安装Django框架</h3>
<ul>
<li>
<p>pip install django==1.11.7</p>
</li>
<li>
<p>测试django是否已经安装好</p>
</li>
<li>
<p>进入python shell</p>
<p><code>python
import django
django.get_version()</code></p>
</li>
<li>
<p>pip list 显示当前python环境中的所有的库</p>
</li>
<li>
<p>pip freeze 显示当前python环境中的除系统内置库外的所有第三方库</p>
</li>
</ul>
<h3 id="创建hellodjango项目">创建HelloDJango项目</h3>
<ul>
<li>开启一个django项目 django-admin startproject day01_HelloDjango</li>
<li>测试django项目环境 python manage.py runserver</li>
<li>python manage.py runserver 0.0.0.0:8000 表示允许本机所有的IP被外网访问</li>
<li>python manage.py runserver 9000 使用本机运行，但端口是9000</li>
<li>开启自己的App</li>
<li>python manage.py startapp App</li>
</ul>
<h3 id="django的项目结构">Django的项目结构</h3>
<ol>
<li>manage.py</li>
<li>管理整个项目</li>
<li>XXX/settings.py  </li>
<li>项目配置文件</li>
<li>XXX/urls.py</li>
<li>路由器，接收用户请求，分发给视图函数（控制器）</li>
<li>XXX/wsgi.py</li>
<li>网关接口，通常用在线上环境部署（开发过程中不会接触）</li>
</ol>
<h3 id="settingspy">settings.py</h3>
<ol>
<li>DEBUG 是否打开DEBUG</li>
<li>ALLOWED_HOSTS 允许访问的主机</li>
<li>INSTALLED_APPS   安装了的应用 </li>
<li>DATABASES   数据库配置</li>
<li>LANGUAGE_CODE 中文 zh-hans</li>
<li>TIME_ZONE  中国 Asia/Shanghai</li>
</ol>
<h3 id="pycharm安装">Pycharm安装</h3>
<ol>
<li>解压</li>
<li>目录结构中会有  bin</li>
<li>进入bin</li>
<li>bin 中pycharm.sh</li>
<li>执行 ./pycharm.sh</li>
<li>如果想在终端中的任何位置运行，那就配置到环境变量中</li>
</ol>
<h3 id="创建数据库">创建数据库</h3>
<ul>
<li>创建更改的文件</li>
<li>python manage.py makemigrations</li>
<li>将生成的py文件应用到数据库</li>
<li>python manage.py migrate</li>
<li>清空数据库</li>
<li>python manage.py flush</li>
<li>导入导出数据</li>
<li>python manage.py dumpdata appname &gt; appname.json</li>
<li>python manage.py loaddata appname.json</li>
</ul>
<h3 id="创建视图">创建视图</h3>
<ul>
<li>需要配置到工程的配置文件中settings中的INSTALLED_APPS</li>
<li>views中定义函数，接收request，返回response</li>
<li>在urls中配置路由规则</li>
<li>在根urls中配置（管理麻烦，配置简单）</li>
<li>在App中创建自己的urls，在urls中书写规则，将urls配置到工程urls中</li>
<li>创建模板目录，在views返回时调用模板的渲染</li>
<li>变更数据库</li>
<li>在settings中配置数据库信息</li>
</ul>
<h1 id="django请求流程">Django请求流程</h1>
<ul>
<li>进来的请求转入/index/。</li>
<li>Django 通过在 ROOT_URLCONF 配置来决定根 URLconf。</li>
<li>Django 在 URLconf 中的所有 URL 模式中，查找第一个匹配 /index/ 的条目。</li>
<li>如果找到匹配，将调用相应的视图函数。</li>
<li>视图函数返回一个 HttpResponse。</li>
<li>Django 转换 HttpResponse 为一个适合的 HTTP response， 以 Web page 显示出来。</li>
</ul>
<h1 id="设计一个小项目">设计一个小项目</h1>
<h3 id="需求分析">需求分析</h3>
<ul>
<li>本示例完成“班级-学生”信息的维护，需要存储两种数据：班级、学生</li>
<li>班级表结构设计：</li>
<li>表名：Grade</li>
<li>班级名称：g_name</li>
<li>班级人数：g_num</li>
<li>学生表结构设计：</li>
<li>表名：Student</li>
<li>学生姓名：s_name</li>
<li>学生性别：s_gender</li>
<li>所属班级：s_grade</li>
<li>班级-学生的关系为一对多</li>
</ul>
<h3 id="数据库配置">数据库配置</h3>
<ul>
<li>在settings.py文件中，通过DATABASES项进行数据库设置</li>
<li>django支持的数据库包括：sqlite、mysql等主流数据库</li>
<li>Django默认使用SQLite数据库</li>
</ul>
<h3 id="创建应用">创建应用</h3>
<ul>
<li>在一个项目中可以创建一到多个应用，每个应用进行一种业务处理</li>
<li>创建应用的命令：</li>
</ul>
<div class="codehilite"><pre><span></span>python manage.py startapp day1_hello_django
</pre></div>


<ul>
<li>应用的目录结构如下图</li>
</ul>
<p><img alt="" src="/django项目目录结构.png" /></p>
<h3 id="定义模型类">定义模型类</h3>
<ul>
<li>有一个数据表，就有一个模型类与之对应</li>
<li>打开models.py文件，定义模型类</li>
<li>引入包from django.db import models</li>
<li>模型类继承自models.Model类</li>
<li><strong>说明：不需要定义主键列，在生成时会自动添加，并且值为自动增长</strong></li>
<li>当输出对象时，会调用对象的str方法</li>
</ul>
<div class="codehilite"><pre><span></span><span class="kn">from</span> <span class="nn">django.db</span> <span class="kn">import</span> <span class="n">models</span>

<span class="k">class</span> <span class="nc">Grade</span><span class="p">(</span><span class="n">models</span><span class="o">.</span><span class="n">Model</span><span class="p">):</span>
    <span class="n">g_name</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">CharField</span><span class="p">(</span><span class="n">max_length</span><span class="o">=</span><span class="mi">20</span><span class="p">,</span> <span class="n">db_column</span><span class="o">=</span><span class="s2">&quot;班级名称&quot;</span><span class="p">)</span>
    <span class="n">g_num</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">IntegerField</span><span class="p">(</span><span class="n">default</span><span class="o">=</span><span class="mi">30</span><span class="p">)</span>
    <span class="n">g_crete_date</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">DateTimeField</span><span class="p">(</span><span class="n">auto_now</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>

<span class="k">class</span> <span class="nc">Student</span><span class="p">(</span><span class="n">models</span><span class="o">.</span><span class="n">Model</span><span class="p">):</span>
    <span class="n">s_name</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">CharField</span><span class="p">(</span><span class="n">max_length</span><span class="o">=</span><span class="mi">20</span><span class="p">,</span> <span class="n">db_column</span><span class="o">=</span><span class="s2">&quot;姓名&quot;</span><span class="p">)</span>
    <span class="n">s_age</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">IntegerField</span><span class="p">(</span><span class="n">default</span><span class="o">=</span><span class="mi">20</span><span class="p">,</span> <span class="n">db_column</span><span class="o">=</span><span class="s2">&quot;年龄&quot;</span><span class="p">)</span>
    <span class="n">s_sex</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">BooleanField</span><span class="p">(</span><span class="n">default</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
    <span class="n">s_birthday</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">DateTimeField</span><span class="p">()</span>
    <span class="n">s_grade</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">ForeignKey</span><span class="p">(</span><span class="n">Grade</span><span class="p">)</span>

    <span class="k">class</span> <span class="nc">Meta</span><span class="p">:</span>
        <span class="n">ordering</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&quot;-s_age&quot;</span><span class="p">]</span>
        <span class="c1"># 为数据库设置别名</span>
        <span class="n">verbose_name</span> <span class="o">=</span> <span class="s2">&quot;学生表&quot;</span>
        <span class="n">verbose_name_plural</span> <span class="o">=</span> <span class="s2">&quot;学生表&quot;</span>

    <span class="k">def</span> <span class="nf">_</span> <span class="n">_str_</span> <span class="n">_</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">return</span> <span class="s2">&quot;</span><span class="si">%d</span><span class="s2">&quot;</span> <span class="o">%</span> <span class="bp">self</span><span class="o">.</span><span class="n">pk</span>
</pre></div>


<h3 id="生成数据表">生成数据表</h3>
<ul>
<li>激活模型：编辑settings.py文件，将booktest应用加入到installed_apps中</li>
</ul>
<p><img alt="1531115052424" src="/注册app.png" /></p>
<ul>
<li>生成迁移文件：根据模型类生成sql语句</li>
</ul>
<div class="codehilite"><pre><span></span>python manage.py makemigrations
</pre></div>


<ul>
<li>迁移文件被生成到应用的migrations目录</li>
</ul>
<p><img alt="1531115146872" src="/迁移文件.png" /></p>
<ul>
<li>执行迁移：执行sql语句生成数据表</li>
</ul>
<div class="codehilite"><pre><span></span>python manage.py migrate
</pre></div>


<h3 id="测试数据操作">测试数据操作</h3>
<ul>
<li>进入python shell，进行简单的模型API练习</li>
</ul>
<div class="codehilite"><pre><span></span>python manage.py shell
</pre></div>


<ul>
<li>进入shell后提示如下：</li>
</ul>
<p>![](/进入django shell.png)</p>
<ul>
<li>引入需要的包：</li>
</ul>
<div class="codehilite"><pre><span></span><span class="kn">from</span> <span class="nn">App.models</span> <span class="kn">import</span> <span class="n">Grade</span><span class="p">,</span><span class="n">Student</span>
</pre></div>


<ul>
<li>查询所有班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>Grade.objects.all()
</pre></div>


<ul>
<li>新建班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>grade = Grade()
grade.g_name = &quot;深圳python1805班&quot;
grade.g_num = 40
grade.save()
</pre></div>


<ul>
<li>查找班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>grade = Grade.objects.get(pk=1)
</pre></div>


<ul>
<li>输出班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>grade
grade.id
grade.g_name
</pre></div>


<ul>
<li>修改班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>grade.g_name=&quot;大神班&quot;
grade.save()
</pre></div>


<ul>
<li>删除班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>grade.delete()
</pre></div>


<h3 id="关联对象的操作">关联对象的操作</h3>
<ul>
<li>对于Student可以按照上面的操作方式进行</li>
<li>添加，注意添加关联对象</li>
</ul>
<div class="codehilite"><pre><span></span>s=Student()
s.s_name=&#39;张三&#39;
s.s_sex=True
s.scontent=&#39;爱好打篮球&#39;
# 注意grade为Grade的实例，上面我们已经删除了，这里需要重新创建
s.sclass=grade
s.save()
</pre></div>


<h3 id="运行项目">运行项目</h3>
<div class="codehilite"><pre><span></span>python manage.py runserver ip:port
</pre></div>


<h1 id="项目主要部分">项目主要部分</h1>
<h3 id="视图">视图</h3>
<ul>
<li>在django中，视图的作用是对路由转发过来的url进行处理</li>
<li>视图函数接收的第一个参数是request对象，request对象中包含了请求的信息</li>
<li>视图函数写每个app下的views.py文件中</li>
</ul>
<div class="codehilite"><pre><span></span><span class="kn">from</span> <span class="nn">django.shortcuts</span> <span class="kn">import</span> <span class="n">render</span>
<span class="kn">from</span> <span class="nn">django.http</span> <span class="kn">import</span> <span class="n">HttpResponse</span>

<span class="c1"># Create your views here.</span>

<span class="k">def</span> <span class="nf">index</span><span class="p">(</span><span class="n">request</span><span class="p">):</span>
    <span class="k">return</span> <span class="n">HttpResponse</span><span class="p">(</span><span class="s2">&quot;Hello Django&quot;</span><span class="p">)</span>
</pre></div>


<p>注意：视图函数的第一个参数必须是request，返回必须调用django的定义的方法规范。</p>
<h3 id="路由">路由</h3>
<ul>
<li>在视图函数写完后，要编写相应的url规则，这样当我们在浏览器上输入网址的时候才能转到相应的视图函数处理逻辑</li>
<li>只定义路径部分，不定义域名</li>
<li>路由函数的url部分遵循正则的书写方式</li>
<li>路由规则由两部分必须指定的参数和其他可选参数组成</li>
</ul>
<div class="codehilite"><pre><span></span>url(r&#39;^index/&#39;, App.index, name=&quot;index&quot;),
</pre></div>


<p>注：每次定义完路由规则，在代码的末尾添加逗号</p>
<ul>
<li>在编写路由规则之前必须导入相应的视图</li>
<li>在组织项目时，将app和项目的路由分离</li>
</ul>
<h3 id="模板">模板</h3>
<ul>
<li>
<p>模板是HTML文件，通过占位符来传递视图函数的数据</p>
</li>
<li>
<p>每个app目录下都可以创建templates的文件夹，django会自动从这些app里寻找相应的模板</p>
</li>
</ul>
<h5 id="定义模板">定义模板</h5>
<p>定义index.html模板文件</p>
<div class="codehilite"><pre><span></span><span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="p">&lt;</span><span class="nt">html</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">title</span><span class="p">&gt;</span>首页<span class="p">&lt;/</span><span class="nt">title</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">h1</span><span class="p">&gt;</span>学生列表<span class="p">&lt;/</span><span class="nt">h1</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">ul</span><span class="p">&gt;</span>
<span class="cp">{%</span><span class="k">for</span> <span class="nv">student</span> <span class="k">in</span> <span class="nv">students</span><span class="cp">%}</span>
<span class="p">&lt;</span><span class="nt">li</span><span class="p">&gt;</span>
  <span class="cp">{{</span><span class="nv">student.s_name</span><span class="cp">}}</span>
<span class="p">&lt;/</span><span class="nt">li</span><span class="p">&gt;</span>
<span class="cp">{%</span><span class="k">endfor</span><span class="cp">%}</span>
<span class="p">&lt;/</span><span class="nt">ul</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span>
</pre></div>


<p>定义detail.html模板</p>
<div class="codehilite"><pre><span></span><span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="p">&lt;</span><span class="nt">html</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">title</span><span class="p">&gt;</span>详情页<span class="p">&lt;/</span><span class="nt">title</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">h1</span><span class="p">&gt;</span>学生详情<span class="p">&lt;/</span><span class="nt">h1</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">ul</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">li</span><span class="p">&gt;</span>
  <span class="cp">{{</span><span class="nv">student.s_name</span><span class="cp">}}</span>
  <span class="cp">{{</span><span class="nv">student.s_gender</span><span class="cp">}}</span>
  <span class="cp">{{</span><span class="nv">student.s_content</span><span class="cp">}}</span>
<span class="p">&lt;/</span><span class="nt">li</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">ul</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span>
</pre></div>


<h5 id="使用模板">使用模板</h5>
<ul>
<li>定义视图</li>
</ul>
<div class="codehilite"><pre><span></span>def index(request):
    students = StudentInfo.objects.all()
    return render(request, &quot;index.html&quot;, {&quot;students&quot;:students})

def index_page(request, id):
    student = StudentInfo.objects.get(pk=id)
    return render(request, &quot;detail.html&quot;, {&quot;student&quot;:student})
</pre></div>


<ul>
<li>定义路由</li>
</ul>
<div class="codehilite"><pre><span></span>url(r&#39;index/$&#39;, class_view.index, name=&quot;index&quot;),
url(r&#39;index/(\d+)/$&#39;, class_view.index_page, name=&quot;index_page&quot;),
</pre></div>


<ul>
<li>运行项目</li>
<li>python manage.py runserver</li>
</ul>
<div class="toc">
<ul>
<li><a href="#django是个啥">Django是个啥</a></li>
<li><a href="#开发环境">开发环境</a></li>
<li><a href="#ubuntu系统和命令介绍">Ubuntu系统和命令介绍</a><ul>
<li><a href="#系统设置">系统设置</a></li>
<li><a href="#常用命令">常用命令</a></li>
</ul>
</li>
<li><a href="#bscs">BS/CS</a></li>
<li><a href="#mvcmvt">MVC/MVT</a></li>
<li><a href="#hellodjango项目">HelloDjango项目</a><ul>
<li><a href="#创建虚拟环境">创建虚拟环境</a></li>
<li><a href="#虚拟环境的优点">虚拟环境的优点</a><ul>
<li><a href="#linuxmacos-下">Linux/MacOS 下</a></li>
<li><a href="#windows-下">Windows 下：</a></li>
<li><a href="#虚拟环境使用方法">虚拟环境使用方法：</a></li>
</ul>
</li>
<li><a href="#安装django框架">安装Django框架</a></li>
<li><a href="#创建hellodjango项目">创建HelloDJango项目</a></li>
<li><a href="#django的项目结构">Django的项目结构</a></li>
<li><a href="#settingspy">settings.py</a></li>
<li><a href="#pycharm安装">Pycharm安装</a></li>
<li><a href="#创建数据库">创建数据库</a></li>
<li><a href="#创建视图">创建视图</a></li>
</ul>
</li>
<li><a href="#django请求流程">Django请求流程</a></li>
<li><a href="#设计一个小项目">设计一个小项目</a><ul>
<li><a href="#需求分析">需求分析</a></li>
<li><a href="#数据库配置">数据库配置</a></li>
<li><a href="#创建应用">创建应用</a></li>
<li><a href="#定义模型类">定义模型类</a></li>
<li><a href="#生成数据表">生成数据表</a></li>
<li><a href="#测试数据操作">测试数据操作</a></li>
<li><a href="#关联对象的操作">关联对象的操作</a></li>
<li><a href="#运行项目">运行项目</a></li>
</ul>
</li>
<li><a href="#项目主要部分">项目主要部分</a><ul>
<li><a href="#视图">视图</a></li>
<li><a href="#路由">路由</a></li>
<li><a href="#模板">模板</a><ul>
<li><a href="#定义模板">定义模板</a></li>
<li><a href="#使用模板">使用模板</a></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>

[pid: 24646|app: 0|req: 68/330] 61.151.178.171 () {46 vars in 1314 bytes} [Wed Aug  1 13:37:14 2018] GET /post/3/?nsukey=RUWLozw0JTV1G6JNLHruMmJxPEqHtfm79LjNa26gKYTYoS9XsDFW2FSO2B4TvUffJQkKX36AhVj313U7HvoLYi9g1QddVM0IExIvs5s2R5j2Bp7VvffN99berzIFnIZgGlXHi2BorKwfIDaBz2F1khnOmmLi9JPlaah36ANaFfo6qHb83D => generated 35800 bytes in 751 msecs (HTTP/1.1 200) 5 headers in 279 bytes (1 switches on core 1)
![Alt text](/static/images/django_blog/01.jpg)

---
typora-copy-images-to: images
typora-root-url: images
---

# Django是个啥

​	最初是被开发来用于管理劳伦斯出版集团旗下的一些以新闻内容为主的网站的。并于2005年7月在BSD许可证下发布。这套框架是以比利时的吉普赛爵士吉他手Django Reinhardt来命名的。

​	Django的主要目标是使得开发复杂的、数据库驱动的网站变得简单。Django注重组件的重用性和“可插拔性”，敏捷开发和DRY法则（Don't Repeat Yourself）。在Django中Python被普遍使用，甚至包括配置文件和数据模型。

- 由 Python 开发的一个免费的开源网站框架，可以用于快速搭建高性能，优雅的网站

- Django 中提供了开发网站经常用到的模块，常见的代码都为你写好了

- Django 提供了通用Web开发模式的高度抽象，提供了频繁进行的编程作业的快速解决方法，以及为“如何解决问题”提供了清晰明了的约定。

- Django的理念是DRY(Don't Repeat Yourself)来鼓励快速开发！

  

# 开发环境

Ubuntu + Python3  + Django + PyCharm



# Ubuntu系统和命令介绍

### 系统设置

### 常用命令

- cd
- ls
- cp
- mv
- rm
- mkdir
- pwd
- touch
- cat
- history
- ps
  - ps -aux
- kill 
  - kill -9 pid
- su/sudo
- chmod
- grep
- which
- whereis
- ifconfig
- netstat
  - netstat -antp 查看网络连接状态
- wget
- ssh username@host -p
  - ssh-keygen
- tar
  - tar -zxvf 解压缩
  - tar -czvf 压缩
- du
  - du -sh
- df
  - df -h
- apt install
- apt update
- apt remove
- apt autoremove
- dpkg -i
- vi/vim

# BS/CS

​        C/S 架构即“客户端-服务器” 架构。这里的“客户端”可以是有 GUI （图形用户界面）的定制软件，也可以是浏览器，甚至可以是通过 SSH 访问服务器的命令行脚本。只要是客户端通过访问服务器调取计算或者存储资源的，统统都是 C/S 架构。所谓的 Browser-Server 架构其实是 C/S 架构的一种特殊的实现形式，而不是其对立面。

- C/S:
  - C: Client
  - S: Server
- B/S
  - B: Browser
  - S: Server       

# MVC/MVT

- MVC

  - M: Model（模型）
  - V: View（视图）
  - C: Controller（控制器）

- MVT

  - M: Model（模型），主要封装对数据库层的访问，对数据库中的数据进行增、删、改、查操作。

  - V: View（视图），用于封装结果，生成页面展示的html内容。

  - T: Template（模板），用于接收请求，处理业务逻辑，与Model和View交互，返回结果。

    ​

# HelloDjango项目

### 创建虚拟环境

### 虚拟环境的优点

- 使不同应用开发环境独立
- 环境升级不影响其他应用，也不会影响全局的python环境
- 可以防止系统中出现包管理混乱和版本冲突

开发会用 virtualenv 来管理多个开发环境

#### Linux/MacOS 下

virtualenvwrapper 使得virtualenv变得更好用，所以我们一起安装了

```
(sudo) pip install virtualenv virtualenvwrapper
```

修改~/.bash_profile或其它环境变量相关文件(如 .bashrc 或用 ZSH 之后的 .zshrc)，添加以下语句

```
export WORKON_HOME=$HOME/.virtualenvs
export PROJECT_HOME=$HOME/workspace
source /usr/local/bin/virtualenvwrapper.sh(每台机子的位置不一样，可以通过find命令找到)
```

修改后使之立即生效(也可以重启终端使之生效)：

```
source ~/.bash_profile
```



#### Windows 下：

```
pip install virtualenv virtualenvwrapper-win
```

【可选】Windows下默认虚拟环境是放在用户名下面的Envs中的，与桌面，我的文档，下载等文件夹在一块的。更改方法：计算机，属性，高级系统设置，环境变量，添加WORKON_HOME，如图（windows 10 环境变量设置截图）：

![](/1.png)

#### 虚拟环境使用方法：

- **mkvirtualenv django：创建运行环境django**

- **workon django: 工作在 django环境 或 从其它环境切换到 django环境**

- **deactivate**: 退出终端环境

- **其它的：**

- **rmvirtualenv** ENV：删除运行环境ENV

- **mkproject** mic：创建mic项目和运行环境mic

- **mktmpenv**：创建临时运行环境

- **lsvirtualenv**: 列出可用的运行环境

- **lssitepackages**: 列出当前环境安装了的包

  ​




### 安装Django框架

- pip install django==1.11.7

- 测试django是否已经安装好

  - 进入python shell

    ```python
    import django
    django.get_version()
    ```

- pip list 显示当前python环境中的所有的库

- pip freeze 显示当前python环境中的除系统内置库外的所有第三方库

### 创建HelloDJango项目

- 开启一个django项目 django-admin startproject day01_HelloDjango
- 测试django项目环境 python manage.py runserver
  - python manage.py runserver 0.0.0.0:8000 表示允许本机所有的IP被外网访问
  - python manage.py runserver 9000 使用本机运行，但端口是9000
- 开启自己的App
  - python manage.py startapp App



### Django的项目结构

1. manage.py
   - 管理整个项目
2. XXX/settings.py  
   - 项目配置文件
3. XXX/urls.py
   - 路由器，接收用户请求，分发给视图函数（控制器）
4. XXX/wsgi.py
   - 网关接口，通常用在线上环境部署（开发过程中不会接触）

### settings.py

1. DEBUG 是否打开DEBUG
2. ALLOWED_HOSTS 允许访问的主机
3. INSTALLED_APPS   安装了的应用 
4. DATABASES   数据库配置
5. LANGUAGE_CODE 中文 zh-hans
6. TIME_ZONE  中国 Asia/Shanghai



### Pycharm安装

1. 解压
2. 目录结构中会有  bin
3. 进入bin
4. bin 中pycharm.sh
5. 执行 ./pycharm.sh
6. 如果想在终端中的任何位置运行，那就配置到环境变量中



### 创建数据库

- 创建更改的文件
  - python manage.py makemigrations
- 将生成的py文件应用到数据库
  - python manage.py migrate
- 清空数据库
  - python manage.py flush
- 导入导出数据
  - python manage.py dumpdata appname > appname.json
  - python manage.py loaddata appname.json

### 创建视图

- 需要配置到工程的配置文件中settings中的INSTALLED_APPS
- views中定义函数，接收request，返回response
- 在urls中配置路由规则
  - 在根urls中配置（管理麻烦，配置简单）
  - 在App中创建自己的urls，在urls中书写规则，将urls配置到工程urls中
- 创建模板目录，在views返回时调用模板的渲染
- 变更数据库
  - 在settings中配置数据库信息



# Django请求流程

- 进来的请求转入/index/。
- Django 通过在 ROOT_URLCONF 配置来决定根 URLconf。
- Django 在 URLconf 中的所有 URL 模式中，查找第一个匹配 /index/ 的条目。
- 如果找到匹配，将调用相应的视图函数。
- 视图函数返回一个 HttpResponse。
- Django 转换 HttpResponse 为一个适合的 HTTP response， 以 Web page 显示出来。



# 设计一个小项目

### 需求分析

- 本示例完成“班级-学生”信息的维护，需要存储两种数据：班级、学生
- 班级表结构设计：
  - 表名：Grade
  - 班级名称：g_name
  - 班级人数：g_num
- 学生表结构设计：
  - 表名：Student
  - 学生姓名：s_name
  - 学生性别：s_gender
  - 所属班级：s_grade
- 班级-学生的关系为一对多

### 数据库配置

- 在settings.py文件中，通过DATABASES项进行数据库设置
- django支持的数据库包括：sqlite、mysql等主流数据库
- Django默认使用SQLite数据库

### 创建应用

- 在一个项目中可以创建一到多个应用，每个应用进行一种业务处理
- 创建应用的命令：

```
python manage.py startapp day1_hello_django
```

- 应用的目录结构如下图

![](/django项目目录结构.png)

### 定义模型类

- 有一个数据表，就有一个模型类与之对应
- 打开models.py文件，定义模型类
- 引入包from django.db import models
- 模型类继承自models.Model类
- **说明：不需要定义主键列，在生成时会自动添加，并且值为自动增长**
- 当输出对象时，会调用对象的str方法

```python
from django.db import models

class Grade(models.Model):
    g_name = models.CharField(max_length=20, db_column="班级名称")
    g_num = models.IntegerField(default=30)
    g_crete_date = models.DateTimeField(auto_now=True)

class Student(models.Model):
    s_name = models.CharField(max_length=20, db_column="姓名")
    s_age = models.IntegerField(default=20, db_column="年龄")
    s_sex = models.BooleanField(default=True)
    s_birthday = models.DateTimeField()
    s_grade = models.ForeignKey(Grade)

    class Meta:
        ordering = ["-s_age"]
        # 为数据库设置别名
        verbose_name = "学生表"
    	verbose_name_plural = "学生表"
        
    def _ _str_ _(self):
        return "%d" % self.pk
```

### 生成数据表

- 激活模型：编辑settings.py文件，将booktest应用加入到installed_apps中

  ![1531115052424](/注册app.png)

- 生成迁移文件：根据模型类生成sql语句

```
python manage.py makemigrations
```

- 迁移文件被生成到应用的migrations目录

![1531115146872](/迁移文件.png)

- 执行迁移：执行sql语句生成数据表

```
python manage.py migrate
```

### 测试数据操作

- 进入python shell，进行简单的模型API练习

```
python manage.py shell
```

- 进入shell后提示如下：

![](/进入django shell.png)

- 引入需要的包：

```
from App.models import Grade,Student
```

- 查询所有班级信息：

```
Grade.objects.all()
```

- 新建班级信息：

```
grade = Grade()
grade.g_name = "深圳python1805班"
grade.g_num = 40
grade.save()
```

- 查找班级信息：

```
grade = Grade.objects.get(pk=1)
```

- 输出班级信息：

```
grade
grade.id
grade.g_name
```

- 修改班级信息：

```
grade.g_name="大神班"
grade.save()
```

- 删除班级信息：

```
grade.delete()
```

### 关联对象的操作

- 对于Student可以按照上面的操作方式进行
- 添加，注意添加关联对象

```
s=Student()
s.s_name='张三'
s.s_sex=True
s.scontent='爱好打篮球'
# 注意grade为Grade的实例，上面我们已经删除了，这里需要重新创建
s.sclass=grade
s.save()
```

### 运行项目

```
python manage.py runserver ip:port
```



# 项目主要部分

### 视图

- 在django中，视图的作用是对路由转发过来的url进行处理
- 视图函数接收的第一个参数是request对象，request对象中包含了请求的信息
- 视图函数写每个app下的views.py文件中

```
from django.shortcuts import render
from django.http import HttpResponse

# Create your views here.

def index(request):
    return HttpResponse("Hello Django")
```

注意：视图函数的第一个参数必须是request，返回必须调用django的定义的方法规范。

### 路由

- 在视图函数写完后，要编写相应的url规则，这样当我们在浏览器上输入网址的时候才能转到相应的视图函数处理逻辑
- 只定义路径部分，不定义域名
- 路由函数的url部分遵循正则的书写方式
- 路由规则由两部分必须指定的参数和其他可选参数组成

```
url(r'^index/', App.index, name="index"),
```

注：每次定义完路由规则，在代码的末尾添加逗号

- 在编写路由规则之前必须导入相应的视图
- 在组织项目时，将app和项目的路由分离



### 模板

- 模板是HTML文件，通过占位符来传递视图函数的数据

- 每个app目录下都可以创建templates的文件夹，django会自动从这些app里寻找相应的模板

  

##### 定义模板

定义index.html模板文件

```
<!DOCTYPE html>
<html>
<head>
  <title>首页</title>
</head>
<body>
<h1>学生列表</h1>
<ul>
{%for student in students%}
<li>
  {{student.s_name}}
</li>
{%endfor%}
</ul>
</body>
</html>
```

定义detail.html模板

```
<!DOCTYPE html>
<html>
<head>
  <title>详情页</title>
</head>
<body>
<h1>学生详情</h1>
<ul>
<li>
  {{student.s_name}}
  {{student.s_gender}}
  {{student.s_content}}
</li>
</ul>
</body>
</html>
```

##### 使用模板

- 定义视图

```
def index(request):
    students = StudentInfo.objects.all()
    return render(request, "index.html", {"students":students})

def index_page(request, id):
    student = StudentInfo.objects.get(pk=id)
    return render(request, "detail.html", {"student":student})
```

- 定义路由

```
url(r'index/$', class_view.index, name="index"),
url(r'index/(\d+)/$', class_view.index_page, name="index_page"),
```

- 运行项目
  - python manage.py runserver
------------------------------------------------------------------------------------------------------------------------
<p><img alt="Alt text" src="/static/images/django_blog/01.jpg" /></p>
<hr />
<p>typora-copy-images-to: images
typora-root-url: images</p>
<hr />
<h1 id="django是个啥">Django是个啥</h1>
<p>​   最初是被开发来用于管理劳伦斯出版集团旗下的一些以新闻内容为主的网站的。并于2005年7月在BSD许可证下发布。这套框架是以比利时的吉普赛爵士吉他手Django Reinhardt来命名的。</p>
<p>​   Django的主要目标是使得开发复杂的、数据库驱动的网站变得简单。Django注重组件的重用性和“可插拔性”，敏捷开发和DRY法则（Don't Repeat Yourself）。在Django中Python被普遍使用，甚至包括配置文件和数据模型。</p>
<ul>
<li>
<p>由 Python 开发的一个免费的开源网站框架，可以用于快速搭建高性能，优雅的网站</p>
</li>
<li>
<p>Django 中提供了开发网站经常用到的模块，常见的代码都为你写好了</p>
</li>
<li>
<p>Django 提供了通用Web开发模式的高度抽象，提供了频繁进行的编程作业的快速解决方法，以及为“如何解决问题”提供了清晰明了的约定。</p>
</li>
<li>
<p>Django的理念是DRY(Don't Repeat Yourself)来鼓励快速开发！</p>
</li>
</ul>
<h1 id="开发环境">开发环境</h1>
<p>Ubuntu + Python3  + Django + PyCharm</p>
<h1 id="ubuntu系统和命令介绍">Ubuntu系统和命令介绍</h1>
<h3 id="系统设置">系统设置</h3>
<h3 id="常用命令">常用命令</h3>
<ul>
<li>cd</li>
<li>ls</li>
<li>cp</li>
<li>mv</li>
<li>rm</li>
<li>mkdir</li>
<li>pwd</li>
<li>touch</li>
<li>cat</li>
<li>history</li>
<li>ps</li>
<li>ps -aux</li>
<li>kill </li>
<li>kill -9 pid</li>
<li>su/sudo</li>
<li>chmod</li>
<li>grep</li>
<li>which</li>
<li>whereis</li>
<li>ifconfig</li>
<li>netstat</li>
<li>netstat -antp 查看网络连接状态</li>
<li>wget</li>
<li>ssh username@host -p</li>
<li>ssh-keygen</li>
<li>tar</li>
<li>tar -zxvf 解压缩</li>
<li>tar -czvf 压缩</li>
<li>du</li>
<li>du -sh</li>
<li>df</li>
<li>df -h</li>
<li>apt install</li>
<li>apt update</li>
<li>apt remove</li>
<li>apt autoremove</li>
<li>dpkg -i</li>
<li>vi/vim</li>
</ul>
<h1 id="bscs">BS/CS</h1>
<p>​        C/S 架构即“客户端-服务器” 架构。这里的“客户端”可以是有 GUI （图形用户界面）的定制软件，也可以是浏览器，甚至可以是通过 SSH 访问服务器的命令行脚本。只要是客户端通过访问服务器调取计算或者存储资源的，统统都是 C/S 架构。所谓的 Browser-Server 架构其实是 C/S 架构的一种特殊的实现形式，而不是其对立面。</p>
<ul>
<li>C/S:</li>
<li>C: Client</li>
<li>S: Server</li>
<li>B/S</li>
<li>B: Browser</li>
<li>S: Server       </li>
</ul>
<h1 id="mvcmvt">MVC/MVT</h1>
<ul>
<li>
<p>MVC</p>
</li>
<li>
<p>M: Model（模型）</p>
</li>
<li>V: View（视图）</li>
<li>
<p>C: Controller（控制器）</p>
</li>
<li>
<p>MVT</p>
</li>
<li>
<p>M: Model（模型），主要封装对数据库层的访问，对数据库中的数据进行增、删、改、查操作。</p>
</li>
<li>
<p>V: View（视图），用于封装结果，生成页面展示的html内容。</p>
</li>
<li>
<p>T: Template（模板），用于接收请求，处理业务逻辑，与Model和View交互，返回结果。</p>
<p>​</p>
</li>
</ul>
<h1 id="hellodjango项目">HelloDjango项目</h1>
<h3 id="创建虚拟环境">创建虚拟环境</h3>
<h3 id="虚拟环境的优点">虚拟环境的优点</h3>
<ul>
<li>使不同应用开发环境独立</li>
<li>环境升级不影响其他应用，也不会影响全局的python环境</li>
<li>可以防止系统中出现包管理混乱和版本冲突</li>
</ul>
<p>开发会用 virtualenv 来管理多个开发环境</p>
<h4 id="linuxmacos-下">Linux/MacOS 下</h4>
<p>virtualenvwrapper 使得virtualenv变得更好用，所以我们一起安装了</p>
<div class="codehilite"><pre><span></span>(sudo) pip install virtualenv virtualenvwrapper
</pre></div>


<p>修改~/.bash_profile或其它环境变量相关文件(如 .bashrc 或用 ZSH 之后的 .zshrc)，添加以下语句</p>
<div class="codehilite"><pre><span></span>export WORKON_HOME=$HOME/.virtualenvs
export PROJECT_HOME=$HOME/workspace
source /usr/local/bin/virtualenvwrapper.sh(每台机子的位置不一样，可以通过find命令找到)
</pre></div>


<p>修改后使之立即生效(也可以重启终端使之生效)：</p>
<div class="codehilite"><pre><span></span>source ~/.bash_profile
</pre></div>


<h4 id="windows-下">Windows 下：</h4>
<div class="codehilite"><pre><span></span>pip install virtualenv virtualenvwrapper-win
</pre></div>


<p>【可选】Windows下默认虚拟环境是放在用户名下面的Envs中的，与桌面，我的文档，下载等文件夹在一块的。更改方法：计算机，属性，高级系统设置，环境变量，添加WORKON_HOME，如图（windows 10 环境变量设置截图）：</p>
<p><img alt="" src="/1.png" /></p>
<h4 id="虚拟环境使用方法">虚拟环境使用方法：</h4>
<ul>
<li>
<p><strong>mkvirtualenv django：创建运行环境django</strong></p>
</li>
<li>
<p><strong>workon django: 工作在 django环境 或 从其它环境切换到 django环境</strong></p>
</li>
<li>
<p><strong>deactivate</strong>: 退出终端环境</p>
</li>
<li>
<p><strong>其它的：</strong></p>
</li>
<li>
<p><strong>rmvirtualenv</strong> ENV：删除运行环境ENV</p>
</li>
<li>
<p><strong>mkproject</strong> mic：创建mic项目和运行环境mic</p>
</li>
<li>
<p><strong>mktmpenv</strong>：创建临时运行环境</p>
</li>
<li>
<p><strong>lsvirtualenv</strong>: 列出可用的运行环境</p>
</li>
<li>
<p><strong>lssitepackages</strong>: 列出当前环境安装了的包</p>
</li>
</ul>
<p>​</p>
<h3 id="安装django框架">安装Django框架</h3>
<ul>
<li>
<p>pip install django==1.11.7</p>
</li>
<li>
<p>测试django是否已经安装好</p>
</li>
<li>
<p>进入python shell</p>
<p><code>python
import django
django.get_version()</code></p>
</li>
<li>
<p>pip list 显示当前python环境中的所有的库</p>
</li>
<li>
<p>pip freeze 显示当前python环境中的除系统内置库外的所有第三方库</p>
</li>
</ul>
<h3 id="创建hellodjango项目">创建HelloDJango项目</h3>
<ul>
<li>开启一个django项目 django-admin startproject day01_HelloDjango</li>
<li>测试django项目环境 python manage.py runserver</li>
<li>python manage.py runserver 0.0.0.0:8000 表示允许本机所有的IP被外网访问</li>
<li>python manage.py runserver 9000 使用本机运行，但端口是9000</li>
<li>开启自己的App</li>
<li>python manage.py startapp App</li>
</ul>
<h3 id="django的项目结构">Django的项目结构</h3>
<ol>
<li>manage.py</li>
<li>管理整个项目</li>
<li>XXX/settings.py  </li>
<li>项目配置文件</li>
<li>XXX/urls.py</li>
<li>路由器，接收用户请求，分发给视图函数（控制器）</li>
<li>XXX/wsgi.py</li>
<li>网关接口，通常用在线上环境部署（开发过程中不会接触）</li>
</ol>
<h3 id="settingspy">settings.py</h3>
<ol>
<li>DEBUG 是否打开DEBUG</li>
<li>ALLOWED_HOSTS 允许访问的主机</li>
<li>INSTALLED_APPS   安装了的应用 </li>
<li>DATABASES   数据库配置</li>
<li>LANGUAGE_CODE 中文 zh-hans</li>
<li>TIME_ZONE  中国 Asia/Shanghai</li>
</ol>
<h3 id="pycharm安装">Pycharm安装</h3>
<ol>
<li>解压</li>
<li>目录结构中会有  bin</li>
<li>进入bin</li>
<li>bin 中pycharm.sh</li>
<li>执行 ./pycharm.sh</li>
<li>如果想在终端中的任何位置运行，那就配置到环境变量中</li>
</ol>
<h3 id="创建数据库">创建数据库</h3>
<ul>
<li>创建更改的文件</li>
<li>python manage.py makemigrations</li>
<li>将生成的py文件应用到数据库</li>
<li>python manage.py migrate</li>
<li>清空数据库</li>
<li>python manage.py flush</li>
<li>导入导出数据</li>
<li>python manage.py dumpdata appname &gt; appname.json</li>
<li>python manage.py loaddata appname.json</li>
</ul>
<h3 id="创建视图">创建视图</h3>
<ul>
<li>需要配置到工程的配置文件中settings中的INSTALLED_APPS</li>
<li>views中定义函数，接收request，返回response</li>
<li>在urls中配置路由规则</li>
<li>在根urls中配置（管理麻烦，配置简单）</li>
<li>在App中创建自己的urls，在urls中书写规则，将urls配置到工程urls中</li>
<li>创建模板目录，在views返回时调用模板的渲染</li>
<li>变更数据库</li>
<li>在settings中配置数据库信息</li>
</ul>
<h1 id="django请求流程">Django请求流程</h1>
<ul>
<li>进来的请求转入/index/。</li>
<li>Django 通过在 ROOT_URLCONF 配置来决定根 URLconf。</li>
<li>Django 在 URLconf 中的所有 URL 模式中，查找第一个匹配 /index/ 的条目。</li>
<li>如果找到匹配，将调用相应的视图函数。</li>
<li>视图函数返回一个 HttpResponse。</li>
<li>Django 转换 HttpResponse 为一个适合的 HTTP response， 以 Web page 显示出来。</li>
</ul>
<h1 id="设计一个小项目">设计一个小项目</h1>
<h3 id="需求分析">需求分析</h3>
<ul>
<li>本示例完成“班级-学生”信息的维护，需要存储两种数据：班级、学生</li>
<li>班级表结构设计：</li>
<li>表名：Grade</li>
<li>班级名称：g_name</li>
<li>班级人数：g_num</li>
<li>学生表结构设计：</li>
<li>表名：Student</li>
<li>学生姓名：s_name</li>
<li>学生性别：s_gender</li>
<li>所属班级：s_grade</li>
<li>班级-学生的关系为一对多</li>
</ul>
<h3 id="数据库配置">数据库配置</h3>
<ul>
<li>在settings.py文件中，通过DATABASES项进行数据库设置</li>
<li>django支持的数据库包括：sqlite、mysql等主流数据库</li>
<li>Django默认使用SQLite数据库</li>
</ul>
<h3 id="创建应用">创建应用</h3>
<ul>
<li>在一个项目中可以创建一到多个应用，每个应用进行一种业务处理</li>
<li>创建应用的命令：</li>
</ul>
<div class="codehilite"><pre><span></span>python manage.py startapp day1_hello_django
</pre></div>


<ul>
<li>应用的目录结构如下图</li>
</ul>
<p><img alt="" src="/django项目目录结构.png" /></p>
<h3 id="定义模型类">定义模型类</h3>
<ul>
<li>有一个数据表，就有一个模型类与之对应</li>
<li>打开models.py文件，定义模型类</li>
<li>引入包from django.db import models</li>
<li>模型类继承自models.Model类</li>
<li><strong>说明：不需要定义主键列，在生成时会自动添加，并且值为自动增长</strong></li>
<li>当输出对象时，会调用对象的str方法</li>
</ul>
<div class="codehilite"><pre><span></span><span class="kn">from</span> <span class="nn">django.db</span> <span class="kn">import</span> <span class="n">models</span>

<span class="k">class</span> <span class="nc">Grade</span><span class="p">(</span><span class="n">models</span><span class="o">.</span><span class="n">Model</span><span class="p">):</span>
    <span class="n">g_name</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">CharField</span><span class="p">(</span><span class="n">max_length</span><span class="o">=</span><span class="mi">20</span><span class="p">,</span> <span class="n">db_column</span><span class="o">=</span><span class="s2">&quot;班级名称&quot;</span><span class="p">)</span>
    <span class="n">g_num</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">IntegerField</span><span class="p">(</span><span class="n">default</span><span class="o">=</span><span class="mi">30</span><span class="p">)</span>
    <span class="n">g_crete_date</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">DateTimeField</span><span class="p">(</span><span class="n">auto_now</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>

<span class="k">class</span> <span class="nc">Student</span><span class="p">(</span><span class="n">models</span><span class="o">.</span><span class="n">Model</span><span class="p">):</span>
    <span class="n">s_name</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">CharField</span><span class="p">(</span><span class="n">max_length</span><span class="o">=</span><span class="mi">20</span><span class="p">,</span> <span class="n">db_column</span><span class="o">=</span><span class="s2">&quot;姓名&quot;</span><span class="p">)</span>
    <span class="n">s_age</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">IntegerField</span><span class="p">(</span><span class="n">default</span><span class="o">=</span><span class="mi">20</span><span class="p">,</span> <span class="n">db_column</span><span class="o">=</span><span class="s2">&quot;年龄&quot;</span><span class="p">)</span>
    <span class="n">s_sex</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">BooleanField</span><span class="p">(</span><span class="n">default</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
    <span class="n">s_birthday</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">DateTimeField</span><span class="p">()</span>
    <span class="n">s_grade</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">ForeignKey</span><span class="p">(</span><span class="n">Grade</span><span class="p">)</span>

    <span class="k">class</span> <span class="nc">Meta</span><span class="p">:</span>
        <span class="n">ordering</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&quot;-s_age&quot;</span><span class="p">]</span>
        <span class="c1"># 为数据库设置别名</span>
        <span class="n">verbose_name</span> <span class="o">=</span> <span class="s2">&quot;学生表&quot;</span>
        <span class="n">verbose_name_plural</span> <span class="o">=</span> <span class="s2">&quot;学生表&quot;</span>

    <span class="k">def</span> <span class="nf">_</span> <span class="n">_str_</span> <span class="n">_</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">return</span> <span class="s2">&quot;</span><span class="si">%d</span><span class="s2">&quot;</span> <span class="o">%</span> <span class="bp">self</span><span class="o">.</span><span class="n">pk</span>
</pre></div>


<h3 id="生成数据表">生成数据表</h3>
<ul>
<li>激活模型：编辑settings.py文件，将booktest应用加入到installed_apps中</li>
</ul>
<p><img alt="1531115052424" src="/注册app.png" /></p>
<ul>
<li>生成迁移文件：根据模型类生成sql语句</li>
</ul>
<div class="codehilite"><pre><span></span>python manage.py makemigrations
</pre></div>


<ul>
<li>迁移文件被生成到应用的migrations目录</li>
</ul>
<p><img alt="1531115146872" src="/迁移文件.png" /></p>
<ul>
<li>执行迁移：执行sql语句生成数据表</li>
</ul>
<div class="codehilite"><pre><span></span>python manage.py migrate
</pre></div>


<h3 id="测试数据操作">测试数据操作</h3>
<ul>
<li>进入python shell，进行简单的模型API练习</li>
</ul>
<div class="codehilite"><pre><span></span>python manage.py shell
</pre></div>


<ul>
<li>进入shell后提示如下：</li>
</ul>
<p>![](/进入django shell.png)</p>
<ul>
<li>引入需要的包：</li>
</ul>
<div class="codehilite"><pre><span></span><span class="kn">from</span> <span class="nn">App.models</span> <span class="kn">import</span> <span class="n">Grade</span><span class="p">,</span><span class="n">Student</span>
</pre></div>


<ul>
<li>查询所有班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>Grade.objects.all()
</pre></div>


<ul>
<li>新建班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>grade = Grade()
grade.g_name = &quot;深圳python1805班&quot;
grade.g_num = 40
grade.save()
</pre></div>


<ul>
<li>查找班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>grade = Grade.objects.get(pk=1)
</pre></div>


<ul>
<li>输出班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>grade
grade.id
grade.g_name
</pre></div>


<ul>
<li>修改班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>grade.g_name=&quot;大神班&quot;
grade.save()
</pre></div>


<ul>
<li>删除班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>grade.delete()
</pre></div>


<h3 id="关联对象的操作">关联对象的操作</h3>
<ul>
<li>对于Student可以按照上面的操作方式进行</li>
<li>添加，注意添加关联对象</li>
</ul>
<div class="codehilite"><pre><span></span>s=Student()
s.s_name=&#39;张三&#39;
s.s_sex=True
s.scontent=&#39;爱好打篮球&#39;
# 注意grade为Grade的实例，上面我们已经删除了，这里需要重新创建
s.sclass=grade
s.save()
</pre></div>


<h3 id="运行项目">运行项目</h3>
<div class="codehilite"><pre><span></span>python manage.py runserver ip:port
</pre></div>


<h1 id="项目主要部分">项目主要部分</h1>
<h3 id="视图">视图</h3>
<ul>
<li>在django中，视图的作用是对路由转发过来的url进行处理</li>
<li>视图函数接收的第一个参数是request对象，request对象中包含了请求的信息</li>
<li>视图函数写每个app下的views.py文件中</li>
</ul>
<div class="codehilite"><pre><span></span><span class="kn">from</span> <span class="nn">django.shortcuts</span> <span class="kn">import</span> <span class="n">render</span>
<span class="kn">from</span> <span class="nn">django.http</span> <span class="kn">import</span> <span class="n">HttpResponse</span>

<span class="c1"># Create your views here.</span>

<span class="k">def</span> <span class="nf">index</span><span class="p">(</span><span class="n">request</span><span class="p">):</span>
    <span class="k">return</span> <span class="n">HttpResponse</span><span class="p">(</span><span class="s2">&quot;Hello Django&quot;</span><span class="p">)</span>
</pre></div>


<p>注意：视图函数的第一个参数必须是request，返回必须调用django的定义的方法规范。</p>
<h3 id="路由">路由</h3>
<ul>
<li>在视图函数写完后，要编写相应的url规则，这样当我们在浏览器上输入网址的时候才能转到相应的视图函数处理逻辑</li>
<li>只定义路径部分，不定义域名</li>
<li>路由函数的url部分遵循正则的书写方式</li>
<li>路由规则由两部分必须指定的参数和其他可选参数组成</li>
</ul>
<div class="codehilite"><pre><span></span>url(r&#39;^index/&#39;, App.index, name=&quot;index&quot;),
</pre></div>


<p>注：每次定义完路由规则，在代码的末尾添加逗号</p>
<ul>
<li>在编写路由规则之前必须导入相应的视图</li>
<li>在组织项目时，将app和项目的路由分离</li>
</ul>
<h3 id="模板">模板</h3>
<ul>
<li>
<p>模板是HTML文件，通过占位符来传递视图函数的数据</p>
</li>
<li>
<p>每个app目录下都可以创建templates的文件夹，django会自动从这些app里寻找相应的模板</p>
</li>
</ul>
<h5 id="定义模板">定义模板</h5>
<p>定义index.html模板文件</p>
<div class="codehilite"><pre><span></span><span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="p">&lt;</span><span class="nt">html</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">title</span><span class="p">&gt;</span>首页<span class="p">&lt;/</span><span class="nt">title</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">h1</span><span class="p">&gt;</span>学生列表<span class="p">&lt;/</span><span class="nt">h1</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">ul</span><span class="p">&gt;</span>
<span class="cp">{%</span><span class="k">for</span> <span class="nv">student</span> <span class="k">in</span> <span class="nv">students</span><span class="cp">%}</span>
<span class="p">&lt;</span><span class="nt">li</span><span class="p">&gt;</span>
  <span class="cp">{{</span><span class="nv">student.s_name</span><span class="cp">}}</span>
<span class="p">&lt;/</span><span class="nt">li</span><span class="p">&gt;</span>
<span class="cp">{%</span><span class="k">endfor</span><span class="cp">%}</span>
<span class="p">&lt;/</span><span class="nt">ul</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span>
</pre></div>


<p>定义detail.html模板</p>
<div class="codehilite"><pre><span></span><span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="p">&lt;</span><span class="nt">html</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">title</span><span class="p">&gt;</span>详情页<span class="p">&lt;/</span><span class="nt">title</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">h1</span><span class="p">&gt;</span>学生详情<span class="p">&lt;/</span><span class="nt">h1</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">ul</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">li</span><span class="p">&gt;</span>
  <span class="cp">{{</span><span class="nv">student.s_name</span><span class="cp">}}</span>
  <span class="cp">{{</span><span class="nv">student.s_gender</span><span class="cp">}}</span>
  <span class="cp">{{</span><span class="nv">student.s_content</span><span class="cp">}}</span>
<span class="p">&lt;/</span><span class="nt">li</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">ul</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span>
</pre></div>


<h5 id="使用模板">使用模板</h5>
<ul>
<li>定义视图</li>
</ul>
<div class="codehilite"><pre><span></span>def index(request):
    students = StudentInfo.objects.all()
    return render(request, &quot;index.html&quot;, {&quot;students&quot;:students})

def index_page(request, id):
    student = StudentInfo.objects.get(pk=id)
    return render(request, &quot;detail.html&quot;, {&quot;student&quot;:student})
</pre></div>


<ul>
<li>定义路由</li>
</ul>
<div class="codehilite"><pre><span></span>url(r&#39;index/$&#39;, class_view.index, name=&quot;index&quot;),
url(r&#39;index/(\d+)/$&#39;, class_view.index_page, name=&quot;index_page&quot;),
</pre></div>


<ul>
<li>运行项目</li>
<li>python manage.py runserver</li>
</ul>
<div class="toc">
<ul>
<li><a href="#django是个啥">Django是个啥</a></li>
<li><a href="#开发环境">开发环境</a></li>
<li><a href="#ubuntu系统和命令介绍">Ubuntu系统和命令介绍</a><ul>
<li><a href="#系统设置">系统设置</a></li>
<li><a href="#常用命令">常用命令</a></li>
</ul>
</li>
<li><a href="#bscs">BS/CS</a></li>
<li><a href="#mvcmvt">MVC/MVT</a></li>
<li><a href="#hellodjango项目">HelloDjango项目</a><ul>
<li><a href="#创建虚拟环境">创建虚拟环境</a></li>
<li><a href="#虚拟环境的优点">虚拟环境的优点</a><ul>
<li><a href="#linuxmacos-下">Linux/MacOS 下</a></li>
<li><a href="#windows-下">Windows 下：</a></li>
<li><a href="#虚拟环境使用方法">虚拟环境使用方法：</a></li>
</ul>
</li>
<li><a href="#安装django框架">安装Django框架</a></li>
<li><a href="#创建hellodjango项目">创建HelloDJango项目</a></li>
<li><a href="#django的项目结构">Django的项目结构</a></li>
<li><a href="#settingspy">settings.py</a></li>
<li><a href="#pycharm安装">Pycharm安装</a></li>
<li><a href="#创建数据库">创建数据库</a></li>
<li><a href="#创建视图">创建视图</a></li>
</ul>
</li>
<li><a href="#django请求流程">Django请求流程</a></li>
<li><a href="#设计一个小项目">设计一个小项目</a><ul>
<li><a href="#需求分析">需求分析</a></li>
<li><a href="#数据库配置">数据库配置</a></li>
<li><a href="#创建应用">创建应用</a></li>
<li><a href="#定义模型类">定义模型类</a></li>
<li><a href="#生成数据表">生成数据表</a></li>
<li><a href="#测试数据操作">测试数据操作</a></li>
<li><a href="#关联对象的操作">关联对象的操作</a></li>
<li><a href="#运行项目">运行项目</a></li>
</ul>
</li>
<li><a href="#项目主要部分">项目主要部分</a><ul>
<li><a href="#视图">视图</a></li>
<li><a href="#路由">路由</a></li>
<li><a href="#模板">模板</a><ul>
<li><a href="#定义模板">定义模板</a></li>
<li><a href="#使用模板">使用模板</a></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>

[pid: 24644|app: 0|req: 136/331] 218.13.14.215 () {40 vars in 693 bytes} [Wed Aug  1 13:37:23 2018] GET /post/3/ => generated 35800 bytes in 537 msecs (HTTP/1.1 200) 5 headers in 279 bytes (1 switches on core 0)
Not Found: /django项目目录结构.png
Not Found: /1.png
[pid: 24644|app: 0|req: 137/332] 218.13.14.215 () {42 vars in 830 bytes} [Wed Aug  1 13:37:25 2018] GET /django%E9%A1%B9%E7%9B%AE%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84.png => generated 3462 bytes in 9 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 1)
[pid: 24647|app: 0|req: 39/333] 218.13.14.215 () {42 vars in 748 bytes} [Wed Aug  1 13:37:25 2018] GET /1.png => generated 3357 bytes in 11 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 1)
Not Found: /注册app.png
[pid: 24645|app: 0|req: 79/334] 218.13.14.215 () {42 vars in 776 bytes} [Wed Aug  1 13:37:25 2018] GET /%E6%B3%A8%E5%86%8Capp.png => generated 3393 bytes in 10 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 0)
Not Found: /迁移文件.png
[pid: 24645|app: 0|req: 79/335] 218.13.14.215 () {42 vars in 794 bytes} [Wed Aug  1 13:37:25 2018] GET /%E8%BF%81%E7%A7%BB%E6%96%87%E4%BB%B6.png => generated 3414 bytes in 9 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 1)
Not Found: /favicon.ico
[pid: 24646|app: 0|req: 69/336] 218.13.14.215 () {42 vars in 760 bytes} [Wed Aug  1 13:37:26 2018] GET /favicon.ico => generated 3375 bytes in 5 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 0)
Not Found: /post/3/full-width.html
[pid: 24647|app: 0|req: 40/337] 218.13.14.215 () {44 vars in 910 bytes} [Wed Aug  1 13:37:46 2018] GET /post/3/full-width.html => generated 3408 bytes in 3 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 0)
![Alt text](/static/images/django_blog/01.jpg)

---
typora-copy-images-to: images
typora-root-url: images
---

# Django是个啥

​	最初是被开发来用于管理劳伦斯出版集团旗下的一些以新闻内容为主的网站的。并于2005年7月在BSD许可证下发布。这套框架是以比利时的吉普赛爵士吉他手Django Reinhardt来命名的。

​	Django的主要目标是使得开发复杂的、数据库驱动的网站变得简单。Django注重组件的重用性和“可插拔性”，敏捷开发和DRY法则（Don't Repeat Yourself）。在Django中Python被普遍使用，甚至包括配置文件和数据模型。

- 由 Python 开发的一个免费的开源网站框架，可以用于快速搭建高性能，优雅的网站

- Django 中提供了开发网站经常用到的模块，常见的代码都为你写好了

- Django 提供了通用Web开发模式的高度抽象，提供了频繁进行的编程作业的快速解决方法，以及为“如何解决问题”提供了清晰明了的约定。

- Django的理念是DRY(Don't Repeat Yourself)来鼓励快速开发！

  

# 开发环境

Ubuntu + Python3  + Django + PyCharm



# Ubuntu系统和命令介绍

### 系统设置

### 常用命令

- cd
- ls
- cp
- mv
- rm
- mkdir
- pwd
- touch
- cat
- history
- ps
  - ps -aux
- kill 
  - kill -9 pid
- su/sudo
- chmod
- grep
- which
- whereis
- ifconfig
- netstat
  - netstat -antp 查看网络连接状态
- wget
- ssh username@host -p
  - ssh-keygen
- tar
  - tar -zxvf 解压缩
  - tar -czvf 压缩
- du
  - du -sh
- df
  - df -h
- apt install
- apt update
- apt remove
- apt autoremove
- dpkg -i
- vi/vim

# BS/CS

​        C/S 架构即“客户端-服务器” 架构。这里的“客户端”可以是有 GUI （图形用户界面）的定制软件，也可以是浏览器，甚至可以是通过 SSH 访问服务器的命令行脚本。只要是客户端通过访问服务器调取计算或者存储资源的，统统都是 C/S 架构。所谓的 Browser-Server 架构其实是 C/S 架构的一种特殊的实现形式，而不是其对立面。

- C/S:
  - C: Client
  - S: Server
- B/S
  - B: Browser
  - S: Server       

# MVC/MVT

- MVC

  - M: Model（模型）
  - V: View（视图）
  - C: Controller（控制器）

- MVT

  - M: Model（模型），主要封装对数据库层的访问，对数据库中的数据进行增、删、改、查操作。

  - V: View（视图），用于封装结果，生成页面展示的html内容。

  - T: Template（模板），用于接收请求，处理业务逻辑，与Model和View交互，返回结果。

    ​

# HelloDjango项目

### 创建虚拟环境

### 虚拟环境的优点

- 使不同应用开发环境独立
- 环境升级不影响其他应用，也不会影响全局的python环境
- 可以防止系统中出现包管理混乱和版本冲突

开发会用 virtualenv 来管理多个开发环境

#### Linux/MacOS 下

virtualenvwrapper 使得virtualenv变得更好用，所以我们一起安装了

```
(sudo) pip install virtualenv virtualenvwrapper
```

修改~/.bash_profile或其它环境变量相关文件(如 .bashrc 或用 ZSH 之后的 .zshrc)，添加以下语句

```
export WORKON_HOME=$HOME/.virtualenvs
export PROJECT_HOME=$HOME/workspace
source /usr/local/bin/virtualenvwrapper.sh(每台机子的位置不一样，可以通过find命令找到)
```

修改后使之立即生效(也可以重启终端使之生效)：

```
source ~/.bash_profile
```



#### Windows 下：

```
pip install virtualenv virtualenvwrapper-win
```

【可选】Windows下默认虚拟环境是放在用户名下面的Envs中的，与桌面，我的文档，下载等文件夹在一块的。更改方法：计算机，属性，高级系统设置，环境变量，添加WORKON_HOME，如图（windows 10 环境变量设置截图）：

![](/1.png)

#### 虚拟环境使用方法：

- **mkvirtualenv django：创建运行环境django**

- **workon django: 工作在 django环境 或 从其它环境切换到 django环境**

- **deactivate**: 退出终端环境

- **其它的：**

- **rmvirtualenv** ENV：删除运行环境ENV

- **mkproject** mic：创建mic项目和运行环境mic

- **mktmpenv**：创建临时运行环境

- **lsvirtualenv**: 列出可用的运行环境

- **lssitepackages**: 列出当前环境安装了的包

  ​




### 安装Django框架

- pip install django==1.11.7

- 测试django是否已经安装好

  - 进入python shell

    ```python
    import django
    django.get_version()
    ```

- pip list 显示当前python环境中的所有的库

- pip freeze 显示当前python环境中的除系统内置库外的所有第三方库

### 创建HelloDJango项目

- 开启一个django项目 django-admin startproject day01_HelloDjango
- 测试django项目环境 python manage.py runserver
  - python manage.py runserver 0.0.0.0:8000 表示允许本机所有的IP被外网访问
  - python manage.py runserver 9000 使用本机运行，但端口是9000
- 开启自己的App
  - python manage.py startapp App



### Django的项目结构

1. manage.py
   - 管理整个项目
2. XXX/settings.py  
   - 项目配置文件
3. XXX/urls.py
   - 路由器，接收用户请求，分发给视图函数（控制器）
4. XXX/wsgi.py
   - 网关接口，通常用在线上环境部署（开发过程中不会接触）

### settings.py

1. DEBUG 是否打开DEBUG
2. ALLOWED_HOSTS 允许访问的主机
3. INSTALLED_APPS   安装了的应用 
4. DATABASES   数据库配置
5. LANGUAGE_CODE 中文 zh-hans
6. TIME_ZONE  中国 Asia/Shanghai



### Pycharm安装

1. 解压
2. 目录结构中会有  bin
3. 进入bin
4. bin 中pycharm.sh
5. 执行 ./pycharm.sh
6. 如果想在终端中的任何位置运行，那就配置到环境变量中



### 创建数据库

- 创建更改的文件
  - python manage.py makemigrations
- 将生成的py文件应用到数据库
  - python manage.py migrate
- 清空数据库
  - python manage.py flush
- 导入导出数据
  - python manage.py dumpdata appname > appname.json
  - python manage.py loaddata appname.json

### 创建视图

- 需要配置到工程的配置文件中settings中的INSTALLED_APPS
- views中定义函数，接收request，返回response
- 在urls中配置路由规则
  - 在根urls中配置（管理麻烦，配置简单）
  - 在App中创建自己的urls，在urls中书写规则，将urls配置到工程urls中
- 创建模板目录，在views返回时调用模板的渲染
- 变更数据库
  - 在settings中配置数据库信息



# Django请求流程

- 进来的请求转入/index/。
- Django 通过在 ROOT_URLCONF 配置来决定根 URLconf。
- Django 在 URLconf 中的所有 URL 模式中，查找第一个匹配 /index/ 的条目。
- 如果找到匹配，将调用相应的视图函数。
- 视图函数返回一个 HttpResponse。
- Django 转换 HttpResponse 为一个适合的 HTTP response， 以 Web page 显示出来。



# 设计一个小项目

### 需求分析

- 本示例完成“班级-学生”信息的维护，需要存储两种数据：班级、学生
- 班级表结构设计：
  - 表名：Grade
  - 班级名称：g_name
  - 班级人数：g_num
- 学生表结构设计：
  - 表名：Student
  - 学生姓名：s_name
  - 学生性别：s_gender
  - 所属班级：s_grade
- 班级-学生的关系为一对多

### 数据库配置

- 在settings.py文件中，通过DATABASES项进行数据库设置
- django支持的数据库包括：sqlite、mysql等主流数据库
- Django默认使用SQLite数据库

### 创建应用

- 在一个项目中可以创建一到多个应用，每个应用进行一种业务处理
- 创建应用的命令：

```
python manage.py startapp day1_hello_django
```

- 应用的目录结构如下图

![](/django项目目录结构.png)

### 定义模型类

- 有一个数据表，就有一个模型类与之对应
- 打开models.py文件，定义模型类
- 引入包from django.db import models
- 模型类继承自models.Model类
- **说明：不需要定义主键列，在生成时会自动添加，并且值为自动增长**
- 当输出对象时，会调用对象的str方法

```python
from django.db import models

class Grade(models.Model):
    g_name = models.CharField(max_length=20, db_column="班级名称")
    g_num = models.IntegerField(default=30)
    g_crete_date = models.DateTimeField(auto_now=True)

class Student(models.Model):
    s_name = models.CharField(max_length=20, db_column="姓名")
    s_age = models.IntegerField(default=20, db_column="年龄")
    s_sex = models.BooleanField(default=True)
    s_birthday = models.DateTimeField()
    s_grade = models.ForeignKey(Grade)

    class Meta:
        ordering = ["-s_age"]
        # 为数据库设置别名
        verbose_name = "学生表"
    	verbose_name_plural = "学生表"
        
    def _ _str_ _(self):
        return "%d" % self.pk
```

### 生成数据表

- 激活模型：编辑settings.py文件，将booktest应用加入到installed_apps中

  ![1531115052424](/注册app.png)

- 生成迁移文件：根据模型类生成sql语句

```
python manage.py makemigrations
```

- 迁移文件被生成到应用的migrations目录

![1531115146872](/迁移文件.png)

- 执行迁移：执行sql语句生成数据表

```
python manage.py migrate
```

### 测试数据操作

- 进入python shell，进行简单的模型API练习

```
python manage.py shell
```

- 进入shell后提示如下：

![](/进入django shell.png)

- 引入需要的包：

```
from App.models import Grade,Student
```

- 查询所有班级信息：

```
Grade.objects.all()
```

- 新建班级信息：

```
grade = Grade()
grade.g_name = "深圳python1805班"
grade.g_num = 40
grade.save()
```

- 查找班级信息：

```
grade = Grade.objects.get(pk=1)
```

- 输出班级信息：

```
grade
grade.id
grade.g_name
```

- 修改班级信息：

```
grade.g_name="大神班"
grade.save()
```

- 删除班级信息：

```
grade.delete()
```

### 关联对象的操作

- 对于Student可以按照上面的操作方式进行
- 添加，注意添加关联对象

```
s=Student()
s.s_name='张三'
s.s_sex=True
s.scontent='爱好打篮球'
# 注意grade为Grade的实例，上面我们已经删除了，这里需要重新创建
s.sclass=grade
s.save()
```

### 运行项目

```
python manage.py runserver ip:port
```



# 项目主要部分

### 视图

- 在django中，视图的作用是对路由转发过来的url进行处理
- 视图函数接收的第一个参数是request对象，request对象中包含了请求的信息
- 视图函数写每个app下的views.py文件中

```
from django.shortcuts import render
from django.http import HttpResponse

# Create your views here.

def index(request):
    return HttpResponse("Hello Django")
```

注意：视图函数的第一个参数必须是request，返回必须调用django的定义的方法规范。

### 路由

- 在视图函数写完后，要编写相应的url规则，这样当我们在浏览器上输入网址的时候才能转到相应的视图函数处理逻辑
- 只定义路径部分，不定义域名
- 路由函数的url部分遵循正则的书写方式
- 路由规则由两部分必须指定的参数和其他可选参数组成

```
url(r'^index/', App.index, name="index"),
```

注：每次定义完路由规则，在代码的末尾添加逗号

- 在编写路由规则之前必须导入相应的视图
- 在组织项目时，将app和项目的路由分离



### 模板

- 模板是HTML文件，通过占位符来传递视图函数的数据

- 每个app目录下都可以创建templates的文件夹，django会自动从这些app里寻找相应的模板

  

##### 定义模板

定义index.html模板文件

```
<!DOCTYPE html>
<html>
<head>
  <title>首页</title>
</head>
<body>
<h1>学生列表</h1>
<ul>
{%for student in students%}
<li>
  {{student.s_name}}
</li>
{%endfor%}
</ul>
</body>
</html>
```

定义detail.html模板

```
<!DOCTYPE html>
<html>
<head>
  <title>详情页</title>
</head>
<body>
<h1>学生详情</h1>
<ul>
<li>
  {{student.s_name}}
  {{student.s_gender}}
  {{student.s_content}}
</li>
</ul>
</body>
</html>
```

##### 使用模板

- 定义视图

```
def index(request):
    students = StudentInfo.objects.all()
    return render(request, "index.html", {"students":students})

def index_page(request, id):
    student = StudentInfo.objects.get(pk=id)
    return render(request, "detail.html", {"student":student})
```

- 定义路由

```
url(r'index/$', class_view.index, name="index"),
url(r'index/(\d+)/$', class_view.index_page, name="index_page"),
```

- 运行项目
  - python manage.py runserver
------------------------------------------------------------------------------------------------------------------------
<p><img alt="Alt text" src="/static/images/django_blog/01.jpg" /></p>
<hr />
<p>typora-copy-images-to: images
typora-root-url: images</p>
<hr />
<h1 id="django是个啥">Django是个啥</h1>
<p>​   最初是被开发来用于管理劳伦斯出版集团旗下的一些以新闻内容为主的网站的。并于2005年7月在BSD许可证下发布。这套框架是以比利时的吉普赛爵士吉他手Django Reinhardt来命名的。</p>
<p>​   Django的主要目标是使得开发复杂的、数据库驱动的网站变得简单。Django注重组件的重用性和“可插拔性”，敏捷开发和DRY法则（Don't Repeat Yourself）。在Django中Python被普遍使用，甚至包括配置文件和数据模型。</p>
<ul>
<li>
<p>由 Python 开发的一个免费的开源网站框架，可以用于快速搭建高性能，优雅的网站</p>
</li>
<li>
<p>Django 中提供了开发网站经常用到的模块，常见的代码都为你写好了</p>
</li>
<li>
<p>Django 提供了通用Web开发模式的高度抽象，提供了频繁进行的编程作业的快速解决方法，以及为“如何解决问题”提供了清晰明了的约定。</p>
</li>
<li>
<p>Django的理念是DRY(Don't Repeat Yourself)来鼓励快速开发！</p>
</li>
</ul>
<h1 id="开发环境">开发环境</h1>
<p>Ubuntu + Python3  + Django + PyCharm</p>
<h1 id="ubuntu系统和命令介绍">Ubuntu系统和命令介绍</h1>
<h3 id="系统设置">系统设置</h3>
<h3 id="常用命令">常用命令</h3>
<ul>
<li>cd</li>
<li>ls</li>
<li>cp</li>
<li>mv</li>
<li>rm</li>
<li>mkdir</li>
<li>pwd</li>
<li>touch</li>
<li>cat</li>
<li>history</li>
<li>ps</li>
<li>ps -aux</li>
<li>kill </li>
<li>kill -9 pid</li>
<li>su/sudo</li>
<li>chmod</li>
<li>grep</li>
<li>which</li>
<li>whereis</li>
<li>ifconfig</li>
<li>netstat</li>
<li>netstat -antp 查看网络连接状态</li>
<li>wget</li>
<li>ssh username@host -p</li>
<li>ssh-keygen</li>
<li>tar</li>
<li>tar -zxvf 解压缩</li>
<li>tar -czvf 压缩</li>
<li>du</li>
<li>du -sh</li>
<li>df</li>
<li>df -h</li>
<li>apt install</li>
<li>apt update</li>
<li>apt remove</li>
<li>apt autoremove</li>
<li>dpkg -i</li>
<li>vi/vim</li>
</ul>
<h1 id="bscs">BS/CS</h1>
<p>​        C/S 架构即“客户端-服务器” 架构。这里的“客户端”可以是有 GUI （图形用户界面）的定制软件，也可以是浏览器，甚至可以是通过 SSH 访问服务器的命令行脚本。只要是客户端通过访问服务器调取计算或者存储资源的，统统都是 C/S 架构。所谓的 Browser-Server 架构其实是 C/S 架构的一种特殊的实现形式，而不是其对立面。</p>
<ul>
<li>C/S:</li>
<li>C: Client</li>
<li>S: Server</li>
<li>B/S</li>
<li>B: Browser</li>
<li>S: Server       </li>
</ul>
<h1 id="mvcmvt">MVC/MVT</h1>
<ul>
<li>
<p>MVC</p>
</li>
<li>
<p>M: Model（模型）</p>
</li>
<li>V: View（视图）</li>
<li>
<p>C: Controller（控制器）</p>
</li>
<li>
<p>MVT</p>
</li>
<li>
<p>M: Model（模型），主要封装对数据库层的访问，对数据库中的数据进行增、删、改、查操作。</p>
</li>
<li>
<p>V: View（视图），用于封装结果，生成页面展示的html内容。</p>
</li>
<li>
<p>T: Template（模板），用于接收请求，处理业务逻辑，与Model和View交互，返回结果。</p>
<p>​</p>
</li>
</ul>
<h1 id="hellodjango项目">HelloDjango项目</h1>
<h3 id="创建虚拟环境">创建虚拟环境</h3>
<h3 id="虚拟环境的优点">虚拟环境的优点</h3>
<ul>
<li>使不同应用开发环境独立</li>
<li>环境升级不影响其他应用，也不会影响全局的python环境</li>
<li>可以防止系统中出现包管理混乱和版本冲突</li>
</ul>
<p>开发会用 virtualenv 来管理多个开发环境</p>
<h4 id="linuxmacos-下">Linux/MacOS 下</h4>
<p>virtualenvwrapper 使得virtualenv变得更好用，所以我们一起安装了</p>
<div class="codehilite"><pre><span></span>(sudo) pip install virtualenv virtualenvwrapper
</pre></div>


<p>修改~/.bash_profile或其它环境变量相关文件(如 .bashrc 或用 ZSH 之后的 .zshrc)，添加以下语句</p>
<div class="codehilite"><pre><span></span>export WORKON_HOME=$HOME/.virtualenvs
export PROJECT_HOME=$HOME/workspace
source /usr/local/bin/virtualenvwrapper.sh(每台机子的位置不一样，可以通过find命令找到)
</pre></div>


<p>修改后使之立即生效(也可以重启终端使之生效)：</p>
<div class="codehilite"><pre><span></span>source ~/.bash_profile
</pre></div>


<h4 id="windows-下">Windows 下：</h4>
<div class="codehilite"><pre><span></span>pip install virtualenv virtualenvwrapper-win
</pre></div>


<p>【可选】Windows下默认虚拟环境是放在用户名下面的Envs中的，与桌面，我的文档，下载等文件夹在一块的。更改方法：计算机，属性，高级系统设置，环境变量，添加WORKON_HOME，如图（windows 10 环境变量设置截图）：</p>
<p><img alt="" src="/1.png" /></p>
<h4 id="虚拟环境使用方法">虚拟环境使用方法：</h4>
<ul>
<li>
<p><strong>mkvirtualenv django：创建运行环境django</strong></p>
</li>
<li>
<p><strong>workon django: 工作在 django环境 或 从其它环境切换到 django环境</strong></p>
</li>
<li>
<p><strong>deactivate</strong>: 退出终端环境</p>
</li>
<li>
<p><strong>其它的：</strong></p>
</li>
<li>
<p><strong>rmvirtualenv</strong> ENV：删除运行环境ENV</p>
</li>
<li>
<p><strong>mkproject</strong> mic：创建mic项目和运行环境mic</p>
</li>
<li>
<p><strong>mktmpenv</strong>：创建临时运行环境</p>
</li>
<li>
<p><strong>lsvirtualenv</strong>: 列出可用的运行环境</p>
</li>
<li>
<p><strong>lssitepackages</strong>: 列出当前环境安装了的包</p>
</li>
</ul>
<p>​</p>
<h3 id="安装django框架">安装Django框架</h3>
<ul>
<li>
<p>pip install django==1.11.7</p>
</li>
<li>
<p>测试django是否已经安装好</p>
</li>
<li>
<p>进入python shell</p>
<p><code>python
import django
django.get_version()</code></p>
</li>
<li>
<p>pip list 显示当前python环境中的所有的库</p>
</li>
<li>
<p>pip freeze 显示当前python环境中的除系统内置库外的所有第三方库</p>
</li>
</ul>
<h3 id="创建hellodjango项目">创建HelloDJango项目</h3>
<ul>
<li>开启一个django项目 django-admin startproject day01_HelloDjango</li>
<li>测试django项目环境 python manage.py runserver</li>
<li>python manage.py runserver 0.0.0.0:8000 表示允许本机所有的IP被外网访问</li>
<li>python manage.py runserver 9000 使用本机运行，但端口是9000</li>
<li>开启自己的App</li>
<li>python manage.py startapp App</li>
</ul>
<h3 id="django的项目结构">Django的项目结构</h3>
<ol>
<li>manage.py</li>
<li>管理整个项目</li>
<li>XXX/settings.py  </li>
<li>项目配置文件</li>
<li>XXX/urls.py</li>
<li>路由器，接收用户请求，分发给视图函数（控制器）</li>
<li>XXX/wsgi.py</li>
<li>网关接口，通常用在线上环境部署（开发过程中不会接触）</li>
</ol>
<h3 id="settingspy">settings.py</h3>
<ol>
<li>DEBUG 是否打开DEBUG</li>
<li>ALLOWED_HOSTS 允许访问的主机</li>
<li>INSTALLED_APPS   安装了的应用 </li>
<li>DATABASES   数据库配置</li>
<li>LANGUAGE_CODE 中文 zh-hans</li>
<li>TIME_ZONE  中国 Asia/Shanghai</li>
</ol>
<h3 id="pycharm安装">Pycharm安装</h3>
<ol>
<li>解压</li>
<li>目录结构中会有  bin</li>
<li>进入bin</li>
<li>bin 中pycharm.sh</li>
<li>执行 ./pycharm.sh</li>
<li>如果想在终端中的任何位置运行，那就配置到环境变量中</li>
</ol>
<h3 id="创建数据库">创建数据库</h3>
<ul>
<li>创建更改的文件</li>
<li>python manage.py makemigrations</li>
<li>将生成的py文件应用到数据库</li>
<li>python manage.py migrate</li>
<li>清空数据库</li>
<li>python manage.py flush</li>
<li>导入导出数据</li>
<li>python manage.py dumpdata appname &gt; appname.json</li>
<li>python manage.py loaddata appname.json</li>
</ul>
<h3 id="创建视图">创建视图</h3>
<ul>
<li>需要配置到工程的配置文件中settings中的INSTALLED_APPS</li>
<li>views中定义函数，接收request，返回response</li>
<li>在urls中配置路由规则</li>
<li>在根urls中配置（管理麻烦，配置简单）</li>
<li>在App中创建自己的urls，在urls中书写规则，将urls配置到工程urls中</li>
<li>创建模板目录，在views返回时调用模板的渲染</li>
<li>变更数据库</li>
<li>在settings中配置数据库信息</li>
</ul>
<h1 id="django请求流程">Django请求流程</h1>
<ul>
<li>进来的请求转入/index/。</li>
<li>Django 通过在 ROOT_URLCONF 配置来决定根 URLconf。</li>
<li>Django 在 URLconf 中的所有 URL 模式中，查找第一个匹配 /index/ 的条目。</li>
<li>如果找到匹配，将调用相应的视图函数。</li>
<li>视图函数返回一个 HttpResponse。</li>
<li>Django 转换 HttpResponse 为一个适合的 HTTP response， 以 Web page 显示出来。</li>
</ul>
<h1 id="设计一个小项目">设计一个小项目</h1>
<h3 id="需求分析">需求分析</h3>
<ul>
<li>本示例完成“班级-学生”信息的维护，需要存储两种数据：班级、学生</li>
<li>班级表结构设计：</li>
<li>表名：Grade</li>
<li>班级名称：g_name</li>
<li>班级人数：g_num</li>
<li>学生表结构设计：</li>
<li>表名：Student</li>
<li>学生姓名：s_name</li>
<li>学生性别：s_gender</li>
<li>所属班级：s_grade</li>
<li>班级-学生的关系为一对多</li>
</ul>
<h3 id="数据库配置">数据库配置</h3>
<ul>
<li>在settings.py文件中，通过DATABASES项进行数据库设置</li>
<li>django支持的数据库包括：sqlite、mysql等主流数据库</li>
<li>Django默认使用SQLite数据库</li>
</ul>
<h3 id="创建应用">创建应用</h3>
<ul>
<li>在一个项目中可以创建一到多个应用，每个应用进行一种业务处理</li>
<li>创建应用的命令：</li>
</ul>
<div class="codehilite"><pre><span></span>python manage.py startapp day1_hello_django
</pre></div>


<ul>
<li>应用的目录结构如下图</li>
</ul>
<p><img alt="" src="/django项目目录结构.png" /></p>
<h3 id="定义模型类">定义模型类</h3>
<ul>
<li>有一个数据表，就有一个模型类与之对应</li>
<li>打开models.py文件，定义模型类</li>
<li>引入包from django.db import models</li>
<li>模型类继承自models.Model类</li>
<li><strong>说明：不需要定义主键列，在生成时会自动添加，并且值为自动增长</strong></li>
<li>当输出对象时，会调用对象的str方法</li>
</ul>
<div class="codehilite"><pre><span></span><span class="kn">from</span> <span class="nn">django.db</span> <span class="kn">import</span> <span class="n">models</span>

<span class="k">class</span> <span class="nc">Grade</span><span class="p">(</span><span class="n">models</span><span class="o">.</span><span class="n">Model</span><span class="p">):</span>
    <span class="n">g_name</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">CharField</span><span class="p">(</span><span class="n">max_length</span><span class="o">=</span><span class="mi">20</span><span class="p">,</span> <span class="n">db_column</span><span class="o">=</span><span class="s2">&quot;班级名称&quot;</span><span class="p">)</span>
    <span class="n">g_num</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">IntegerField</span><span class="p">(</span><span class="n">default</span><span class="o">=</span><span class="mi">30</span><span class="p">)</span>
    <span class="n">g_crete_date</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">DateTimeField</span><span class="p">(</span><span class="n">auto_now</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>

<span class="k">class</span> <span class="nc">Student</span><span class="p">(</span><span class="n">models</span><span class="o">.</span><span class="n">Model</span><span class="p">):</span>
    <span class="n">s_name</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">CharField</span><span class="p">(</span><span class="n">max_length</span><span class="o">=</span><span class="mi">20</span><span class="p">,</span> <span class="n">db_column</span><span class="o">=</span><span class="s2">&quot;姓名&quot;</span><span class="p">)</span>
    <span class="n">s_age</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">IntegerField</span><span class="p">(</span><span class="n">default</span><span class="o">=</span><span class="mi">20</span><span class="p">,</span> <span class="n">db_column</span><span class="o">=</span><span class="s2">&quot;年龄&quot;</span><span class="p">)</span>
    <span class="n">s_sex</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">BooleanField</span><span class="p">(</span><span class="n">default</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
    <span class="n">s_birthday</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">DateTimeField</span><span class="p">()</span>
    <span class="n">s_grade</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">ForeignKey</span><span class="p">(</span><span class="n">Grade</span><span class="p">)</span>

    <span class="k">class</span> <span class="nc">Meta</span><span class="p">:</span>
        <span class="n">ordering</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&quot;-s_age&quot;</span><span class="p">]</span>
        <span class="c1"># 为数据库设置别名</span>
        <span class="n">verbose_name</span> <span class="o">=</span> <span class="s2">&quot;学生表&quot;</span>
        <span class="n">verbose_name_plural</span> <span class="o">=</span> <span class="s2">&quot;学生表&quot;</span>

    <span class="k">def</span> <span class="nf">_</span> <span class="n">_str_</span> <span class="n">_</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">return</span> <span class="s2">&quot;</span><span class="si">%d</span><span class="s2">&quot;</span> <span class="o">%</span> <span class="bp">self</span><span class="o">.</span><span class="n">pk</span>
</pre></div>


<h3 id="生成数据表">生成数据表</h3>
<ul>
<li>激活模型：编辑settings.py文件，将booktest应用加入到installed_apps中</li>
</ul>
<p><img alt="1531115052424" src="/注册app.png" /></p>
<ul>
<li>生成迁移文件：根据模型类生成sql语句</li>
</ul>
<div class="codehilite"><pre><span></span>python manage.py makemigrations
</pre></div>


<ul>
<li>迁移文件被生成到应用的migrations目录</li>
</ul>
<p><img alt="1531115146872" src="/迁移文件.png" /></p>
<ul>
<li>执行迁移：执行sql语句生成数据表</li>
</ul>
<div class="codehilite"><pre><span></span>python manage.py migrate
</pre></div>


<h3 id="测试数据操作">测试数据操作</h3>
<ul>
<li>进入python shell，进行简单的模型API练习</li>
</ul>
<div class="codehilite"><pre><span></span>python manage.py shell
</pre></div>


<ul>
<li>进入shell后提示如下：</li>
</ul>
<p>![](/进入django shell.png)</p>
<ul>
<li>引入需要的包：</li>
</ul>
<div class="codehilite"><pre><span></span><span class="kn">from</span> <span class="nn">App.models</span> <span class="kn">import</span> <span class="n">Grade</span><span class="p">,</span><span class="n">Student</span>
</pre></div>


<ul>
<li>查询所有班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>Grade.objects.all()
</pre></div>


<ul>
<li>新建班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>grade = Grade()
grade.g_name = &quot;深圳python1805班&quot;
grade.g_num = 40
grade.save()
</pre></div>


<ul>
<li>查找班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>grade = Grade.objects.get(pk=1)
</pre></div>


<ul>
<li>输出班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>grade
grade.id
grade.g_name
</pre></div>


<ul>
<li>修改班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>grade.g_name=&quot;大神班&quot;
grade.save()
</pre></div>


<ul>
<li>删除班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>grade.delete()
</pre></div>


<h3 id="关联对象的操作">关联对象的操作</h3>
<ul>
<li>对于Student可以按照上面的操作方式进行</li>
<li>添加，注意添加关联对象</li>
</ul>
<div class="codehilite"><pre><span></span>s=Student()
s.s_name=&#39;张三&#39;
s.s_sex=True
s.scontent=&#39;爱好打篮球&#39;
# 注意grade为Grade的实例，上面我们已经删除了，这里需要重新创建
s.sclass=grade
s.save()
</pre></div>


<h3 id="运行项目">运行项目</h3>
<div class="codehilite"><pre><span></span>python manage.py runserver ip:port
</pre></div>


<h1 id="项目主要部分">项目主要部分</h1>
<h3 id="视图">视图</h3>
<ul>
<li>在django中，视图的作用是对路由转发过来的url进行处理</li>
<li>视图函数接收的第一个参数是request对象，request对象中包含了请求的信息</li>
<li>视图函数写每个app下的views.py文件中</li>
</ul>
<div class="codehilite"><pre><span></span><span class="kn">from</span> <span class="nn">django.shortcuts</span> <span class="kn">import</span> <span class="n">render</span>
<span class="kn">from</span> <span class="nn">django.http</span> <span class="kn">import</span> <span class="n">HttpResponse</span>

<span class="c1"># Create your views here.</span>

<span class="k">def</span> <span class="nf">index</span><span class="p">(</span><span class="n">request</span><span class="p">):</span>
    <span class="k">return</span> <span class="n">HttpResponse</span><span class="p">(</span><span class="s2">&quot;Hello Django&quot;</span><span class="p">)</span>
</pre></div>


<p>注意：视图函数的第一个参数必须是request，返回必须调用django的定义的方法规范。</p>
<h3 id="路由">路由</h3>
<ul>
<li>在视图函数写完后，要编写相应的url规则，这样当我们在浏览器上输入网址的时候才能转到相应的视图函数处理逻辑</li>
<li>只定义路径部分，不定义域名</li>
<li>路由函数的url部分遵循正则的书写方式</li>
<li>路由规则由两部分必须指定的参数和其他可选参数组成</li>
</ul>
<div class="codehilite"><pre><span></span>url(r&#39;^index/&#39;, App.index, name=&quot;index&quot;),
</pre></div>


<p>注：每次定义完路由规则，在代码的末尾添加逗号</p>
<ul>
<li>在编写路由规则之前必须导入相应的视图</li>
<li>在组织项目时，将app和项目的路由分离</li>
</ul>
<h3 id="模板">模板</h3>
<ul>
<li>
<p>模板是HTML文件，通过占位符来传递视图函数的数据</p>
</li>
<li>
<p>每个app目录下都可以创建templates的文件夹，django会自动从这些app里寻找相应的模板</p>
</li>
</ul>
<h5 id="定义模板">定义模板</h5>
<p>定义index.html模板文件</p>
<div class="codehilite"><pre><span></span><span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="p">&lt;</span><span class="nt">html</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">title</span><span class="p">&gt;</span>首页<span class="p">&lt;/</span><span class="nt">title</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">h1</span><span class="p">&gt;</span>学生列表<span class="p">&lt;/</span><span class="nt">h1</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">ul</span><span class="p">&gt;</span>
<span class="cp">{%</span><span class="k">for</span> <span class="nv">student</span> <span class="k">in</span> <span class="nv">students</span><span class="cp">%}</span>
<span class="p">&lt;</span><span class="nt">li</span><span class="p">&gt;</span>
  <span class="cp">{{</span><span class="nv">student.s_name</span><span class="cp">}}</span>
<span class="p">&lt;/</span><span class="nt">li</span><span class="p">&gt;</span>
<span class="cp">{%</span><span class="k">endfor</span><span class="cp">%}</span>
<span class="p">&lt;/</span><span class="nt">ul</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span>
</pre></div>


<p>定义detail.html模板</p>
<div class="codehilite"><pre><span></span><span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="p">&lt;</span><span class="nt">html</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">title</span><span class="p">&gt;</span>详情页<span class="p">&lt;/</span><span class="nt">title</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">h1</span><span class="p">&gt;</span>学生详情<span class="p">&lt;/</span><span class="nt">h1</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">ul</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">li</span><span class="p">&gt;</span>
  <span class="cp">{{</span><span class="nv">student.s_name</span><span class="cp">}}</span>
  <span class="cp">{{</span><span class="nv">student.s_gender</span><span class="cp">}}</span>
  <span class="cp">{{</span><span class="nv">student.s_content</span><span class="cp">}}</span>
<span class="p">&lt;/</span><span class="nt">li</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">ul</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span>
</pre></div>


<h5 id="使用模板">使用模板</h5>
<ul>
<li>定义视图</li>
</ul>
<div class="codehilite"><pre><span></span>def index(request):
    students = StudentInfo.objects.all()
    return render(request, &quot;index.html&quot;, {&quot;students&quot;:students})

def index_page(request, id):
    student = StudentInfo.objects.get(pk=id)
    return render(request, &quot;detail.html&quot;, {&quot;student&quot;:student})
</pre></div>


<ul>
<li>定义路由</li>
</ul>
<div class="codehilite"><pre><span></span>url(r&#39;index/$&#39;, class_view.index, name=&quot;index&quot;),
url(r&#39;index/(\d+)/$&#39;, class_view.index_page, name=&quot;index_page&quot;),
</pre></div>


<ul>
<li>运行项目</li>
<li>python manage.py runserver</li>
</ul>
<div class="toc">
<ul>
<li><a href="#django是个啥">Django是个啥</a></li>
<li><a href="#开发环境">开发环境</a></li>
<li><a href="#ubuntu系统和命令介绍">Ubuntu系统和命令介绍</a><ul>
<li><a href="#系统设置">系统设置</a></li>
<li><a href="#常用命令">常用命令</a></li>
</ul>
</li>
<li><a href="#bscs">BS/CS</a></li>
<li><a href="#mvcmvt">MVC/MVT</a></li>
<li><a href="#hellodjango项目">HelloDjango项目</a><ul>
<li><a href="#创建虚拟环境">创建虚拟环境</a></li>
<li><a href="#虚拟环境的优点">虚拟环境的优点</a><ul>
<li><a href="#linuxmacos-下">Linux/MacOS 下</a></li>
<li><a href="#windows-下">Windows 下：</a></li>
<li><a href="#虚拟环境使用方法">虚拟环境使用方法：</a></li>
</ul>
</li>
<li><a href="#安装django框架">安装Django框架</a></li>
<li><a href="#创建hellodjango项目">创建HelloDJango项目</a></li>
<li><a href="#django的项目结构">Django的项目结构</a></li>
<li><a href="#settingspy">settings.py</a></li>
<li><a href="#pycharm安装">Pycharm安装</a></li>
<li><a href="#创建数据库">创建数据库</a></li>
<li><a href="#创建视图">创建视图</a></li>
</ul>
</li>
<li><a href="#django请求流程">Django请求流程</a></li>
<li><a href="#设计一个小项目">设计一个小项目</a><ul>
<li><a href="#需求分析">需求分析</a></li>
<li><a href="#数据库配置">数据库配置</a></li>
<li><a href="#创建应用">创建应用</a></li>
<li><a href="#定义模型类">定义模型类</a></li>
<li><a href="#生成数据表">生成数据表</a></li>
<li><a href="#测试数据操作">测试数据操作</a></li>
<li><a href="#关联对象的操作">关联对象的操作</a></li>
<li><a href="#运行项目">运行项目</a></li>
</ul>
</li>
<li><a href="#项目主要部分">项目主要部分</a><ul>
<li><a href="#视图">视图</a></li>
<li><a href="#路由">路由</a></li>
<li><a href="#模板">模板</a><ul>
<li><a href="#定义模板">定义模板</a></li>
<li><a href="#使用模板">使用模板</a></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>

[pid: 24647|app: 0|req: 41/338] 218.13.14.215 () {42 vars in 814 bytes} [Wed Aug  1 13:37:48 2018] GET /post/3/ => generated 35800 bytes in 1009 msecs (HTTP/1.1 200) 5 headers in 279 bytes (1 switches on core 0)
[pid: 24644|app: 0|req: 138/339] 101.227.131.219 () {36 vars in 691 bytes} [Wed Aug  1 13:38:08 2018] GET /post/3 => generated 0 bytes in 1 msecs (HTTP/1.1 301) 3 headers in 113 bytes (1 switches on core 1)
![Alt text](/static/images/django_blog/01.jpg)

---
typora-copy-images-to: images
typora-root-url: images
---

# Django是个啥

​	最初是被开发来用于管理劳伦斯出版集团旗下的一些以新闻内容为主的网站的。并于2005年7月在BSD许可证下发布。这套框架是以比利时的吉普赛爵士吉他手Django Reinhardt来命名的。

​	Django的主要目标是使得开发复杂的、数据库驱动的网站变得简单。Django注重组件的重用性和“可插拔性”，敏捷开发和DRY法则（Don't Repeat Yourself）。在Django中Python被普遍使用，甚至包括配置文件和数据模型。

- 由 Python 开发的一个免费的开源网站框架，可以用于快速搭建高性能，优雅的网站

- Django 中提供了开发网站经常用到的模块，常见的代码都为你写好了

- Django 提供了通用Web开发模式的高度抽象，提供了频繁进行的编程作业的快速解决方法，以及为“如何解决问题”提供了清晰明了的约定。

- Django的理念是DRY(Don't Repeat Yourself)来鼓励快速开发！

  

# 开发环境

Ubuntu + Python3  + Django + PyCharm



# Ubuntu系统和命令介绍

### 系统设置

### 常用命令

- cd
- ls
- cp
- mv
- rm
- mkdir
- pwd
- touch
- cat
- history
- ps
  - ps -aux
- kill 
  - kill -9 pid
- su/sudo
- chmod
- grep
- which
- whereis
- ifconfig
- netstat
  - netstat -antp 查看网络连接状态
- wget
- ssh username@host -p
  - ssh-keygen
- tar
  - tar -zxvf 解压缩
  - tar -czvf 压缩
- du
  - du -sh
- df
  - df -h
- apt install
- apt update
- apt remove
- apt autoremove
- dpkg -i
- vi/vim

# BS/CS

​        C/S 架构即“客户端-服务器” 架构。这里的“客户端”可以是有 GUI （图形用户界面）的定制软件，也可以是浏览器，甚至可以是通过 SSH 访问服务器的命令行脚本。只要是客户端通过访问服务器调取计算或者存储资源的，统统都是 C/S 架构。所谓的 Browser-Server 架构其实是 C/S 架构的一种特殊的实现形式，而不是其对立面。

- C/S:
  - C: Client
  - S: Server
- B/S
  - B: Browser
  - S: Server       

# MVC/MVT

- MVC

  - M: Model（模型）
  - V: View（视图）
  - C: Controller（控制器）

- MVT

  - M: Model（模型），主要封装对数据库层的访问，对数据库中的数据进行增、删、改、查操作。

  - V: View（视图），用于封装结果，生成页面展示的html内容。

  - T: Template（模板），用于接收请求，处理业务逻辑，与Model和View交互，返回结果。

    ​

# HelloDjango项目

### 创建虚拟环境

### 虚拟环境的优点

- 使不同应用开发环境独立
- 环境升级不影响其他应用，也不会影响全局的python环境
- 可以防止系统中出现包管理混乱和版本冲突

开发会用 virtualenv 来管理多个开发环境

#### Linux/MacOS 下

virtualenvwrapper 使得virtualenv变得更好用，所以我们一起安装了

```
(sudo) pip install virtualenv virtualenvwrapper
```

修改~/.bash_profile或其它环境变量相关文件(如 .bashrc 或用 ZSH 之后的 .zshrc)，添加以下语句

```
export WORKON_HOME=$HOME/.virtualenvs
export PROJECT_HOME=$HOME/workspace
source /usr/local/bin/virtualenvwrapper.sh(每台机子的位置不一样，可以通过find命令找到)
```

修改后使之立即生效(也可以重启终端使之生效)：

```
source ~/.bash_profile
```



#### Windows 下：

```
pip install virtualenv virtualenvwrapper-win
```

【可选】Windows下默认虚拟环境是放在用户名下面的Envs中的，与桌面，我的文档，下载等文件夹在一块的。更改方法：计算机，属性，高级系统设置，环境变量，添加WORKON_HOME，如图（windows 10 环境变量设置截图）：

![](/1.png)

#### 虚拟环境使用方法：

- **mkvirtualenv django：创建运行环境django**

- **workon django: 工作在 django环境 或 从其它环境切换到 django环境**

- **deactivate**: 退出终端环境

- **其它的：**

- **rmvirtualenv** ENV：删除运行环境ENV

- **mkproject** mic：创建mic项目和运行环境mic

- **mktmpenv**：创建临时运行环境

- **lsvirtualenv**: 列出可用的运行环境

- **lssitepackages**: 列出当前环境安装了的包

  ​




### 安装Django框架

- pip install django==1.11.7

- 测试django是否已经安装好

  - 进入python shell

    ```python
    import django
    django.get_version()
    ```

- pip list 显示当前python环境中的所有的库

- pip freeze 显示当前python环境中的除系统内置库外的所有第三方库

### 创建HelloDJango项目

- 开启一个django项目 django-admin startproject day01_HelloDjango
- 测试django项目环境 python manage.py runserver
  - python manage.py runserver 0.0.0.0:8000 表示允许本机所有的IP被外网访问
  - python manage.py runserver 9000 使用本机运行，但端口是9000
- 开启自己的App
  - python manage.py startapp App



### Django的项目结构

1. manage.py
   - 管理整个项目
2. XXX/settings.py  
   - 项目配置文件
3. XXX/urls.py
   - 路由器，接收用户请求，分发给视图函数（控制器）
4. XXX/wsgi.py
   - 网关接口，通常用在线上环境部署（开发过程中不会接触）

### settings.py

1. DEBUG 是否打开DEBUG
2. ALLOWED_HOSTS 允许访问的主机
3. INSTALLED_APPS   安装了的应用 
4. DATABASES   数据库配置
5. LANGUAGE_CODE 中文 zh-hans
6. TIME_ZONE  中国 Asia/Shanghai



### Pycharm安装

1. 解压
2. 目录结构中会有  bin
3. 进入bin
4. bin 中pycharm.sh
5. 执行 ./pycharm.sh
6. 如果想在终端中的任何位置运行，那就配置到环境变量中



### 创建数据库

- 创建更改的文件
  - python manage.py makemigrations
- 将生成的py文件应用到数据库
  - python manage.py migrate
- 清空数据库
  - python manage.py flush
- 导入导出数据
  - python manage.py dumpdata appname > appname.json
  - python manage.py loaddata appname.json

### 创建视图

- 需要配置到工程的配置文件中settings中的INSTALLED_APPS
- views中定义函数，接收request，返回response
- 在urls中配置路由规则
  - 在根urls中配置（管理麻烦，配置简单）
  - 在App中创建自己的urls，在urls中书写规则，将urls配置到工程urls中
- 创建模板目录，在views返回时调用模板的渲染
- 变更数据库
  - 在settings中配置数据库信息



# Django请求流程

- 进来的请求转入/index/。
- Django 通过在 ROOT_URLCONF 配置来决定根 URLconf。
- Django 在 URLconf 中的所有 URL 模式中，查找第一个匹配 /index/ 的条目。
- 如果找到匹配，将调用相应的视图函数。
- 视图函数返回一个 HttpResponse。
- Django 转换 HttpResponse 为一个适合的 HTTP response， 以 Web page 显示出来。



# 设计一个小项目

### 需求分析

- 本示例完成“班级-学生”信息的维护，需要存储两种数据：班级、学生
- 班级表结构设计：
  - 表名：Grade
  - 班级名称：g_name
  - 班级人数：g_num
- 学生表结构设计：
  - 表名：Student
  - 学生姓名：s_name
  - 学生性别：s_gender
  - 所属班级：s_grade
- 班级-学生的关系为一对多

### 数据库配置

- 在settings.py文件中，通过DATABASES项进行数据库设置
- django支持的数据库包括：sqlite、mysql等主流数据库
- Django默认使用SQLite数据库

### 创建应用

- 在一个项目中可以创建一到多个应用，每个应用进行一种业务处理
- 创建应用的命令：

```
python manage.py startapp day1_hello_django
```

- 应用的目录结构如下图

![](/django项目目录结构.png)

### 定义模型类

- 有一个数据表，就有一个模型类与之对应
- 打开models.py文件，定义模型类
- 引入包from django.db import models
- 模型类继承自models.Model类
- **说明：不需要定义主键列，在生成时会自动添加，并且值为自动增长**
- 当输出对象时，会调用对象的str方法

```python
from django.db import models

class Grade(models.Model):
    g_name = models.CharField(max_length=20, db_column="班级名称")
    g_num = models.IntegerField(default=30)
    g_crete_date = models.DateTimeField(auto_now=True)

class Student(models.Model):
    s_name = models.CharField(max_length=20, db_column="姓名")
    s_age = models.IntegerField(default=20, db_column="年龄")
    s_sex = models.BooleanField(default=True)
    s_birthday = models.DateTimeField()
    s_grade = models.ForeignKey(Grade)

    class Meta:
        ordering = ["-s_age"]
        # 为数据库设置别名
        verbose_name = "学生表"
    	verbose_name_plural = "学生表"
        
    def _ _str_ _(self):
        return "%d" % self.pk
```

### 生成数据表

- 激活模型：编辑settings.py文件，将booktest应用加入到installed_apps中

  ![1531115052424](/注册app.png)

- 生成迁移文件：根据模型类生成sql语句

```
python manage.py makemigrations
```

- 迁移文件被生成到应用的migrations目录

![1531115146872](/迁移文件.png)

- 执行迁移：执行sql语句生成数据表

```
python manage.py migrate
```

### 测试数据操作

- 进入python shell，进行简单的模型API练习

```
python manage.py shell
```

- 进入shell后提示如下：

![](/进入django shell.png)

- 引入需要的包：

```
from App.models import Grade,Student
```

- 查询所有班级信息：

```
Grade.objects.all()
```

- 新建班级信息：

```
grade = Grade()
grade.g_name = "深圳python1805班"
grade.g_num = 40
grade.save()
```

- 查找班级信息：

```
grade = Grade.objects.get(pk=1)
```

- 输出班级信息：

```
grade
grade.id
grade.g_name
```

- 修改班级信息：

```
grade.g_name="大神班"
grade.save()
```

- 删除班级信息：

```
grade.delete()
```

### 关联对象的操作

- 对于Student可以按照上面的操作方式进行
- 添加，注意添加关联对象

```
s=Student()
s.s_name='张三'
s.s_sex=True
s.scontent='爱好打篮球'
# 注意grade为Grade的实例，上面我们已经删除了，这里需要重新创建
s.sclass=grade
s.save()
```

### 运行项目

```
python manage.py runserver ip:port
```



# 项目主要部分

### 视图

- 在django中，视图的作用是对路由转发过来的url进行处理
- 视图函数接收的第一个参数是request对象，request对象中包含了请求的信息
- 视图函数写每个app下的views.py文件中

```
from django.shortcuts import render
from django.http import HttpResponse

# Create your views here.

def index(request):
    return HttpResponse("Hello Django")
```

注意：视图函数的第一个参数必须是request，返回必须调用django的定义的方法规范。

### 路由

- 在视图函数写完后，要编写相应的url规则，这样当我们在浏览器上输入网址的时候才能转到相应的视图函数处理逻辑
- 只定义路径部分，不定义域名
- 路由函数的url部分遵循正则的书写方式
- 路由规则由两部分必须指定的参数和其他可选参数组成

```
url(r'^index/', App.index, name="index"),
```

注：每次定义完路由规则，在代码的末尾添加逗号

- 在编写路由规则之前必须导入相应的视图
- 在组织项目时，将app和项目的路由分离



### 模板

- 模板是HTML文件，通过占位符来传递视图函数的数据

- 每个app目录下都可以创建templates的文件夹，django会自动从这些app里寻找相应的模板

  

##### 定义模板

定义index.html模板文件

```
<!DOCTYPE html>
<html>
<head>
  <title>首页</title>
</head>
<body>
<h1>学生列表</h1>
<ul>
{%for student in students%}
<li>
  {{student.s_name}}
</li>
{%endfor%}
</ul>
</body>
</html>
```

定义detail.html模板

```
<!DOCTYPE html>
<html>
<head>
  <title>详情页</title>
</head>
<body>
<h1>学生详情</h1>
<ul>
<li>
  {{student.s_name}}
  {{student.s_gender}}
  {{student.s_content}}
</li>
</ul>
</body>
</html>
```

##### 使用模板

- 定义视图

```
def index(request):
    students = StudentInfo.objects.all()
    return render(request, "index.html", {"students":students})

def index_page(request, id):
    student = StudentInfo.objects.get(pk=id)
    return render(request, "detail.html", {"student":student})
```

- 定义路由

```
url(r'index/$', class_view.index, name="index"),
url(r'index/(\d+)/$', class_view.index_page, name="index_page"),
```

- 运行项目
  - python manage.py runserver
------------------------------------------------------------------------------------------------------------------------
<p><img alt="Alt text" src="/static/images/django_blog/01.jpg" /></p>
<hr />
<p>typora-copy-images-to: images
typora-root-url: images</p>
<hr />
<h1 id="django是个啥">Django是个啥</h1>
<p>​   最初是被开发来用于管理劳伦斯出版集团旗下的一些以新闻内容为主的网站的。并于2005年7月在BSD许可证下发布。这套框架是以比利时的吉普赛爵士吉他手Django Reinhardt来命名的。</p>
<p>​   Django的主要目标是使得开发复杂的、数据库驱动的网站变得简单。Django注重组件的重用性和“可插拔性”，敏捷开发和DRY法则（Don't Repeat Yourself）。在Django中Python被普遍使用，甚至包括配置文件和数据模型。</p>
<ul>
<li>
<p>由 Python 开发的一个免费的开源网站框架，可以用于快速搭建高性能，优雅的网站</p>
</li>
<li>
<p>Django 中提供了开发网站经常用到的模块，常见的代码都为你写好了</p>
</li>
<li>
<p>Django 提供了通用Web开发模式的高度抽象，提供了频繁进行的编程作业的快速解决方法，以及为“如何解决问题”提供了清晰明了的约定。</p>
</li>
<li>
<p>Django的理念是DRY(Don't Repeat Yourself)来鼓励快速开发！</p>
</li>
</ul>
<h1 id="开发环境">开发环境</h1>
<p>Ubuntu + Python3  + Django + PyCharm</p>
<h1 id="ubuntu系统和命令介绍">Ubuntu系统和命令介绍</h1>
<h3 id="系统设置">系统设置</h3>
<h3 id="常用命令">常用命令</h3>
<ul>
<li>cd</li>
<li>ls</li>
<li>cp</li>
<li>mv</li>
<li>rm</li>
<li>mkdir</li>
<li>pwd</li>
<li>touch</li>
<li>cat</li>
<li>history</li>
<li>ps</li>
<li>ps -aux</li>
<li>kill </li>
<li>kill -9 pid</li>
<li>su/sudo</li>
<li>chmod</li>
<li>grep</li>
<li>which</li>
<li>whereis</li>
<li>ifconfig</li>
<li>netstat</li>
<li>netstat -antp 查看网络连接状态</li>
<li>wget</li>
<li>ssh username@host -p</li>
<li>ssh-keygen</li>
<li>tar</li>
<li>tar -zxvf 解压缩</li>
<li>tar -czvf 压缩</li>
<li>du</li>
<li>du -sh</li>
<li>df</li>
<li>df -h</li>
<li>apt install</li>
<li>apt update</li>
<li>apt remove</li>
<li>apt autoremove</li>
<li>dpkg -i</li>
<li>vi/vim</li>
</ul>
<h1 id="bscs">BS/CS</h1>
<p>​        C/S 架构即“客户端-服务器” 架构。这里的“客户端”可以是有 GUI （图形用户界面）的定制软件，也可以是浏览器，甚至可以是通过 SSH 访问服务器的命令行脚本。只要是客户端通过访问服务器调取计算或者存储资源的，统统都是 C/S 架构。所谓的 Browser-Server 架构其实是 C/S 架构的一种特殊的实现形式，而不是其对立面。</p>
<ul>
<li>C/S:</li>
<li>C: Client</li>
<li>S: Server</li>
<li>B/S</li>
<li>B: Browser</li>
<li>S: Server       </li>
</ul>
<h1 id="mvcmvt">MVC/MVT</h1>
<ul>
<li>
<p>MVC</p>
</li>
<li>
<p>M: Model（模型）</p>
</li>
<li>V: View（视图）</li>
<li>
<p>C: Controller（控制器）</p>
</li>
<li>
<p>MVT</p>
</li>
<li>
<p>M: Model（模型），主要封装对数据库层的访问，对数据库中的数据进行增、删、改、查操作。</p>
</li>
<li>
<p>V: View（视图），用于封装结果，生成页面展示的html内容。</p>
</li>
<li>
<p>T: Template（模板），用于接收请求，处理业务逻辑，与Model和View交互，返回结果。</p>
<p>​</p>
</li>
</ul>
<h1 id="hellodjango项目">HelloDjango项目</h1>
<h3 id="创建虚拟环境">创建虚拟环境</h3>
<h3 id="虚拟环境的优点">虚拟环境的优点</h3>
<ul>
<li>使不同应用开发环境独立</li>
<li>环境升级不影响其他应用，也不会影响全局的python环境</li>
<li>可以防止系统中出现包管理混乱和版本冲突</li>
</ul>
<p>开发会用 virtualenv 来管理多个开发环境</p>
<h4 id="linuxmacos-下">Linux/MacOS 下</h4>
<p>virtualenvwrapper 使得virtualenv变得更好用，所以我们一起安装了</p>
<div class="codehilite"><pre><span></span>(sudo) pip install virtualenv virtualenvwrapper
</pre></div>


<p>修改~/.bash_profile或其它环境变量相关文件(如 .bashrc 或用 ZSH 之后的 .zshrc)，添加以下语句</p>
<div class="codehilite"><pre><span></span>export WORKON_HOME=$HOME/.virtualenvs
export PROJECT_HOME=$HOME/workspace
source /usr/local/bin/virtualenvwrapper.sh(每台机子的位置不一样，可以通过find命令找到)
</pre></div>


<p>修改后使之立即生效(也可以重启终端使之生效)：</p>
<div class="codehilite"><pre><span></span>source ~/.bash_profile
</pre></div>


<h4 id="windows-下">Windows 下：</h4>
<div class="codehilite"><pre><span></span>pip install virtualenv virtualenvwrapper-win
</pre></div>


<p>【可选】Windows下默认虚拟环境是放在用户名下面的Envs中的，与桌面，我的文档，下载等文件夹在一块的。更改方法：计算机，属性，高级系统设置，环境变量，添加WORKON_HOME，如图（windows 10 环境变量设置截图）：</p>
<p><img alt="" src="/1.png" /></p>
<h4 id="虚拟环境使用方法">虚拟环境使用方法：</h4>
<ul>
<li>
<p><strong>mkvirtualenv django：创建运行环境django</strong></p>
</li>
<li>
<p><strong>workon django: 工作在 django环境 或 从其它环境切换到 django环境</strong></p>
</li>
<li>
<p><strong>deactivate</strong>: 退出终端环境</p>
</li>
<li>
<p><strong>其它的：</strong></p>
</li>
<li>
<p><strong>rmvirtualenv</strong> ENV：删除运行环境ENV</p>
</li>
<li>
<p><strong>mkproject</strong> mic：创建mic项目和运行环境mic</p>
</li>
<li>
<p><strong>mktmpenv</strong>：创建临时运行环境</p>
</li>
<li>
<p><strong>lsvirtualenv</strong>: 列出可用的运行环境</p>
</li>
<li>
<p><strong>lssitepackages</strong>: 列出当前环境安装了的包</p>
</li>
</ul>
<p>​</p>
<h3 id="安装django框架">安装Django框架</h3>
<ul>
<li>
<p>pip install django==1.11.7</p>
</li>
<li>
<p>测试django是否已经安装好</p>
</li>
<li>
<p>进入python shell</p>
<p><code>python
import django
django.get_version()</code></p>
</li>
<li>
<p>pip list 显示当前python环境中的所有的库</p>
</li>
<li>
<p>pip freeze 显示当前python环境中的除系统内置库外的所有第三方库</p>
</li>
</ul>
<h3 id="创建hellodjango项目">创建HelloDJango项目</h3>
<ul>
<li>开启一个django项目 django-admin startproject day01_HelloDjango</li>
<li>测试django项目环境 python manage.py runserver</li>
<li>python manage.py runserver 0.0.0.0:8000 表示允许本机所有的IP被外网访问</li>
<li>python manage.py runserver 9000 使用本机运行，但端口是9000</li>
<li>开启自己的App</li>
<li>python manage.py startapp App</li>
</ul>
<h3 id="django的项目结构">Django的项目结构</h3>
<ol>
<li>manage.py</li>
<li>管理整个项目</li>
<li>XXX/settings.py  </li>
<li>项目配置文件</li>
<li>XXX/urls.py</li>
<li>路由器，接收用户请求，分发给视图函数（控制器）</li>
<li>XXX/wsgi.py</li>
<li>网关接口，通常用在线上环境部署（开发过程中不会接触）</li>
</ol>
<h3 id="settingspy">settings.py</h3>
<ol>
<li>DEBUG 是否打开DEBUG</li>
<li>ALLOWED_HOSTS 允许访问的主机</li>
<li>INSTALLED_APPS   安装了的应用 </li>
<li>DATABASES   数据库配置</li>
<li>LANGUAGE_CODE 中文 zh-hans</li>
<li>TIME_ZONE  中国 Asia/Shanghai</li>
</ol>
<h3 id="pycharm安装">Pycharm安装</h3>
<ol>
<li>解压</li>
<li>目录结构中会有  bin</li>
<li>进入bin</li>
<li>bin 中pycharm.sh</li>
<li>执行 ./pycharm.sh</li>
<li>如果想在终端中的任何位置运行，那就配置到环境变量中</li>
</ol>
<h3 id="创建数据库">创建数据库</h3>
<ul>
<li>创建更改的文件</li>
<li>python manage.py makemigrations</li>
<li>将生成的py文件应用到数据库</li>
<li>python manage.py migrate</li>
<li>清空数据库</li>
<li>python manage.py flush</li>
<li>导入导出数据</li>
<li>python manage.py dumpdata appname &gt; appname.json</li>
<li>python manage.py loaddata appname.json</li>
</ul>
<h3 id="创建视图">创建视图</h3>
<ul>
<li>需要配置到工程的配置文件中settings中的INSTALLED_APPS</li>
<li>views中定义函数，接收request，返回response</li>
<li>在urls中配置路由规则</li>
<li>在根urls中配置（管理麻烦，配置简单）</li>
<li>在App中创建自己的urls，在urls中书写规则，将urls配置到工程urls中</li>
<li>创建模板目录，在views返回时调用模板的渲染</li>
<li>变更数据库</li>
<li>在settings中配置数据库信息</li>
</ul>
<h1 id="django请求流程">Django请求流程</h1>
<ul>
<li>进来的请求转入/index/。</li>
<li>Django 通过在 ROOT_URLCONF 配置来决定根 URLconf。</li>
<li>Django 在 URLconf 中的所有 URL 模式中，查找第一个匹配 /index/ 的条目。</li>
<li>如果找到匹配，将调用相应的视图函数。</li>
<li>视图函数返回一个 HttpResponse。</li>
<li>Django 转换 HttpResponse 为一个适合的 HTTP response， 以 Web page 显示出来。</li>
</ul>
<h1 id="设计一个小项目">设计一个小项目</h1>
<h3 id="需求分析">需求分析</h3>
<ul>
<li>本示例完成“班级-学生”信息的维护，需要存储两种数据：班级、学生</li>
<li>班级表结构设计：</li>
<li>表名：Grade</li>
<li>班级名称：g_name</li>
<li>班级人数：g_num</li>
<li>学生表结构设计：</li>
<li>表名：Student</li>
<li>学生姓名：s_name</li>
<li>学生性别：s_gender</li>
<li>所属班级：s_grade</li>
<li>班级-学生的关系为一对多</li>
</ul>
<h3 id="数据库配置">数据库配置</h3>
<ul>
<li>在settings.py文件中，通过DATABASES项进行数据库设置</li>
<li>django支持的数据库包括：sqlite、mysql等主流数据库</li>
<li>Django默认使用SQLite数据库</li>
</ul>
<h3 id="创建应用">创建应用</h3>
<ul>
<li>在一个项目中可以创建一到多个应用，每个应用进行一种业务处理</li>
<li>创建应用的命令：</li>
</ul>
<div class="codehilite"><pre><span></span>python manage.py startapp day1_hello_django
</pre></div>


<ul>
<li>应用的目录结构如下图</li>
</ul>
<p><img alt="" src="/django项目目录结构.png" /></p>
<h3 id="定义模型类">定义模型类</h3>
<ul>
<li>有一个数据表，就有一个模型类与之对应</li>
<li>打开models.py文件，定义模型类</li>
<li>引入包from django.db import models</li>
<li>模型类继承自models.Model类</li>
<li><strong>说明：不需要定义主键列，在生成时会自动添加，并且值为自动增长</strong></li>
<li>当输出对象时，会调用对象的str方法</li>
</ul>
<div class="codehilite"><pre><span></span><span class="kn">from</span> <span class="nn">django.db</span> <span class="kn">import</span> <span class="n">models</span>

<span class="k">class</span> <span class="nc">Grade</span><span class="p">(</span><span class="n">models</span><span class="o">.</span><span class="n">Model</span><span class="p">):</span>
    <span class="n">g_name</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">CharField</span><span class="p">(</span><span class="n">max_length</span><span class="o">=</span><span class="mi">20</span><span class="p">,</span> <span class="n">db_column</span><span class="o">=</span><span class="s2">&quot;班级名称&quot;</span><span class="p">)</span>
    <span class="n">g_num</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">IntegerField</span><span class="p">(</span><span class="n">default</span><span class="o">=</span><span class="mi">30</span><span class="p">)</span>
    <span class="n">g_crete_date</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">DateTimeField</span><span class="p">(</span><span class="n">auto_now</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>

<span class="k">class</span> <span class="nc">Student</span><span class="p">(</span><span class="n">models</span><span class="o">.</span><span class="n">Model</span><span class="p">):</span>
    <span class="n">s_name</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">CharField</span><span class="p">(</span><span class="n">max_length</span><span class="o">=</span><span class="mi">20</span><span class="p">,</span> <span class="n">db_column</span><span class="o">=</span><span class="s2">&quot;姓名&quot;</span><span class="p">)</span>
    <span class="n">s_age</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">IntegerField</span><span class="p">(</span><span class="n">default</span><span class="o">=</span><span class="mi">20</span><span class="p">,</span> <span class="n">db_column</span><span class="o">=</span><span class="s2">&quot;年龄&quot;</span><span class="p">)</span>
    <span class="n">s_sex</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">BooleanField</span><span class="p">(</span><span class="n">default</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
    <span class="n">s_birthday</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">DateTimeField</span><span class="p">()</span>
    <span class="n">s_grade</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">ForeignKey</span><span class="p">(</span><span class="n">Grade</span><span class="p">)</span>

    <span class="k">class</span> <span class="nc">Meta</span><span class="p">:</span>
        <span class="n">ordering</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&quot;-s_age&quot;</span><span class="p">]</span>
        <span class="c1"># 为数据库设置别名</span>
        <span class="n">verbose_name</span> <span class="o">=</span> <span class="s2">&quot;学生表&quot;</span>
        <span class="n">verbose_name_plural</span> <span class="o">=</span> <span class="s2">&quot;学生表&quot;</span>

    <span class="k">def</span> <span class="nf">_</span> <span class="n">_str_</span> <span class="n">_</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">return</span> <span class="s2">&quot;</span><span class="si">%d</span><span class="s2">&quot;</span> <span class="o">%</span> <span class="bp">self</span><span class="o">.</span><span class="n">pk</span>
</pre></div>


<h3 id="生成数据表">生成数据表</h3>
<ul>
<li>激活模型：编辑settings.py文件，将booktest应用加入到installed_apps中</li>
</ul>
<p><img alt="1531115052424" src="/注册app.png" /></p>
<ul>
<li>生成迁移文件：根据模型类生成sql语句</li>
</ul>
<div class="codehilite"><pre><span></span>python manage.py makemigrations
</pre></div>


<ul>
<li>迁移文件被生成到应用的migrations目录</li>
</ul>
<p><img alt="1531115146872" src="/迁移文件.png" /></p>
<ul>
<li>执行迁移：执行sql语句生成数据表</li>
</ul>
<div class="codehilite"><pre><span></span>python manage.py migrate
</pre></div>


<h3 id="测试数据操作">测试数据操作</h3>
<ul>
<li>进入python shell，进行简单的模型API练习</li>
</ul>
<div class="codehilite"><pre><span></span>python manage.py shell
</pre></div>


<ul>
<li>进入shell后提示如下：</li>
</ul>
<p>![](/进入django shell.png)</p>
<ul>
<li>引入需要的包：</li>
</ul>
<div class="codehilite"><pre><span></span><span class="kn">from</span> <span class="nn">App.models</span> <span class="kn">import</span> <span class="n">Grade</span><span class="p">,</span><span class="n">Student</span>
</pre></div>


<ul>
<li>查询所有班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>Grade.objects.all()
</pre></div>


<ul>
<li>新建班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>grade = Grade()
grade.g_name = &quot;深圳python1805班&quot;
grade.g_num = 40
grade.save()
</pre></div>


<ul>
<li>查找班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>grade = Grade.objects.get(pk=1)
</pre></div>


<ul>
<li>输出班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>grade
grade.id
grade.g_name
</pre></div>


<ul>
<li>修改班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>grade.g_name=&quot;大神班&quot;
grade.save()
</pre></div>


<ul>
<li>删除班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>grade.delete()
</pre></div>


<h3 id="关联对象的操作">关联对象的操作</h3>
<ul>
<li>对于Student可以按照上面的操作方式进行</li>
<li>添加，注意添加关联对象</li>
</ul>
<div class="codehilite"><pre><span></span>s=Student()
s.s_name=&#39;张三&#39;
s.s_sex=True
s.scontent=&#39;爱好打篮球&#39;
# 注意grade为Grade的实例，上面我们已经删除了，这里需要重新创建
s.sclass=grade
s.save()
</pre></div>


<h3 id="运行项目">运行项目</h3>
<div class="codehilite"><pre><span></span>python manage.py runserver ip:port
</pre></div>


<h1 id="项目主要部分">项目主要部分</h1>
<h3 id="视图">视图</h3>
<ul>
<li>在django中，视图的作用是对路由转发过来的url进行处理</li>
<li>视图函数接收的第一个参数是request对象，request对象中包含了请求的信息</li>
<li>视图函数写每个app下的views.py文件中</li>
</ul>
<div class="codehilite"><pre><span></span><span class="kn">from</span> <span class="nn">django.shortcuts</span> <span class="kn">import</span> <span class="n">render</span>
<span class="kn">from</span> <span class="nn">django.http</span> <span class="kn">import</span> <span class="n">HttpResponse</span>

<span class="c1"># Create your views here.</span>

<span class="k">def</span> <span class="nf">index</span><span class="p">(</span><span class="n">request</span><span class="p">):</span>
    <span class="k">return</span> <span class="n">HttpResponse</span><span class="p">(</span><span class="s2">&quot;Hello Django&quot;</span><span class="p">)</span>
</pre></div>


<p>注意：视图函数的第一个参数必须是request，返回必须调用django的定义的方法规范。</p>
<h3 id="路由">路由</h3>
<ul>
<li>在视图函数写完后，要编写相应的url规则，这样当我们在浏览器上输入网址的时候才能转到相应的视图函数处理逻辑</li>
<li>只定义路径部分，不定义域名</li>
<li>路由函数的url部分遵循正则的书写方式</li>
<li>路由规则由两部分必须指定的参数和其他可选参数组成</li>
</ul>
<div class="codehilite"><pre><span></span>url(r&#39;^index/&#39;, App.index, name=&quot;index&quot;),
</pre></div>


<p>注：每次定义完路由规则，在代码的末尾添加逗号</p>
<ul>
<li>在编写路由规则之前必须导入相应的视图</li>
<li>在组织项目时，将app和项目的路由分离</li>
</ul>
<h3 id="模板">模板</h3>
<ul>
<li>
<p>模板是HTML文件，通过占位符来传递视图函数的数据</p>
</li>
<li>
<p>每个app目录下都可以创建templates的文件夹，django会自动从这些app里寻找相应的模板</p>
</li>
</ul>
<h5 id="定义模板">定义模板</h5>
<p>定义index.html模板文件</p>
<div class="codehilite"><pre><span></span><span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="p">&lt;</span><span class="nt">html</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">title</span><span class="p">&gt;</span>首页<span class="p">&lt;/</span><span class="nt">title</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">h1</span><span class="p">&gt;</span>学生列表<span class="p">&lt;/</span><span class="nt">h1</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">ul</span><span class="p">&gt;</span>
<span class="cp">{%</span><span class="k">for</span> <span class="nv">student</span> <span class="k">in</span> <span class="nv">students</span><span class="cp">%}</span>
<span class="p">&lt;</span><span class="nt">li</span><span class="p">&gt;</span>
  <span class="cp">{{</span><span class="nv">student.s_name</span><span class="cp">}}</span>
<span class="p">&lt;/</span><span class="nt">li</span><span class="p">&gt;</span>
<span class="cp">{%</span><span class="k">endfor</span><span class="cp">%}</span>
<span class="p">&lt;/</span><span class="nt">ul</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span>
</pre></div>


<p>定义detail.html模板</p>
<div class="codehilite"><pre><span></span><span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="p">&lt;</span><span class="nt">html</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">title</span><span class="p">&gt;</span>详情页<span class="p">&lt;/</span><span class="nt">title</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">h1</span><span class="p">&gt;</span>学生详情<span class="p">&lt;/</span><span class="nt">h1</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">ul</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">li</span><span class="p">&gt;</span>
  <span class="cp">{{</span><span class="nv">student.s_name</span><span class="cp">}}</span>
  <span class="cp">{{</span><span class="nv">student.s_gender</span><span class="cp">}}</span>
  <span class="cp">{{</span><span class="nv">student.s_content</span><span class="cp">}}</span>
<span class="p">&lt;/</span><span class="nt">li</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">ul</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span>
</pre></div>


<h5 id="使用模板">使用模板</h5>
<ul>
<li>定义视图</li>
</ul>
<div class="codehilite"><pre><span></span>def index(request):
    students = StudentInfo.objects.all()
    return render(request, &quot;index.html&quot;, {&quot;students&quot;:students})

def index_page(request, id):
    student = StudentInfo.objects.get(pk=id)
    return render(request, &quot;detail.html&quot;, {&quot;student&quot;:student})
</pre></div>


<ul>
<li>定义路由</li>
</ul>
<div class="codehilite"><pre><span></span>url(r&#39;index/$&#39;, class_view.index, name=&quot;index&quot;),
url(r&#39;index/(\d+)/$&#39;, class_view.index_page, name=&quot;index_page&quot;),
</pre></div>


<ul>
<li>运行项目</li>
<li>python manage.py runserver</li>
</ul>
<div class="toc">
<ul>
<li><a href="#django是个啥">Django是个啥</a></li>
<li><a href="#开发环境">开发环境</a></li>
<li><a href="#ubuntu系统和命令介绍">Ubuntu系统和命令介绍</a><ul>
<li><a href="#系统设置">系统设置</a></li>
<li><a href="#常用命令">常用命令</a></li>
</ul>
</li>
<li><a href="#bscs">BS/CS</a></li>
<li><a href="#mvcmvt">MVC/MVT</a></li>
<li><a href="#hellodjango项目">HelloDjango项目</a><ul>
<li><a href="#创建虚拟环境">创建虚拟环境</a></li>
<li><a href="#虚拟环境的优点">虚拟环境的优点</a><ul>
<li><a href="#linuxmacos-下">Linux/MacOS 下</a></li>
<li><a href="#windows-下">Windows 下：</a></li>
<li><a href="#虚拟环境使用方法">虚拟环境使用方法：</a></li>
</ul>
</li>
<li><a href="#安装django框架">安装Django框架</a></li>
<li><a href="#创建hellodjango项目">创建HelloDJango项目</a></li>
<li><a href="#django的项目结构">Django的项目结构</a></li>
<li><a href="#settingspy">settings.py</a></li>
<li><a href="#pycharm安装">Pycharm安装</a></li>
<li><a href="#创建数据库">创建数据库</a></li>
<li><a href="#创建视图">创建视图</a></li>
</ul>
</li>
<li><a href="#django请求流程">Django请求流程</a></li>
<li><a href="#设计一个小项目">设计一个小项目</a><ul>
<li><a href="#需求分析">需求分析</a></li>
<li><a href="#数据库配置">数据库配置</a></li>
<li><a href="#创建应用">创建应用</a></li>
<li><a href="#定义模型类">定义模型类</a></li>
<li><a href="#生成数据表">生成数据表</a></li>
<li><a href="#测试数据操作">测试数据操作</a></li>
<li><a href="#关联对象的操作">关联对象的操作</a></li>
<li><a href="#运行项目">运行项目</a></li>
</ul>
</li>
<li><a href="#项目主要部分">项目主要部分</a><ul>
<li><a href="#视图">视图</a></li>
<li><a href="#路由">路由</a></li>
<li><a href="#模板">模板</a><ul>
<li><a href="#定义模板">定义模板</a></li>
<li><a href="#使用模板">使用模板</a></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>

[pid: 24647|app: 0|req: 42/340] 61.129.8.179 () {36 vars in 985 bytes} [Wed Aug  1 13:38:11 2018] GET /post/3/?nsukey=RUWLozw0JTV1G6JNLHruMmJxPEqHtfm79LjNa26gKYTYoS9XsDFW%2FSO%2B4TvUffJQkKX36AhVj313U7HvoLYi9g1QddVM0IExIvs5s2R5j%2Bp7VvffN99berzIFnIZgGlXHi%2BorKwfIDaBz%2F1khnOmmLi9JPlaah36ANaFfo6qHb8%3D => generated 35800 bytes in 566 msecs (HTTP/1.1 200) 5 headers in 279 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24646|app: 0|req: 70/341] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug  1 13:40:00 2018] GET / => generated 10360 bytes in 53 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
![Alt text](/static/images/django_blog/01.jpg)

---
typora-copy-images-to: images
typora-root-url: images
---

# Django是个啥

​	最初是被开发来用于管理劳伦斯出版集团旗下的一些以新闻内容为主的网站的。并于2005年7月在BSD许可证下发布。这套框架是以比利时的吉普赛爵士吉他手Django Reinhardt来命名的。

​	Django的主要目标是使得开发复杂的、数据库驱动的网站变得简单。Django注重组件的重用性和“可插拔性”，敏捷开发和DRY法则（Don't Repeat Yourself）。在Django中Python被普遍使用，甚至包括配置文件和数据模型。

- 由 Python 开发的一个免费的开源网站框架，可以用于快速搭建高性能，优雅的网站

- Django 中提供了开发网站经常用到的模块，常见的代码都为你写好了

- Django 提供了通用Web开发模式的高度抽象，提供了频繁进行的编程作业的快速解决方法，以及为“如何解决问题”提供了清晰明了的约定。

- Django的理念是DRY(Don't Repeat Yourself)来鼓励快速开发！

  

# 开发环境

Ubuntu + Python3  + Django + PyCharm



# Ubuntu系统和命令介绍

### 系统设置

### 常用命令

- cd
- ls
- cp
- mv
- rm
- mkdir
- pwd
- touch
- cat
- history
- ps
  - ps -aux
- kill 
  - kill -9 pid
- su/sudo
- chmod
- grep
- which
- whereis
- ifconfig
- netstat
  - netstat -antp 查看网络连接状态
- wget
- ssh username@host -p
  - ssh-keygen
- tar
  - tar -zxvf 解压缩
  - tar -czvf 压缩
- du
  - du -sh
- df
  - df -h
- apt install
- apt update
- apt remove
- apt autoremove
- dpkg -i
- vi/vim

# BS/CS

​        C/S 架构即“客户端-服务器” 架构。这里的“客户端”可以是有 GUI （图形用户界面）的定制软件，也可以是浏览器，甚至可以是通过 SSH 访问服务器的命令行脚本。只要是客户端通过访问服务器调取计算或者存储资源的，统统都是 C/S 架构。所谓的 Browser-Server 架构其实是 C/S 架构的一种特殊的实现形式，而不是其对立面。

- C/S:
  - C: Client
  - S: Server
- B/S
  - B: Browser
  - S: Server       

# MVC/MVT

- MVC

  - M: Model（模型）
  - V: View（视图）
  - C: Controller（控制器）

- MVT

  - M: Model（模型），主要封装对数据库层的访问，对数据库中的数据进行增、删、改、查操作。

  - V: View（视图），用于封装结果，生成页面展示的html内容。

  - T: Template（模板），用于接收请求，处理业务逻辑，与Model和View交互，返回结果。

    ​

# HelloDjango项目

### 创建虚拟环境

### 虚拟环境的优点

- 使不同应用开发环境独立
- 环境升级不影响其他应用，也不会影响全局的python环境
- 可以防止系统中出现包管理混乱和版本冲突

开发会用 virtualenv 来管理多个开发环境

#### Linux/MacOS 下

virtualenvwrapper 使得virtualenv变得更好用，所以我们一起安装了

```
(sudo) pip install virtualenv virtualenvwrapper
```

修改~/.bash_profile或其它环境变量相关文件(如 .bashrc 或用 ZSH 之后的 .zshrc)，添加以下语句

```
export WORKON_HOME=$HOME/.virtualenvs
export PROJECT_HOME=$HOME/workspace
source /usr/local/bin/virtualenvwrapper.sh(每台机子的位置不一样，可以通过find命令找到)
```

修改后使之立即生效(也可以重启终端使之生效)：

```
source ~/.bash_profile
```



#### Windows 下：

```
pip install virtualenv virtualenvwrapper-win
```

【可选】Windows下默认虚拟环境是放在用户名下面的Envs中的，与桌面，我的文档，下载等文件夹在一块的。更改方法：计算机，属性，高级系统设置，环境变量，添加WORKON_HOME，如图（windows 10 环境变量设置截图）：

![](/1.png)

#### 虚拟环境使用方法：

- **mkvirtualenv django：创建运行环境django**

- **workon django: 工作在 django环境 或 从其它环境切换到 django环境**

- **deactivate**: 退出终端环境

- **其它的：**

- **rmvirtualenv** ENV：删除运行环境ENV

- **mkproject** mic：创建mic项目和运行环境mic

- **mktmpenv**：创建临时运行环境

- **lsvirtualenv**: 列出可用的运行环境

- **lssitepackages**: 列出当前环境安装了的包

  ​




### 安装Django框架

- pip install django==1.11.7

- 测试django是否已经安装好

  - 进入python shell

    ```python
    import django
    django.get_version()
    ```

- pip list 显示当前python环境中的所有的库

- pip freeze 显示当前python环境中的除系统内置库外的所有第三方库

### 创建HelloDJango项目

- 开启一个django项目 django-admin startproject day01_HelloDjango
- 测试django项目环境 python manage.py runserver
  - python manage.py runserver 0.0.0.0:8000 表示允许本机所有的IP被外网访问
  - python manage.py runserver 9000 使用本机运行，但端口是9000
- 开启自己的App
  - python manage.py startapp App



### Django的项目结构

1. manage.py
   - 管理整个项目
2. XXX/settings.py  
   - 项目配置文件
3. XXX/urls.py
   - 路由器，接收用户请求，分发给视图函数（控制器）
4. XXX/wsgi.py
   - 网关接口，通常用在线上环境部署（开发过程中不会接触）

### settings.py

1. DEBUG 是否打开DEBUG
2. ALLOWED_HOSTS 允许访问的主机
3. INSTALLED_APPS   安装了的应用 
4. DATABASES   数据库配置
5. LANGUAGE_CODE 中文 zh-hans
6. TIME_ZONE  中国 Asia/Shanghai



### Pycharm安装

1. 解压
2. 目录结构中会有  bin
3. 进入bin
4. bin 中pycharm.sh
5. 执行 ./pycharm.sh
6. 如果想在终端中的任何位置运行，那就配置到环境变量中



### 创建数据库

- 创建更改的文件
  - python manage.py makemigrations
- 将生成的py文件应用到数据库
  - python manage.py migrate
- 清空数据库
  - python manage.py flush
- 导入导出数据
  - python manage.py dumpdata appname > appname.json
  - python manage.py loaddata appname.json

### 创建视图

- 需要配置到工程的配置文件中settings中的INSTALLED_APPS
- views中定义函数，接收request，返回response
- 在urls中配置路由规则
  - 在根urls中配置（管理麻烦，配置简单）
  - 在App中创建自己的urls，在urls中书写规则，将urls配置到工程urls中
- 创建模板目录，在views返回时调用模板的渲染
- 变更数据库
  - 在settings中配置数据库信息



# Django请求流程

- 进来的请求转入/index/。
- Django 通过在 ROOT_URLCONF 配置来决定根 URLconf。
- Django 在 URLconf 中的所有 URL 模式中，查找第一个匹配 /index/ 的条目。
- 如果找到匹配，将调用相应的视图函数。
- 视图函数返回一个 HttpResponse。
- Django 转换 HttpResponse 为一个适合的 HTTP response， 以 Web page 显示出来。



# 设计一个小项目

### 需求分析

- 本示例完成“班级-学生”信息的维护，需要存储两种数据：班级、学生
- 班级表结构设计：
  - 表名：Grade
  - 班级名称：g_name
  - 班级人数：g_num
- 学生表结构设计：
  - 表名：Student
  - 学生姓名：s_name
  - 学生性别：s_gender
  - 所属班级：s_grade
- 班级-学生的关系为一对多

### 数据库配置

- 在settings.py文件中，通过DATABASES项进行数据库设置
- django支持的数据库包括：sqlite、mysql等主流数据库
- Django默认使用SQLite数据库

### 创建应用

- 在一个项目中可以创建一到多个应用，每个应用进行一种业务处理
- 创建应用的命令：

```
python manage.py startapp day1_hello_django
```

- 应用的目录结构如下图

![](/django项目目录结构.png)

### 定义模型类

- 有一个数据表，就有一个模型类与之对应
- 打开models.py文件，定义模型类
- 引入包from django.db import models
- 模型类继承自models.Model类
- **说明：不需要定义主键列，在生成时会自动添加，并且值为自动增长**
- 当输出对象时，会调用对象的str方法

```python
from django.db import models

class Grade(models.Model):
    g_name = models.CharField(max_length=20, db_column="班级名称")
    g_num = models.IntegerField(default=30)
    g_crete_date = models.DateTimeField(auto_now=True)

class Student(models.Model):
    s_name = models.CharField(max_length=20, db_column="姓名")
    s_age = models.IntegerField(default=20, db_column="年龄")
    s_sex = models.BooleanField(default=True)
    s_birthday = models.DateTimeField()
    s_grade = models.ForeignKey(Grade)

    class Meta:
        ordering = ["-s_age"]
        # 为数据库设置别名
        verbose_name = "学生表"
    	verbose_name_plural = "学生表"
        
    def _ _str_ _(self):
        return "%d" % self.pk
```

### 生成数据表

- 激活模型：编辑settings.py文件，将booktest应用加入到installed_apps中

  ![1531115052424](/注册app.png)

- 生成迁移文件：根据模型类生成sql语句

```
python manage.py makemigrations
```

- 迁移文件被生成到应用的migrations目录

![1531115146872](/迁移文件.png)

- 执行迁移：执行sql语句生成数据表

```
python manage.py migrate
```

### 测试数据操作

- 进入python shell，进行简单的模型API练习

```
python manage.py shell
```

- 进入shell后提示如下：

![](/进入django shell.png)

- 引入需要的包：

```
from App.models import Grade,Student
```

- 查询所有班级信息：

```
Grade.objects.all()
```

- 新建班级信息：

```
grade = Grade()
grade.g_name = "深圳python1805班"
grade.g_num = 40
grade.save()
```

- 查找班级信息：

```
grade = Grade.objects.get(pk=1)
```

- 输出班级信息：

```
grade
grade.id
grade.g_name
```

- 修改班级信息：

```
grade.g_name="大神班"
grade.save()
```

- 删除班级信息：

```
grade.delete()
```

### 关联对象的操作

- 对于Student可以按照上面的操作方式进行
- 添加，注意添加关联对象

```
s=Student()
s.s_name='张三'
s.s_sex=True
s.scontent='爱好打篮球'
# 注意grade为Grade的实例，上面我们已经删除了，这里需要重新创建
s.sclass=grade
s.save()
```

### 运行项目

```
python manage.py runserver ip:port
```



# 项目主要部分

### 视图

- 在django中，视图的作用是对路由转发过来的url进行处理
- 视图函数接收的第一个参数是request对象，request对象中包含了请求的信息
- 视图函数写每个app下的views.py文件中

```
from django.shortcuts import render
from django.http import HttpResponse

# Create your views here.

def index(request):
    return HttpResponse("Hello Django")
```

注意：视图函数的第一个参数必须是request，返回必须调用django的定义的方法规范。

### 路由

- 在视图函数写完后，要编写相应的url规则，这样当我们在浏览器上输入网址的时候才能转到相应的视图函数处理逻辑
- 只定义路径部分，不定义域名
- 路由函数的url部分遵循正则的书写方式
- 路由规则由两部分必须指定的参数和其他可选参数组成

```
url(r'^index/', App.index, name="index"),
```

注：每次定义完路由规则，在代码的末尾添加逗号

- 在编写路由规则之前必须导入相应的视图
- 在组织项目时，将app和项目的路由分离



### 模板

- 模板是HTML文件，通过占位符来传递视图函数的数据

- 每个app目录下都可以创建templates的文件夹，django会自动从这些app里寻找相应的模板

  

##### 定义模板

定义index.html模板文件

```
<!DOCTYPE html>
<html>
<head>
  <title>首页</title>
</head>
<body>
<h1>学生列表</h1>
<ul>
{%for student in students%}
<li>
  {{student.s_name}}
</li>
{%endfor%}
</ul>
</body>
</html>
```

定义detail.html模板

```
<!DOCTYPE html>
<html>
<head>
  <title>详情页</title>
</head>
<body>
<h1>学生详情</h1>
<ul>
<li>
  {{student.s_name}}
  {{student.s_gender}}
  {{student.s_content}}
</li>
</ul>
</body>
</html>
```

##### 使用模板

- 定义视图

```
def index(request):
    students = StudentInfo.objects.all()
    return render(request, "index.html", {"students":students})

def index_page(request, id):
    student = StudentInfo.objects.get(pk=id)
    return render(request, "detail.html", {"student":student})
```

- 定义路由

```
url(r'index/$', class_view.index, name="index"),
url(r'index/(\d+)/$', class_view.index_page, name="index_page"),
```

- 运行项目
  - python manage.py runserver
------------------------------------------------------------------------------------------------------------------------
<p><img alt="Alt text" src="/static/images/django_blog/01.jpg" /></p>
<hr />
<p>typora-copy-images-to: images
typora-root-url: images</p>
<hr />
<h1 id="django是个啥">Django是个啥</h1>
<p>​   最初是被开发来用于管理劳伦斯出版集团旗下的一些以新闻内容为主的网站的。并于2005年7月在BSD许可证下发布。这套框架是以比利时的吉普赛爵士吉他手Django Reinhardt来命名的。</p>
<p>​   Django的主要目标是使得开发复杂的、数据库驱动的网站变得简单。Django注重组件的重用性和“可插拔性”，敏捷开发和DRY法则（Don't Repeat Yourself）。在Django中Python被普遍使用，甚至包括配置文件和数据模型。</p>
<ul>
<li>
<p>由 Python 开发的一个免费的开源网站框架，可以用于快速搭建高性能，优雅的网站</p>
</li>
<li>
<p>Django 中提供了开发网站经常用到的模块，常见的代码都为你写好了</p>
</li>
<li>
<p>Django 提供了通用Web开发模式的高度抽象，提供了频繁进行的编程作业的快速解决方法，以及为“如何解决问题”提供了清晰明了的约定。</p>
</li>
<li>
<p>Django的理念是DRY(Don't Repeat Yourself)来鼓励快速开发！</p>
</li>
</ul>
<h1 id="开发环境">开发环境</h1>
<p>Ubuntu + Python3  + Django + PyCharm</p>
<h1 id="ubuntu系统和命令介绍">Ubuntu系统和命令介绍</h1>
<h3 id="系统设置">系统设置</h3>
<h3 id="常用命令">常用命令</h3>
<ul>
<li>cd</li>
<li>ls</li>
<li>cp</li>
<li>mv</li>
<li>rm</li>
<li>mkdir</li>
<li>pwd</li>
<li>touch</li>
<li>cat</li>
<li>history</li>
<li>ps</li>
<li>ps -aux</li>
<li>kill </li>
<li>kill -9 pid</li>
<li>su/sudo</li>
<li>chmod</li>
<li>grep</li>
<li>which</li>
<li>whereis</li>
<li>ifconfig</li>
<li>netstat</li>
<li>netstat -antp 查看网络连接状态</li>
<li>wget</li>
<li>ssh username@host -p</li>
<li>ssh-keygen</li>
<li>tar</li>
<li>tar -zxvf 解压缩</li>
<li>tar -czvf 压缩</li>
<li>du</li>
<li>du -sh</li>
<li>df</li>
<li>df -h</li>
<li>apt install</li>
<li>apt update</li>
<li>apt remove</li>
<li>apt autoremove</li>
<li>dpkg -i</li>
<li>vi/vim</li>
</ul>
<h1 id="bscs">BS/CS</h1>
<p>​        C/S 架构即“客户端-服务器” 架构。这里的“客户端”可以是有 GUI （图形用户界面）的定制软件，也可以是浏览器，甚至可以是通过 SSH 访问服务器的命令行脚本。只要是客户端通过访问服务器调取计算或者存储资源的，统统都是 C/S 架构。所谓的 Browser-Server 架构其实是 C/S 架构的一种特殊的实现形式，而不是其对立面。</p>
<ul>
<li>C/S:</li>
<li>C: Client</li>
<li>S: Server</li>
<li>B/S</li>
<li>B: Browser</li>
<li>S: Server       </li>
</ul>
<h1 id="mvcmvt">MVC/MVT</h1>
<ul>
<li>
<p>MVC</p>
</li>
<li>
<p>M: Model（模型）</p>
</li>
<li>V: View（视图）</li>
<li>
<p>C: Controller（控制器）</p>
</li>
<li>
<p>MVT</p>
</li>
<li>
<p>M: Model（模型），主要封装对数据库层的访问，对数据库中的数据进行增、删、改、查操作。</p>
</li>
<li>
<p>V: View（视图），用于封装结果，生成页面展示的html内容。</p>
</li>
<li>
<p>T: Template（模板），用于接收请求，处理业务逻辑，与Model和View交互，返回结果。</p>
<p>​</p>
</li>
</ul>
<h1 id="hellodjango项目">HelloDjango项目</h1>
<h3 id="创建虚拟环境">创建虚拟环境</h3>
<h3 id="虚拟环境的优点">虚拟环境的优点</h3>
<ul>
<li>使不同应用开发环境独立</li>
<li>环境升级不影响其他应用，也不会影响全局的python环境</li>
<li>可以防止系统中出现包管理混乱和版本冲突</li>
</ul>
<p>开发会用 virtualenv 来管理多个开发环境</p>
<h4 id="linuxmacos-下">Linux/MacOS 下</h4>
<p>virtualenvwrapper 使得virtualenv变得更好用，所以我们一起安装了</p>
<div class="codehilite"><pre><span></span>(sudo) pip install virtualenv virtualenvwrapper
</pre></div>


<p>修改~/.bash_profile或其它环境变量相关文件(如 .bashrc 或用 ZSH 之后的 .zshrc)，添加以下语句</p>
<div class="codehilite"><pre><span></span>export WORKON_HOME=$HOME/.virtualenvs
export PROJECT_HOME=$HOME/workspace
source /usr/local/bin/virtualenvwrapper.sh(每台机子的位置不一样，可以通过find命令找到)
</pre></div>


<p>修改后使之立即生效(也可以重启终端使之生效)：</p>
<div class="codehilite"><pre><span></span>source ~/.bash_profile
</pre></div>


<h4 id="windows-下">Windows 下：</h4>
<div class="codehilite"><pre><span></span>pip install virtualenv virtualenvwrapper-win
</pre></div>


<p>【可选】Windows下默认虚拟环境是放在用户名下面的Envs中的，与桌面，我的文档，下载等文件夹在一块的。更改方法：计算机，属性，高级系统设置，环境变量，添加WORKON_HOME，如图（windows 10 环境变量设置截图）：</p>
<p><img alt="" src="/1.png" /></p>
<h4 id="虚拟环境使用方法">虚拟环境使用方法：</h4>
<ul>
<li>
<p><strong>mkvirtualenv django：创建运行环境django</strong></p>
</li>
<li>
<p><strong>workon django: 工作在 django环境 或 从其它环境切换到 django环境</strong></p>
</li>
<li>
<p><strong>deactivate</strong>: 退出终端环境</p>
</li>
<li>
<p><strong>其它的：</strong></p>
</li>
<li>
<p><strong>rmvirtualenv</strong> ENV：删除运行环境ENV</p>
</li>
<li>
<p><strong>mkproject</strong> mic：创建mic项目和运行环境mic</p>
</li>
<li>
<p><strong>mktmpenv</strong>：创建临时运行环境</p>
</li>
<li>
<p><strong>lsvirtualenv</strong>: 列出可用的运行环境</p>
</li>
<li>
<p><strong>lssitepackages</strong>: 列出当前环境安装了的包</p>
</li>
</ul>
<p>​</p>
<h3 id="安装django框架">安装Django框架</h3>
<ul>
<li>
<p>pip install django==1.11.7</p>
</li>
<li>
<p>测试django是否已经安装好</p>
</li>
<li>
<p>进入python shell</p>
<p><code>python
import django
django.get_version()</code></p>
</li>
<li>
<p>pip list 显示当前python环境中的所有的库</p>
</li>
<li>
<p>pip freeze 显示当前python环境中的除系统内置库外的所有第三方库</p>
</li>
</ul>
<h3 id="创建hellodjango项目">创建HelloDJango项目</h3>
<ul>
<li>开启一个django项目 django-admin startproject day01_HelloDjango</li>
<li>测试django项目环境 python manage.py runserver</li>
<li>python manage.py runserver 0.0.0.0:8000 表示允许本机所有的IP被外网访问</li>
<li>python manage.py runserver 9000 使用本机运行，但端口是9000</li>
<li>开启自己的App</li>
<li>python manage.py startapp App</li>
</ul>
<h3 id="django的项目结构">Django的项目结构</h3>
<ol>
<li>manage.py</li>
<li>管理整个项目</li>
<li>XXX/settings.py  </li>
<li>项目配置文件</li>
<li>XXX/urls.py</li>
<li>路由器，接收用户请求，分发给视图函数（控制器）</li>
<li>XXX/wsgi.py</li>
<li>网关接口，通常用在线上环境部署（开发过程中不会接触）</li>
</ol>
<h3 id="settingspy">settings.py</h3>
<ol>
<li>DEBUG 是否打开DEBUG</li>
<li>ALLOWED_HOSTS 允许访问的主机</li>
<li>INSTALLED_APPS   安装了的应用 </li>
<li>DATABASES   数据库配置</li>
<li>LANGUAGE_CODE 中文 zh-hans</li>
<li>TIME_ZONE  中国 Asia/Shanghai</li>
</ol>
<h3 id="pycharm安装">Pycharm安装</h3>
<ol>
<li>解压</li>
<li>目录结构中会有  bin</li>
<li>进入bin</li>
<li>bin 中pycharm.sh</li>
<li>执行 ./pycharm.sh</li>
<li>如果想在终端中的任何位置运行，那就配置到环境变量中</li>
</ol>
<h3 id="创建数据库">创建数据库</h3>
<ul>
<li>创建更改的文件</li>
<li>python manage.py makemigrations</li>
<li>将生成的py文件应用到数据库</li>
<li>python manage.py migrate</li>
<li>清空数据库</li>
<li>python manage.py flush</li>
<li>导入导出数据</li>
<li>python manage.py dumpdata appname &gt; appname.json</li>
<li>python manage.py loaddata appname.json</li>
</ul>
<h3 id="创建视图">创建视图</h3>
<ul>
<li>需要配置到工程的配置文件中settings中的INSTALLED_APPS</li>
<li>views中定义函数，接收request，返回response</li>
<li>在urls中配置路由规则</li>
<li>在根urls中配置（管理麻烦，配置简单）</li>
<li>在App中创建自己的urls，在urls中书写规则，将urls配置到工程urls中</li>
<li>创建模板目录，在views返回时调用模板的渲染</li>
<li>变更数据库</li>
<li>在settings中配置数据库信息</li>
</ul>
<h1 id="django请求流程">Django请求流程</h1>
<ul>
<li>进来的请求转入/index/。</li>
<li>Django 通过在 ROOT_URLCONF 配置来决定根 URLconf。</li>
<li>Django 在 URLconf 中的所有 URL 模式中，查找第一个匹配 /index/ 的条目。</li>
<li>如果找到匹配，将调用相应的视图函数。</li>
<li>视图函数返回一个 HttpResponse。</li>
<li>Django 转换 HttpResponse 为一个适合的 HTTP response， 以 Web page 显示出来。</li>
</ul>
<h1 id="设计一个小项目">设计一个小项目</h1>
<h3 id="需求分析">需求分析</h3>
<ul>
<li>本示例完成“班级-学生”信息的维护，需要存储两种数据：班级、学生</li>
<li>班级表结构设计：</li>
<li>表名：Grade</li>
<li>班级名称：g_name</li>
<li>班级人数：g_num</li>
<li>学生表结构设计：</li>
<li>表名：Student</li>
<li>学生姓名：s_name</li>
<li>学生性别：s_gender</li>
<li>所属班级：s_grade</li>
<li>班级-学生的关系为一对多</li>
</ul>
<h3 id="数据库配置">数据库配置</h3>
<ul>
<li>在settings.py文件中，通过DATABASES项进行数据库设置</li>
<li>django支持的数据库包括：sqlite、mysql等主流数据库</li>
<li>Django默认使用SQLite数据库</li>
</ul>
<h3 id="创建应用">创建应用</h3>
<ul>
<li>在一个项目中可以创建一到多个应用，每个应用进行一种业务处理</li>
<li>创建应用的命令：</li>
</ul>
<div class="codehilite"><pre><span></span>python manage.py startapp day1_hello_django
</pre></div>


<ul>
<li>应用的目录结构如下图</li>
</ul>
<p><img alt="" src="/django项目目录结构.png" /></p>
<h3 id="定义模型类">定义模型类</h3>
<ul>
<li>有一个数据表，就有一个模型类与之对应</li>
<li>打开models.py文件，定义模型类</li>
<li>引入包from django.db import models</li>
<li>模型类继承自models.Model类</li>
<li><strong>说明：不需要定义主键列，在生成时会自动添加，并且值为自动增长</strong></li>
<li>当输出对象时，会调用对象的str方法</li>
</ul>
<div class="codehilite"><pre><span></span><span class="kn">from</span> <span class="nn">django.db</span> <span class="kn">import</span> <span class="n">models</span>

<span class="k">class</span> <span class="nc">Grade</span><span class="p">(</span><span class="n">models</span><span class="o">.</span><span class="n">Model</span><span class="p">):</span>
    <span class="n">g_name</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">CharField</span><span class="p">(</span><span class="n">max_length</span><span class="o">=</span><span class="mi">20</span><span class="p">,</span> <span class="n">db_column</span><span class="o">=</span><span class="s2">&quot;班级名称&quot;</span><span class="p">)</span>
    <span class="n">g_num</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">IntegerField</span><span class="p">(</span><span class="n">default</span><span class="o">=</span><span class="mi">30</span><span class="p">)</span>
    <span class="n">g_crete_date</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">DateTimeField</span><span class="p">(</span><span class="n">auto_now</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>

<span class="k">class</span> <span class="nc">Student</span><span class="p">(</span><span class="n">models</span><span class="o">.</span><span class="n">Model</span><span class="p">):</span>
    <span class="n">s_name</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">CharField</span><span class="p">(</span><span class="n">max_length</span><span class="o">=</span><span class="mi">20</span><span class="p">,</span> <span class="n">db_column</span><span class="o">=</span><span class="s2">&quot;姓名&quot;</span><span class="p">)</span>
    <span class="n">s_age</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">IntegerField</span><span class="p">(</span><span class="n">default</span><span class="o">=</span><span class="mi">20</span><span class="p">,</span> <span class="n">db_column</span><span class="o">=</span><span class="s2">&quot;年龄&quot;</span><span class="p">)</span>
    <span class="n">s_sex</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">BooleanField</span><span class="p">(</span><span class="n">default</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
    <span class="n">s_birthday</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">DateTimeField</span><span class="p">()</span>
    <span class="n">s_grade</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">ForeignKey</span><span class="p">(</span><span class="n">Grade</span><span class="p">)</span>

    <span class="k">class</span> <span class="nc">Meta</span><span class="p">:</span>
        <span class="n">ordering</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&quot;-s_age&quot;</span><span class="p">]</span>
        <span class="c1"># 为数据库设置别名</span>
        <span class="n">verbose_name</span> <span class="o">=</span> <span class="s2">&quot;学生表&quot;</span>
        <span class="n">verbose_name_plural</span> <span class="o">=</span> <span class="s2">&quot;学生表&quot;</span>

    <span class="k">def</span> <span class="nf">_</span> <span class="n">_str_</span> <span class="n">_</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">return</span> <span class="s2">&quot;</span><span class="si">%d</span><span class="s2">&quot;</span> <span class="o">%</span> <span class="bp">self</span><span class="o">.</span><span class="n">pk</span>
</pre></div>


<h3 id="生成数据表">生成数据表</h3>
<ul>
<li>激活模型：编辑settings.py文件，将booktest应用加入到installed_apps中</li>
</ul>
<p><img alt="1531115052424" src="/注册app.png" /></p>
<ul>
<li>生成迁移文件：根据模型类生成sql语句</li>
</ul>
<div class="codehilite"><pre><span></span>python manage.py makemigrations
</pre></div>


<ul>
<li>迁移文件被生成到应用的migrations目录</li>
</ul>
<p><img alt="1531115146872" src="/迁移文件.png" /></p>
<ul>
<li>执行迁移：执行sql语句生成数据表</li>
</ul>
<div class="codehilite"><pre><span></span>python manage.py migrate
</pre></div>


<h3 id="测试数据操作">测试数据操作</h3>
<ul>
<li>进入python shell，进行简单的模型API练习</li>
</ul>
<div class="codehilite"><pre><span></span>python manage.py shell
</pre></div>


<ul>
<li>进入shell后提示如下：</li>
</ul>
<p>![](/进入django shell.png)</p>
<ul>
<li>引入需要的包：</li>
</ul>
<div class="codehilite"><pre><span></span><span class="kn">from</span> <span class="nn">App.models</span> <span class="kn">import</span> <span class="n">Grade</span><span class="p">,</span><span class="n">Student</span>
</pre></div>


<ul>
<li>查询所有班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>Grade.objects.all()
</pre></div>


<ul>
<li>新建班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>grade = Grade()
grade.g_name = &quot;深圳python1805班&quot;
grade.g_num = 40
grade.save()
</pre></div>


<ul>
<li>查找班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>grade = Grade.objects.get(pk=1)
</pre></div>


<ul>
<li>输出班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>grade
grade.id
grade.g_name
</pre></div>


<ul>
<li>修改班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>grade.g_name=&quot;大神班&quot;
grade.save()
</pre></div>


<ul>
<li>删除班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>grade.delete()
</pre></div>


<h3 id="关联对象的操作">关联对象的操作</h3>
<ul>
<li>对于Student可以按照上面的操作方式进行</li>
<li>添加，注意添加关联对象</li>
</ul>
<div class="codehilite"><pre><span></span>s=Student()
s.s_name=&#39;张三&#39;
s.s_sex=True
s.scontent=&#39;爱好打篮球&#39;
# 注意grade为Grade的实例，上面我们已经删除了，这里需要重新创建
s.sclass=grade
s.save()
</pre></div>


<h3 id="运行项目">运行项目</h3>
<div class="codehilite"><pre><span></span>python manage.py runserver ip:port
</pre></div>


<h1 id="项目主要部分">项目主要部分</h1>
<h3 id="视图">视图</h3>
<ul>
<li>在django中，视图的作用是对路由转发过来的url进行处理</li>
<li>视图函数接收的第一个参数是request对象，request对象中包含了请求的信息</li>
<li>视图函数写每个app下的views.py文件中</li>
</ul>
<div class="codehilite"><pre><span></span><span class="kn">from</span> <span class="nn">django.shortcuts</span> <span class="kn">import</span> <span class="n">render</span>
<span class="kn">from</span> <span class="nn">django.http</span> <span class="kn">import</span> <span class="n">HttpResponse</span>

<span class="c1"># Create your views here.</span>

<span class="k">def</span> <span class="nf">index</span><span class="p">(</span><span class="n">request</span><span class="p">):</span>
    <span class="k">return</span> <span class="n">HttpResponse</span><span class="p">(</span><span class="s2">&quot;Hello Django&quot;</span><span class="p">)</span>
</pre></div>


<p>注意：视图函数的第一个参数必须是request，返回必须调用django的定义的方法规范。</p>
<h3 id="路由">路由</h3>
<ul>
<li>在视图函数写完后，要编写相应的url规则，这样当我们在浏览器上输入网址的时候才能转到相应的视图函数处理逻辑</li>
<li>只定义路径部分，不定义域名</li>
<li>路由函数的url部分遵循正则的书写方式</li>
<li>路由规则由两部分必须指定的参数和其他可选参数组成</li>
</ul>
<div class="codehilite"><pre><span></span>url(r&#39;^index/&#39;, App.index, name=&quot;index&quot;),
</pre></div>


<p>注：每次定义完路由规则，在代码的末尾添加逗号</p>
<ul>
<li>在编写路由规则之前必须导入相应的视图</li>
<li>在组织项目时，将app和项目的路由分离</li>
</ul>
<h3 id="模板">模板</h3>
<ul>
<li>
<p>模板是HTML文件，通过占位符来传递视图函数的数据</p>
</li>
<li>
<p>每个app目录下都可以创建templates的文件夹，django会自动从这些app里寻找相应的模板</p>
</li>
</ul>
<h5 id="定义模板">定义模板</h5>
<p>定义index.html模板文件</p>
<div class="codehilite"><pre><span></span><span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="p">&lt;</span><span class="nt">html</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">title</span><span class="p">&gt;</span>首页<span class="p">&lt;/</span><span class="nt">title</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">h1</span><span class="p">&gt;</span>学生列表<span class="p">&lt;/</span><span class="nt">h1</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">ul</span><span class="p">&gt;</span>
<span class="cp">{%</span><span class="k">for</span> <span class="nv">student</span> <span class="k">in</span> <span class="nv">students</span><span class="cp">%}</span>
<span class="p">&lt;</span><span class="nt">li</span><span class="p">&gt;</span>
  <span class="cp">{{</span><span class="nv">student.s_name</span><span class="cp">}}</span>
<span class="p">&lt;/</span><span class="nt">li</span><span class="p">&gt;</span>
<span class="cp">{%</span><span class="k">endfor</span><span class="cp">%}</span>
<span class="p">&lt;/</span><span class="nt">ul</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span>
</pre></div>


<p>定义detail.html模板</p>
<div class="codehilite"><pre><span></span><span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="p">&lt;</span><span class="nt">html</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">title</span><span class="p">&gt;</span>详情页<span class="p">&lt;/</span><span class="nt">title</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">h1</span><span class="p">&gt;</span>学生详情<span class="p">&lt;/</span><span class="nt">h1</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">ul</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">li</span><span class="p">&gt;</span>
  <span class="cp">{{</span><span class="nv">student.s_name</span><span class="cp">}}</span>
  <span class="cp">{{</span><span class="nv">student.s_gender</span><span class="cp">}}</span>
  <span class="cp">{{</span><span class="nv">student.s_content</span><span class="cp">}}</span>
<span class="p">&lt;/</span><span class="nt">li</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">ul</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span>
</pre></div>


<h5 id="使用模板">使用模板</h5>
<ul>
<li>定义视图</li>
</ul>
<div class="codehilite"><pre><span></span>def index(request):
    students = StudentInfo.objects.all()
    return render(request, &quot;index.html&quot;, {&quot;students&quot;:students})

def index_page(request, id):
    student = StudentInfo.objects.get(pk=id)
    return render(request, &quot;detail.html&quot;, {&quot;student&quot;:student})
</pre></div>


<ul>
<li>定义路由</li>
</ul>
<div class="codehilite"><pre><span></span>url(r&#39;index/$&#39;, class_view.index, name=&quot;index&quot;),
url(r&#39;index/(\d+)/$&#39;, class_view.index_page, name=&quot;index_page&quot;),
</pre></div>


<ul>
<li>运行项目</li>
<li>python manage.py runserver</li>
</ul>
<div class="toc">
<ul>
<li><a href="#django是个啥">Django是个啥</a></li>
<li><a href="#开发环境">开发环境</a></li>
<li><a href="#ubuntu系统和命令介绍">Ubuntu系统和命令介绍</a><ul>
<li><a href="#系统设置">系统设置</a></li>
<li><a href="#常用命令">常用命令</a></li>
</ul>
</li>
<li><a href="#bscs">BS/CS</a></li>
<li><a href="#mvcmvt">MVC/MVT</a></li>
<li><a href="#hellodjango项目">HelloDjango项目</a><ul>
<li><a href="#创建虚拟环境">创建虚拟环境</a></li>
<li><a href="#虚拟环境的优点">虚拟环境的优点</a><ul>
<li><a href="#linuxmacos-下">Linux/MacOS 下</a></li>
<li><a href="#windows-下">Windows 下：</a></li>
<li><a href="#虚拟环境使用方法">虚拟环境使用方法：</a></li>
</ul>
</li>
<li><a href="#安装django框架">安装Django框架</a></li>
<li><a href="#创建hellodjango项目">创建HelloDJango项目</a></li>
<li><a href="#django的项目结构">Django的项目结构</a></li>
<li><a href="#settingspy">settings.py</a></li>
<li><a href="#pycharm安装">Pycharm安装</a></li>
<li><a href="#创建数据库">创建数据库</a></li>
<li><a href="#创建视图">创建视图</a></li>
</ul>
</li>
<li><a href="#django请求流程">Django请求流程</a></li>
<li><a href="#设计一个小项目">设计一个小项目</a><ul>
<li><a href="#需求分析">需求分析</a></li>
<li><a href="#数据库配置">数据库配置</a></li>
<li><a href="#创建应用">创建应用</a></li>
<li><a href="#定义模型类">定义模型类</a></li>
<li><a href="#生成数据表">生成数据表</a></li>
<li><a href="#测试数据操作">测试数据操作</a></li>
<li><a href="#关联对象的操作">关联对象的操作</a></li>
<li><a href="#运行项目">运行项目</a></li>
</ul>
</li>
<li><a href="#项目主要部分">项目主要部分</a><ul>
<li><a href="#视图">视图</a></li>
<li><a href="#路由">路由</a></li>
<li><a href="#模板">模板</a><ul>
<li><a href="#定义模板">定义模板</a></li>
<li><a href="#使用模板">使用模板</a></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>

[pid: 24644|app: 0|req: 139/342] 113.92.93.76 () {44 vars in 942 bytes} [Wed Aug  1 13:59:15 2018] GET /post/3/ => generated 35800 bytes in 495 msecs (HTTP/1.1 200) 5 headers in 279 bytes (1 switches on core 1)
Not Found: /1.png
[pid: 24646|app: 0|req: 71/343] 113.92.93.76 () {44 vars in 908 bytes} [Wed Aug  1 13:59:19 2018] GET /1.png => generated 3357 bytes in 4 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 1)
Not Found: /注册app.png
[pid: 24645|app: 0|req: 80/344] 113.92.93.76 () {44 vars in 936 bytes} [Wed Aug  1 13:59:19 2018] GET /%E6%B3%A8%E5%86%8Capp.png => generated 3393 bytes in 4 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 0)
Not Found: /迁移文件.png
[pid: 24647|app: 0|req: 43/345] 113.92.93.76 () {44 vars in 954 bytes} [Wed Aug  1 13:59:20 2018] GET /%E8%BF%81%E7%A7%BB%E6%96%87%E4%BB%B6.png => generated 3414 bytes in 3 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 1)
Not Found: /django项目目录结构.png
[pid: 24647|app: 0|req: 44/346] 113.92.93.76 () {44 vars in 990 bytes} [Wed Aug  1 13:59:21 2018] GET /django%E9%A1%B9%E7%9B%AE%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84.png => generated 3462 bytes in 4 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24647|app: 0|req: 45/347] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug  1 14:39:59 2018] GET / => generated 10360 bytes in 36 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
[pid: 24646|app: 0|req: 72/348] 139.162.83.10 () {34 vars in 385 bytes} [Wed Aug  1 14:52:45 2018] GET / => generated 10360 bytes in 26 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 1)
[pid: 24644|app: 0|req: 140/349] 113.92.93.76 () {46 vars in 1010 bytes} [Wed Aug  1 15:24:59 2018] GET /admin/blog/ => generated 2957 bytes in 25 msecs (HTTP/1.1 200) 6 headers in 227 bytes (1 switches on core 0)
[pid: 24644|app: 0|req: 141/350] 113.92.93.76 () {46 vars in 1023 bytes} [Wed Aug  1 15:25:02 2018] GET /admin/blog/category/ => generated 5316 bytes in 75 msecs (HTTP/1.1 200) 7 headers in 381 bytes (1 switches on core 1)
[pid: 24644|app: 0|req: 142/351] 113.92.93.76 () {44 vars in 901 bytes} [Wed Aug  1 15:25:02 2018] GET /admin/jsi18n/ => generated 7682 bytes in 7 msecs (HTTP/1.1 200) 4 headers in 115 bytes (1 switches on core 0)
[pid: 24646|app: 0|req: 73/352] 113.92.93.76 () {46 vars in 1040 bytes} [Wed Aug  1 15:25:07 2018] GET /admin/blog/category/add/ => generated 3837 bytes in 26 msecs (HTTP/1.1 200) 7 headers in 381 bytes (1 switches on core 0)
[pid: 24646|app: 0|req: 74/353] 113.92.93.76 () {44 vars in 905 bytes} [Wed Aug  1 15:25:08 2018] GET /admin/jsi18n/ => generated 7682 bytes in 5 msecs (HTTP/1.1 200) 4 headers in 115 bytes (1 switches on core 1)
[pid: 24644|app: 0|req: 143/354] 113.92.93.76 () {54 vars in 1304 bytes} [Wed Aug  1 15:25:18 2018] POST /admin/blog/category/add/ => generated 0 bytes in 8 msecs (HTTP/1.1 302) 8 headers in 512 bytes (1 switches on core 0)
[pid: 24647|app: 0|req: 46/355] 113.92.93.76 () {48 vars in 1288 bytes} [Wed Aug  1 15:25:19 2018] GET /admin/blog/category/ => generated 5717 bytes in 43 msecs (HTTP/1.1 200) 8 headers in 465 bytes (1 switches on core 0)
[pid: 24646|app: 0|req: 75/356] 113.92.93.76 () {44 vars in 901 bytes} [Wed Aug  1 15:25:22 2018] GET /admin/jsi18n/ => generated 7682 bytes in 6 msecs (HTTP/1.1 200) 4 headers in 115 bytes (1 switches on core 1)
[pid: 24644|app: 0|req: 144/357] 113.92.93.76 () {46 vars in 1040 bytes} [Wed Aug  1 15:25:29 2018] GET /admin/blog/category/add/ => generated 3837 bytes in 23 msecs (HTTP/1.1 200) 7 headers in 381 bytes (1 switches on core 0)
[pid: 24644|app: 0|req: 145/358] 113.92.93.76 () {44 vars in 905 bytes} [Wed Aug  1 15:25:30 2018] GET /admin/jsi18n/ => generated 7682 bytes in 4 msecs (HTTP/1.1 200) 4 headers in 115 bytes (1 switches on core 1)
[pid: 24645|app: 0|req: 81/359] 113.92.93.76 () {54 vars in 1304 bytes} [Wed Aug  1 15:25:42 2018] POST /admin/blog/category/add/ => generated 0 bytes in 10 msecs (HTTP/1.1 302) 8 headers in 493 bytes (1 switches on core 0)
[pid: 24646|app: 0|req: 76/360] 113.92.93.76 () {48 vars in 1269 bytes} [Wed Aug  1 15:25:43 2018] GET /admin/blog/category/ => generated 5930 bytes in 44 msecs (HTTP/1.1 200) 8 headers in 465 bytes (1 switches on core 0)
[pid: 24644|app: 0|req: 146/361] 113.92.93.76 () {44 vars in 901 bytes} [Wed Aug  1 15:25:44 2018] GET /admin/jsi18n/ => generated 7682 bytes in 4 msecs (HTTP/1.1 200) 4 headers in 115 bytes (1 switches on core 1)
[pid: 24646|app: 0|req: 77/362] 113.92.93.76 () {46 vars in 1040 bytes} [Wed Aug  1 15:25:46 2018] GET /admin/blog/category/add/ => generated 3837 bytes in 28 msecs (HTTP/1.1 200) 7 headers in 381 bytes (1 switches on core 1)
[pid: 24645|app: 0|req: 82/363] 113.92.93.76 () {44 vars in 905 bytes} [Wed Aug  1 15:25:47 2018] GET /admin/jsi18n/ => generated 7682 bytes in 4 msecs (HTTP/1.1 200) 4 headers in 115 bytes (1 switches on core 1)
[pid: 24647|app: 0|req: 47/364] 113.92.93.76 () {54 vars in 1304 bytes} [Wed Aug  1 15:25:55 2018] POST /admin/blog/category/add/ => generated 0 bytes in 47 msecs (HTTP/1.1 302) 8 headers in 605 bytes (1 switches on core 1)
[pid: 24646|app: 0|req: 78/365] 113.92.93.76 () {48 vars in 1385 bytes} [Wed Aug  1 15:25:55 2018] GET /admin/blog/category/add/ => generated 4056 bytes in 23 msecs (HTTP/1.1 200) 8 headers in 465 bytes (1 switches on core 0)
[pid: 24645|app: 0|req: 83/366] 113.92.93.76 () {44 vars in 905 bytes} [Wed Aug  1 15:25:55 2018] GET /admin/jsi18n/ => generated 7682 bytes in 4 msecs (HTTP/1.1 200) 4 headers in 115 bytes (1 switches on core 1)
[pid: 24647|app: 0|req: 48/367] 113.92.93.76 () {54 vars in 1304 bytes} [Wed Aug  1 15:26:15 2018] POST /admin/blog/category/add/ => generated 0 bytes in 10 msecs (HTTP/1.1 302) 8 headers in 608 bytes (1 switches on core 0)
[pid: 24646|app: 0|req: 79/368] 113.92.93.76 () {48 vars in 1388 bytes} [Wed Aug  1 15:26:15 2018] GET /admin/blog/category/add/ => generated 4059 bytes in 48 msecs (HTTP/1.1 200) 8 headers in 465 bytes (1 switches on core 1)
[pid: 24645|app: 0|req: 84/369] 113.92.93.76 () {44 vars in 905 bytes} [Wed Aug  1 15:26:16 2018] GET /admin/jsi18n/ => generated 7682 bytes in 4 msecs (HTTP/1.1 200) 4 headers in 115 bytes (1 switches on core 1)
![Alt text](/static/images/django_blog/01.jpg)

---
typora-copy-images-to: images
typora-root-url: images
---

# Django是个啥

​	最初是被开发来用于管理劳伦斯出版集团旗下的一些以新闻内容为主的网站的。并于2005年7月在BSD许可证下发布。这套框架是以比利时的吉普赛爵士吉他手Django Reinhardt来命名的。

​	Django的主要目标是使得开发复杂的、数据库驱动的网站变得简单。Django注重组件的重用性和“可插拔性”，敏捷开发和DRY法则（Don't Repeat Yourself）。在Django中Python被普遍使用，甚至包括配置文件和数据模型。

- 由 Python 开发的一个免费的开源网站框架，可以用于快速搭建高性能，优雅的网站

- Django 中提供了开发网站经常用到的模块，常见的代码都为你写好了

- Django 提供了通用Web开发模式的高度抽象，提供了频繁进行的编程作业的快速解决方法，以及为“如何解决问题”提供了清晰明了的约定。

- Django的理念是DRY(Don't Repeat Yourself)来鼓励快速开发！

  

# 开发环境

Ubuntu + Python3  + Django + PyCharm



# Ubuntu系统和命令介绍

### 系统设置

### 常用命令

- cd
- ls
- cp
- mv
- rm
- mkdir
- pwd
- touch
- cat
- history
- ps
  - ps -aux
- kill 
  - kill -9 pid
- su/sudo
- chmod
- grep
- which
- whereis
- ifconfig
- netstat
  - netstat -antp 查看网络连接状态
- wget
- ssh username@host -p
  - ssh-keygen
- tar
  - tar -zxvf 解压缩
  - tar -czvf 压缩
- du
  - du -sh
- df
  - df -h
- apt install
- apt update
- apt remove
- apt autoremove
- dpkg -i
- vi/vim

# BS/CS

​        C/S 架构即“客户端-服务器” 架构。这里的“客户端”可以是有 GUI （图形用户界面）的定制软件，也可以是浏览器，甚至可以是通过 SSH 访问服务器的命令行脚本。只要是客户端通过访问服务器调取计算或者存储资源的，统统都是 C/S 架构。所谓的 Browser-Server 架构其实是 C/S 架构的一种特殊的实现形式，而不是其对立面。

- C/S:
  - C: Client
  - S: Server
- B/S
  - B: Browser
  - S: Server       

# MVC/MVT

- MVC

  - M: Model（模型）
  - V: View（视图）
  - C: Controller（控制器）

- MVT

  - M: Model（模型），主要封装对数据库层的访问，对数据库中的数据进行增、删、改、查操作。

  - V: View（视图），用于封装结果，生成页面展示的html内容。

  - T: Template（模板），用于接收请求，处理业务逻辑，与Model和View交互，返回结果。

    ​

# HelloDjango项目

### 创建虚拟环境

### 虚拟环境的优点

- 使不同应用开发环境独立
- 环境升级不影响其他应用，也不会影响全局的python环境
- 可以防止系统中出现包管理混乱和版本冲突

开发会用 virtualenv 来管理多个开发环境

#### Linux/MacOS 下

virtualenvwrapper 使得virtualenv变得更好用，所以我们一起安装了

```
(sudo) pip install virtualenv virtualenvwrapper
```

修改~/.bash_profile或其它环境变量相关文件(如 .bashrc 或用 ZSH 之后的 .zshrc)，添加以下语句

```
export WORKON_HOME=$HOME/.virtualenvs
export PROJECT_HOME=$HOME/workspace
source /usr/local/bin/virtualenvwrapper.sh(每台机子的位置不一样，可以通过find命令找到)
```

修改后使之立即生效(也可以重启终端使之生效)：

```
source ~/.bash_profile
```



#### Windows 下：

```
pip install virtualenv virtualenvwrapper-win
```

【可选】Windows下默认虚拟环境是放在用户名下面的Envs中的，与桌面，我的文档，下载等文件夹在一块的。更改方法：计算机，属性，高级系统设置，环境变量，添加WORKON_HOME，如图（windows 10 环境变量设置截图）：

![](/1.png)

#### 虚拟环境使用方法：

- **mkvirtualenv django：创建运行环境django**

- **workon django: 工作在 django环境 或 从其它环境切换到 django环境**

- **deactivate**: 退出终端环境

- **其它的：**

- **rmvirtualenv** ENV：删除运行环境ENV

- **mkproject** mic：创建mic项目和运行环境mic

- **mktmpenv**：创建临时运行环境

- **lsvirtualenv**: 列出可用的运行环境

- **lssitepackages**: 列出当前环境安装了的包

  ​




### 安装Django框架

- pip install django==1.11.7

- 测试django是否已经安装好

  - 进入python shell

    ```python
    import django
    django.get_version()
    ```

- pip list 显示当前python环境中的所有的库

- pip freeze 显示当前python环境中的除系统内置库外的所有第三方库

### 创建HelloDJango项目

- 开启一个django项目 django-admin startproject day01_HelloDjango
- 测试django项目环境 python manage.py runserver
  - python manage.py runserver 0.0.0.0:8000 表示允许本机所有的IP被外网访问
  - python manage.py runserver 9000 使用本机运行，但端口是9000
- 开启自己的App
  - python manage.py startapp App



### Django的项目结构

1. manage.py
   - 管理整个项目
2. XXX/settings.py  
   - 项目配置文件
3. XXX/urls.py
   - 路由器，接收用户请求，分发给视图函数（控制器）
4. XXX/wsgi.py
   - 网关接口，通常用在线上环境部署（开发过程中不会接触）

### settings.py

1. DEBUG 是否打开DEBUG
2. ALLOWED_HOSTS 允许访问的主机
3. INSTALLED_APPS   安装了的应用 
4. DATABASES   数据库配置
5. LANGUAGE_CODE 中文 zh-hans
6. TIME_ZONE  中国 Asia/Shanghai



### Pycharm安装

1. 解压
2. 目录结构中会有  bin
3. 进入bin
4. bin 中pycharm.sh
5. 执行 ./pycharm.sh
6. 如果想在终端中的任何位置运行，那就配置到环境变量中



### 创建数据库

- 创建更改的文件
  - python manage.py makemigrations
- 将生成的py文件应用到数据库
  - python manage.py migrate
- 清空数据库
  - python manage.py flush
- 导入导出数据
  - python manage.py dumpdata appname > appname.json
  - python manage.py loaddata appname.json

### 创建视图

- 需要配置到工程的配置文件中settings中的INSTALLED_APPS
- views中定义函数，接收request，返回response
- 在urls中配置路由规则
  - 在根urls中配置（管理麻烦，配置简单）
  - 在App中创建自己的urls，在urls中书写规则，将urls配置到工程urls中
- 创建模板目录，在views返回时调用模板的渲染
- 变更数据库
  - 在settings中配置数据库信息



# Django请求流程

- 进来的请求转入/index/。
- Django 通过在 ROOT_URLCONF 配置来决定根 URLconf。
- Django 在 URLconf 中的所有 URL 模式中，查找第一个匹配 /index/ 的条目。
- 如果找到匹配，将调用相应的视图函数。
- 视图函数返回一个 HttpResponse。
- Django 转换 HttpResponse 为一个适合的 HTTP response， 以 Web page 显示出来。



# 设计一个小项目

### 需求分析

- 本示例完成“班级-学生”信息的维护，需要存储两种数据：班级、学生
- 班级表结构设计：
  - 表名：Grade
  - 班级名称：g_name
  - 班级人数：g_num
- 学生表结构设计：
  - 表名：Student
  - 学生姓名：s_name
  - 学生性别：s_gender
  - 所属班级：s_grade
- 班级-学生的关系为一对多

### 数据库配置

- 在settings.py文件中，通过DATABASES项进行数据库设置
- django支持的数据库包括：sqlite、mysql等主流数据库
- Django默认使用SQLite数据库

### 创建应用

- 在一个项目中可以创建一到多个应用，每个应用进行一种业务处理
- 创建应用的命令：

```
python manage.py startapp day1_hello_django
```

- 应用的目录结构如下图

![](/django项目目录结构.png)

### 定义模型类

- 有一个数据表，就有一个模型类与之对应
- 打开models.py文件，定义模型类
- 引入包from django.db import models
- 模型类继承自models.Model类
- **说明：不需要定义主键列，在生成时会自动添加，并且值为自动增长**
- 当输出对象时，会调用对象的str方法

```python
from django.db import models

class Grade(models.Model):
    g_name = models.CharField(max_length=20, db_column="班级名称")
    g_num = models.IntegerField(default=30)
    g_crete_date = models.DateTimeField(auto_now=True)

class Student(models.Model):
    s_name = models.CharField(max_length=20, db_column="姓名")
    s_age = models.IntegerField(default=20, db_column="年龄")
    s_sex = models.BooleanField(default=True)
    s_birthday = models.DateTimeField()
    s_grade = models.ForeignKey(Grade)

    class Meta:
        ordering = ["-s_age"]
        # 为数据库设置别名
        verbose_name = "学生表"
    	verbose_name_plural = "学生表"
        
    def _ _str_ _(self):
        return "%d" % self.pk
```

### 生成数据表

- 激活模型：编辑settings.py文件，将booktest应用加入到installed_apps中

  ![1531115052424](/注册app.png)

- 生成迁移文件：根据模型类生成sql语句

```
python manage.py makemigrations
```

- 迁移文件被生成到应用的migrations目录

![1531115146872](/迁移文件.png)

- 执行迁移：执行sql语句生成数据表

```
python manage.py migrate
```

### 测试数据操作

- 进入python shell，进行简单的模型API练习

```
python manage.py shell
```

- 进入shell后提示如下：

![](/进入django shell.png)

- 引入需要的包：

```
from App.models import Grade,Student
```

- 查询所有班级信息：

```
Grade.objects.all()
```

- 新建班级信息：

```
grade = Grade()
grade.g_name = "深圳python1805班"
grade.g_num = 40
grade.save()
```

- 查找班级信息：

```
grade = Grade.objects.get(pk=1)
```

- 输出班级信息：

```
grade
grade.id
grade.g_name
```

- 修改班级信息：

```
grade.g_name="大神班"
grade.save()
```

- 删除班级信息：

```
grade.delete()
```

### 关联对象的操作

- 对于Student可以按照上面的操作方式进行
- 添加，注意添加关联对象

```
s=Student()
s.s_name='张三'
s.s_sex=True
s.scontent='爱好打篮球'
# 注意grade为Grade的实例，上面我们已经删除了，这里需要重新创建
s.sclass=grade
s.save()
```

### 运行项目

```
python manage.py runserver ip:port
```



# 项目主要部分

### 视图

- 在django中，视图的作用是对路由转发过来的url进行处理
- 视图函数接收的第一个参数是request对象，request对象中包含了请求的信息
- 视图函数写每个app下的views.py文件中

```
from django.shortcuts import render
from django.http import HttpResponse

# Create your views here.

def index(request):
    return HttpResponse("Hello Django")
```

注意：视图函数的第一个参数必须是request，返回必须调用django的定义的方法规范。

### 路由

- 在视图函数写完后，要编写相应的url规则，这样当我们在浏览器上输入网址的时候才能转到相应的视图函数处理逻辑
- 只定义路径部分，不定义域名
- 路由函数的url部分遵循正则的书写方式
- 路由规则由两部分必须指定的参数和其他可选参数组成

```
url(r'^index/', App.index, name="index"),
```

注：每次定义完路由规则，在代码的末尾添加逗号

- 在编写路由规则之前必须导入相应的视图
- 在组织项目时，将app和项目的路由分离



### 模板

- 模板是HTML文件，通过占位符来传递视图函数的数据

- 每个app目录下都可以创建templates的文件夹，django会自动从这些app里寻找相应的模板

  

##### 定义模板

定义index.html模板文件

```
<!DOCTYPE html>
<html>
<head>
  <title>首页</title>
</head>
<body>
<h1>学生列表</h1>
<ul>
{%for student in students%}
<li>
  {{student.s_name}}
</li>
{%endfor%}
</ul>
</body>
</html>
```

定义detail.html模板

```
<!DOCTYPE html>
<html>
<head>
  <title>详情页</title>
</head>
<body>
<h1>学生详情</h1>
<ul>
<li>
  {{student.s_name}}
  {{student.s_gender}}
  {{student.s_content}}
</li>
</ul>
</body>
</html>
```

##### 使用模板

- 定义视图

```
def index(request):
    students = StudentInfo.objects.all()
    return render(request, "index.html", {"students":students})

def index_page(request, id):
    student = StudentInfo.objects.get(pk=id)
    return render(request, "detail.html", {"student":student})
```

- 定义路由

```
url(r'index/$', class_view.index, name="index"),
url(r'index/(\d+)/$', class_view.index_page, name="index_page"),
```

- 运行项目
  - python manage.py runserver
------------------------------------------------------------------------------------------------------------------------
<p><img alt="Alt text" src="/static/images/django_blog/01.jpg" /></p>
<hr />
<p>typora-copy-images-to: images
typora-root-url: images</p>
<hr />
<h1 id="django是个啥">Django是个啥</h1>
<p>​   最初是被开发来用于管理劳伦斯出版集团旗下的一些以新闻内容为主的网站的。并于2005年7月在BSD许可证下发布。这套框架是以比利时的吉普赛爵士吉他手Django Reinhardt来命名的。</p>
<p>​   Django的主要目标是使得开发复杂的、数据库驱动的网站变得简单。Django注重组件的重用性和“可插拔性”，敏捷开发和DRY法则（Don't Repeat Yourself）。在Django中Python被普遍使用，甚至包括配置文件和数据模型。</p>
<ul>
<li>
<p>由 Python 开发的一个免费的开源网站框架，可以用于快速搭建高性能，优雅的网站</p>
</li>
<li>
<p>Django 中提供了开发网站经常用到的模块，常见的代码都为你写好了</p>
</li>
<li>
<p>Django 提供了通用Web开发模式的高度抽象，提供了频繁进行的编程作业的快速解决方法，以及为“如何解决问题”提供了清晰明了的约定。</p>
</li>
<li>
<p>Django的理念是DRY(Don't Repeat Yourself)来鼓励快速开发！</p>
</li>
</ul>
<h1 id="开发环境">开发环境</h1>
<p>Ubuntu + Python3  + Django + PyCharm</p>
<h1 id="ubuntu系统和命令介绍">Ubuntu系统和命令介绍</h1>
<h3 id="系统设置">系统设置</h3>
<h3 id="常用命令">常用命令</h3>
<ul>
<li>cd</li>
<li>ls</li>
<li>cp</li>
<li>mv</li>
<li>rm</li>
<li>mkdir</li>
<li>pwd</li>
<li>touch</li>
<li>cat</li>
<li>history</li>
<li>ps</li>
<li>ps -aux</li>
<li>kill </li>
<li>kill -9 pid</li>
<li>su/sudo</li>
<li>chmod</li>
<li>grep</li>
<li>which</li>
<li>whereis</li>
<li>ifconfig</li>
<li>netstat</li>
<li>netstat -antp 查看网络连接状态</li>
<li>wget</li>
<li>ssh username@host -p</li>
<li>ssh-keygen</li>
<li>tar</li>
<li>tar -zxvf 解压缩</li>
<li>tar -czvf 压缩</li>
<li>du</li>
<li>du -sh</li>
<li>df</li>
<li>df -h</li>
<li>apt install</li>
<li>apt update</li>
<li>apt remove</li>
<li>apt autoremove</li>
<li>dpkg -i</li>
<li>vi/vim</li>
</ul>
<h1 id="bscs">BS/CS</h1>
<p>​        C/S 架构即“客户端-服务器” 架构。这里的“客户端”可以是有 GUI （图形用户界面）的定制软件，也可以是浏览器，甚至可以是通过 SSH 访问服务器的命令行脚本。只要是客户端通过访问服务器调取计算或者存储资源的，统统都是 C/S 架构。所谓的 Browser-Server 架构其实是 C/S 架构的一种特殊的实现形式，而不是其对立面。</p>
<ul>
<li>C/S:</li>
<li>C: Client</li>
<li>S: Server</li>
<li>B/S</li>
<li>B: Browser</li>
<li>S: Server       </li>
</ul>
<h1 id="mvcmvt">MVC/MVT</h1>
<ul>
<li>
<p>MVC</p>
</li>
<li>
<p>M: Model（模型）</p>
</li>
<li>V: View（视图）</li>
<li>
<p>C: Controller（控制器）</p>
</li>
<li>
<p>MVT</p>
</li>
<li>
<p>M: Model（模型），主要封装对数据库层的访问，对数据库中的数据进行增、删、改、查操作。</p>
</li>
<li>
<p>V: View（视图），用于封装结果，生成页面展示的html内容。</p>
</li>
<li>
<p>T: Template（模板），用于接收请求，处理业务逻辑，与Model和View交互，返回结果。</p>
<p>​</p>
</li>
</ul>
<h1 id="hellodjango项目">HelloDjango项目</h1>
<h3 id="创建虚拟环境">创建虚拟环境</h3>
<h3 id="虚拟环境的优点">虚拟环境的优点</h3>
<ul>
<li>使不同应用开发环境独立</li>
<li>环境升级不影响其他应用，也不会影响全局的python环境</li>
<li>可以防止系统中出现包管理混乱和版本冲突</li>
</ul>
<p>开发会用 virtualenv 来管理多个开发环境</p>
<h4 id="linuxmacos-下">Linux/MacOS 下</h4>
<p>virtualenvwrapper 使得virtualenv变得更好用，所以我们一起安装了</p>
<div class="codehilite"><pre><span></span>(sudo) pip install virtualenv virtualenvwrapper
</pre></div>


<p>修改~/.bash_profile或其它环境变量相关文件(如 .bashrc 或用 ZSH 之后的 .zshrc)，添加以下语句</p>
<div class="codehilite"><pre><span></span>export WORKON_HOME=$HOME/.virtualenvs
export PROJECT_HOME=$HOME/workspace
source /usr/local/bin/virtualenvwrapper.sh(每台机子的位置不一样，可以通过find命令找到)
</pre></div>


<p>修改后使之立即生效(也可以重启终端使之生效)：</p>
<div class="codehilite"><pre><span></span>source ~/.bash_profile
</pre></div>


<h4 id="windows-下">Windows 下：</h4>
<div class="codehilite"><pre><span></span>pip install virtualenv virtualenvwrapper-win
</pre></div>


<p>【可选】Windows下默认虚拟环境是放在用户名下面的Envs中的，与桌面，我的文档，下载等文件夹在一块的。更改方法：计算机，属性，高级系统设置，环境变量，添加WORKON_HOME，如图（windows 10 环境变量设置截图）：</p>
<p><img alt="" src="/1.png" /></p>
<h4 id="虚拟环境使用方法">虚拟环境使用方法：</h4>
<ul>
<li>
<p><strong>mkvirtualenv django：创建运行环境django</strong></p>
</li>
<li>
<p><strong>workon django: 工作在 django环境 或 从其它环境切换到 django环境</strong></p>
</li>
<li>
<p><strong>deactivate</strong>: 退出终端环境</p>
</li>
<li>
<p><strong>其它的：</strong></p>
</li>
<li>
<p><strong>rmvirtualenv</strong> ENV：删除运行环境ENV</p>
</li>
<li>
<p><strong>mkproject</strong> mic：创建mic项目和运行环境mic</p>
</li>
<li>
<p><strong>mktmpenv</strong>：创建临时运行环境</p>
</li>
<li>
<p><strong>lsvirtualenv</strong>: 列出可用的运行环境</p>
</li>
<li>
<p><strong>lssitepackages</strong>: 列出当前环境安装了的包</p>
</li>
</ul>
<p>​</p>
<h3 id="安装django框架">安装Django框架</h3>
<ul>
<li>
<p>pip install django==1.11.7</p>
</li>
<li>
<p>测试django是否已经安装好</p>
</li>
<li>
<p>进入python shell</p>
<p><code>python
import django
django.get_version()</code></p>
</li>
<li>
<p>pip list 显示当前python环境中的所有的库</p>
</li>
<li>
<p>pip freeze 显示当前python环境中的除系统内置库外的所有第三方库</p>
</li>
</ul>
<h3 id="创建hellodjango项目">创建HelloDJango项目</h3>
<ul>
<li>开启一个django项目 django-admin startproject day01_HelloDjango</li>
<li>测试django项目环境 python manage.py runserver</li>
<li>python manage.py runserver 0.0.0.0:8000 表示允许本机所有的IP被外网访问</li>
<li>python manage.py runserver 9000 使用本机运行，但端口是9000</li>
<li>开启自己的App</li>
<li>python manage.py startapp App</li>
</ul>
<h3 id="django的项目结构">Django的项目结构</h3>
<ol>
<li>manage.py</li>
<li>管理整个项目</li>
<li>XXX/settings.py  </li>
<li>项目配置文件</li>
<li>XXX/urls.py</li>
<li>路由器，接收用户请求，分发给视图函数（控制器）</li>
<li>XXX/wsgi.py</li>
<li>网关接口，通常用在线上环境部署（开发过程中不会接触）</li>
</ol>
<h3 id="settingspy">settings.py</h3>
<ol>
<li>DEBUG 是否打开DEBUG</li>
<li>ALLOWED_HOSTS 允许访问的主机</li>
<li>INSTALLED_APPS   安装了的应用 </li>
<li>DATABASES   数据库配置</li>
<li>LANGUAGE_CODE 中文 zh-hans</li>
<li>TIME_ZONE  中国 Asia/Shanghai</li>
</ol>
<h3 id="pycharm安装">Pycharm安装</h3>
<ol>
<li>解压</li>
<li>目录结构中会有  bin</li>
<li>进入bin</li>
<li>bin 中pycharm.sh</li>
<li>执行 ./pycharm.sh</li>
<li>如果想在终端中的任何位置运行，那就配置到环境变量中</li>
</ol>
<h3 id="创建数据库">创建数据库</h3>
<ul>
<li>创建更改的文件</li>
<li>python manage.py makemigrations</li>
<li>将生成的py文件应用到数据库</li>
<li>python manage.py migrate</li>
<li>清空数据库</li>
<li>python manage.py flush</li>
<li>导入导出数据</li>
<li>python manage.py dumpdata appname &gt; appname.json</li>
<li>python manage.py loaddata appname.json</li>
</ul>
<h3 id="创建视图">创建视图</h3>
<ul>
<li>需要配置到工程的配置文件中settings中的INSTALLED_APPS</li>
<li>views中定义函数，接收request，返回response</li>
<li>在urls中配置路由规则</li>
<li>在根urls中配置（管理麻烦，配置简单）</li>
<li>在App中创建自己的urls，在urls中书写规则，将urls配置到工程urls中</li>
<li>创建模板目录，在views返回时调用模板的渲染</li>
<li>变更数据库</li>
<li>在settings中配置数据库信息</li>
</ul>
<h1 id="django请求流程">Django请求流程</h1>
<ul>
<li>进来的请求转入/index/。</li>
<li>Django 通过在 ROOT_URLCONF 配置来决定根 URLconf。</li>
<li>Django 在 URLconf 中的所有 URL 模式中，查找第一个匹配 /index/ 的条目。</li>
<li>如果找到匹配，将调用相应的视图函数。</li>
<li>视图函数返回一个 HttpResponse。</li>
<li>Django 转换 HttpResponse 为一个适合的 HTTP response， 以 Web page 显示出来。</li>
</ul>
<h1 id="设计一个小项目">设计一个小项目</h1>
<h3 id="需求分析">需求分析</h3>
<ul>
<li>本示例完成“班级-学生”信息的维护，需要存储两种数据：班级、学生</li>
<li>班级表结构设计：</li>
<li>表名：Grade</li>
<li>班级名称：g_name</li>
<li>班级人数：g_num</li>
<li>学生表结构设计：</li>
<li>表名：Student</li>
<li>学生姓名：s_name</li>
<li>学生性别：s_gender</li>
<li>所属班级：s_grade</li>
<li>班级-学生的关系为一对多</li>
</ul>
<h3 id="数据库配置">数据库配置</h3>
<ul>
<li>在settings.py文件中，通过DATABASES项进行数据库设置</li>
<li>django支持的数据库包括：sqlite、mysql等主流数据库</li>
<li>Django默认使用SQLite数据库</li>
</ul>
<h3 id="创建应用">创建应用</h3>
<ul>
<li>在一个项目中可以创建一到多个应用，每个应用进行一种业务处理</li>
<li>创建应用的命令：</li>
</ul>
<div class="codehilite"><pre><span></span>python manage.py startapp day1_hello_django
</pre></div>


<ul>
<li>应用的目录结构如下图</li>
</ul>
<p><img alt="" src="/django项目目录结构.png" /></p>
<h3 id="定义模型类">定义模型类</h3>
<ul>
<li>有一个数据表，就有一个模型类与之对应</li>
<li>打开models.py文件，定义模型类</li>
<li>引入包from django.db import models</li>
<li>模型类继承自models.Model类</li>
<li><strong>说明：不需要定义主键列，在生成时会自动添加，并且值为自动增长</strong></li>
<li>当输出对象时，会调用对象的str方法</li>
</ul>
<div class="codehilite"><pre><span></span><span class="kn">from</span> <span class="nn">django.db</span> <span class="kn">import</span> <span class="n">models</span>

<span class="k">class</span> <span class="nc">Grade</span><span class="p">(</span><span class="n">models</span><span class="o">.</span><span class="n">Model</span><span class="p">):</span>
    <span class="n">g_name</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">CharField</span><span class="p">(</span><span class="n">max_length</span><span class="o">=</span><span class="mi">20</span><span class="p">,</span> <span class="n">db_column</span><span class="o">=</span><span class="s2">&quot;班级名称&quot;</span><span class="p">)</span>
    <span class="n">g_num</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">IntegerField</span><span class="p">(</span><span class="n">default</span><span class="o">=</span><span class="mi">30</span><span class="p">)</span>
    <span class="n">g_crete_date</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">DateTimeField</span><span class="p">(</span><span class="n">auto_now</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>

<span class="k">class</span> <span class="nc">Student</span><span class="p">(</span><span class="n">models</span><span class="o">.</span><span class="n">Model</span><span class="p">):</span>
    <span class="n">s_name</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">CharField</span><span class="p">(</span><span class="n">max_length</span><span class="o">=</span><span class="mi">20</span><span class="p">,</span> <span class="n">db_column</span><span class="o">=</span><span class="s2">&quot;姓名&quot;</span><span class="p">)</span>
    <span class="n">s_age</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">IntegerField</span><span class="p">(</span><span class="n">default</span><span class="o">=</span><span class="mi">20</span><span class="p">,</span> <span class="n">db_column</span><span class="o">=</span><span class="s2">&quot;年龄&quot;</span><span class="p">)</span>
    <span class="n">s_sex</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">BooleanField</span><span class="p">(</span><span class="n">default</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
    <span class="n">s_birthday</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">DateTimeField</span><span class="p">()</span>
    <span class="n">s_grade</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">ForeignKey</span><span class="p">(</span><span class="n">Grade</span><span class="p">)</span>

    <span class="k">class</span> <span class="nc">Meta</span><span class="p">:</span>
        <span class="n">ordering</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&quot;-s_age&quot;</span><span class="p">]</span>
        <span class="c1"># 为数据库设置别名</span>
        <span class="n">verbose_name</span> <span class="o">=</span> <span class="s2">&quot;学生表&quot;</span>
        <span class="n">verbose_name_plural</span> <span class="o">=</span> <span class="s2">&quot;学生表&quot;</span>

    <span class="k">def</span> <span class="nf">_</span> <span class="n">_str_</span> <span class="n">_</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">return</span> <span class="s2">&quot;</span><span class="si">%d</span><span class="s2">&quot;</span> <span class="o">%</span> <span class="bp">self</span><span class="o">.</span><span class="n">pk</span>
</pre></div>


<h3 id="生成数据表">生成数据表</h3>
<ul>
<li>激活模型：编辑settings.py文件，将booktest应用加入到installed_apps中</li>
</ul>
<p><img alt="1531115052424" src="/注册app.png" /></p>
<ul>
<li>生成迁移文件：根据模型类生成sql语句</li>
</ul>
<div class="codehilite"><pre><span></span>python manage.py makemigrations
</pre></div>


<ul>
<li>迁移文件被生成到应用的migrations目录</li>
</ul>
<p><img alt="1531115146872" src="/迁移文件.png" /></p>
<ul>
<li>执行迁移：执行sql语句生成数据表</li>
</ul>
<div class="codehilite"><pre><span></span>python manage.py migrate
</pre></div>


<h3 id="测试数据操作">测试数据操作</h3>
<ul>
<li>进入python shell，进行简单的模型API练习</li>
</ul>
<div class="codehilite"><pre><span></span>python manage.py shell
</pre></div>


<ul>
<li>进入shell后提示如下：</li>
</ul>
<p>![](/进入django shell.png)</p>
<ul>
<li>引入需要的包：</li>
</ul>
<div class="codehilite"><pre><span></span><span class="kn">from</span> <span class="nn">App.models</span> <span class="kn">import</span> <span class="n">Grade</span><span class="p">,</span><span class="n">Student</span>
</pre></div>


<ul>
<li>查询所有班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>Grade.objects.all()
</pre></div>


<ul>
<li>新建班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>grade = Grade()
grade.g_name = &quot;深圳python1805班&quot;
grade.g_num = 40
grade.save()
</pre></div>


<ul>
<li>查找班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>grade = Grade.objects.get(pk=1)
</pre></div>


<ul>
<li>输出班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>grade
grade.id
grade.g_name
</pre></div>


<ul>
<li>修改班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>grade.g_name=&quot;大神班&quot;
grade.save()
</pre></div>


<ul>
<li>删除班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>grade.delete()
</pre></div>


<h3 id="关联对象的操作">关联对象的操作</h3>
<ul>
<li>对于Student可以按照上面的操作方式进行</li>
<li>添加，注意添加关联对象</li>
</ul>
<div class="codehilite"><pre><span></span>s=Student()
s.s_name=&#39;张三&#39;
s.s_sex=True
s.scontent=&#39;爱好打篮球&#39;
# 注意grade为Grade的实例，上面我们已经删除了，这里需要重新创建
s.sclass=grade
s.save()
</pre></div>


<h3 id="运行项目">运行项目</h3>
<div class="codehilite"><pre><span></span>python manage.py runserver ip:port
</pre></div>


<h1 id="项目主要部分">项目主要部分</h1>
<h3 id="视图">视图</h3>
<ul>
<li>在django中，视图的作用是对路由转发过来的url进行处理</li>
<li>视图函数接收的第一个参数是request对象，request对象中包含了请求的信息</li>
<li>视图函数写每个app下的views.py文件中</li>
</ul>
<div class="codehilite"><pre><span></span><span class="kn">from</span> <span class="nn">django.shortcuts</span> <span class="kn">import</span> <span class="n">render</span>
<span class="kn">from</span> <span class="nn">django.http</span> <span class="kn">import</span> <span class="n">HttpResponse</span>

<span class="c1"># Create your views here.</span>

<span class="k">def</span> <span class="nf">index</span><span class="p">(</span><span class="n">request</span><span class="p">):</span>
    <span class="k">return</span> <span class="n">HttpResponse</span><span class="p">(</span><span class="s2">&quot;Hello Django&quot;</span><span class="p">)</span>
</pre></div>


<p>注意：视图函数的第一个参数必须是request，返回必须调用django的定义的方法规范。</p>
<h3 id="路由">路由</h3>
<ul>
<li>在视图函数写完后，要编写相应的url规则，这样当我们在浏览器上输入网址的时候才能转到相应的视图函数处理逻辑</li>
<li>只定义路径部分，不定义域名</li>
<li>路由函数的url部分遵循正则的书写方式</li>
<li>路由规则由两部分必须指定的参数和其他可选参数组成</li>
</ul>
<div class="codehilite"><pre><span></span>url(r&#39;^index/&#39;, App.index, name=&quot;index&quot;),
</pre></div>


<p>注：每次定义完路由规则，在代码的末尾添加逗号</p>
<ul>
<li>在编写路由规则之前必须导入相应的视图</li>
<li>在组织项目时，将app和项目的路由分离</li>
</ul>
<h3 id="模板">模板</h3>
<ul>
<li>
<p>模板是HTML文件，通过占位符来传递视图函数的数据</p>
</li>
<li>
<p>每个app目录下都可以创建templates的文件夹，django会自动从这些app里寻找相应的模板</p>
</li>
</ul>
<h5 id="定义模板">定义模板</h5>
<p>定义index.html模板文件</p>
<div class="codehilite"><pre><span></span><span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="p">&lt;</span><span class="nt">html</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">title</span><span class="p">&gt;</span>首页<span class="p">&lt;/</span><span class="nt">title</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">h1</span><span class="p">&gt;</span>学生列表<span class="p">&lt;/</span><span class="nt">h1</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">ul</span><span class="p">&gt;</span>
<span class="cp">{%</span><span class="k">for</span> <span class="nv">student</span> <span class="k">in</span> <span class="nv">students</span><span class="cp">%}</span>
<span class="p">&lt;</span><span class="nt">li</span><span class="p">&gt;</span>
  <span class="cp">{{</span><span class="nv">student.s_name</span><span class="cp">}}</span>
<span class="p">&lt;/</span><span class="nt">li</span><span class="p">&gt;</span>
<span class="cp">{%</span><span class="k">endfor</span><span class="cp">%}</span>
<span class="p">&lt;/</span><span class="nt">ul</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span>
</pre></div>


<p>定义detail.html模板</p>
<div class="codehilite"><pre><span></span><span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="p">&lt;</span><span class="nt">html</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">title</span><span class="p">&gt;</span>详情页<span class="p">&lt;/</span><span class="nt">title</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">h1</span><span class="p">&gt;</span>学生详情<span class="p">&lt;/</span><span class="nt">h1</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">ul</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">li</span><span class="p">&gt;</span>
  <span class="cp">{{</span><span class="nv">student.s_name</span><span class="cp">}}</span>
  <span class="cp">{{</span><span class="nv">student.s_gender</span><span class="cp">}}</span>
  <span class="cp">{{</span><span class="nv">student.s_content</span><span class="cp">}}</span>
<span class="p">&lt;/</span><span class="nt">li</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">ul</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span>
</pre></div>


<h5 id="使用模板">使用模板</h5>
<ul>
<li>定义视图</li>
</ul>
<div class="codehilite"><pre><span></span>def index(request):
    students = StudentInfo.objects.all()
    return render(request, &quot;index.html&quot;, {&quot;students&quot;:students})

def index_page(request, id):
    student = StudentInfo.objects.get(pk=id)
    return render(request, &quot;detail.html&quot;, {&quot;student&quot;:student})
</pre></div>


<ul>
<li>定义路由</li>
</ul>
<div class="codehilite"><pre><span></span>url(r&#39;index/$&#39;, class_view.index, name=&quot;index&quot;),
url(r&#39;index/(\d+)/$&#39;, class_view.index_page, name=&quot;index_page&quot;),
</pre></div>


<ul>
<li>运行项目</li>
<li>python manage.py runserver</li>
</ul>
<div class="toc">
<ul>
<li><a href="#django是个啥">Django是个啥</a></li>
<li><a href="#开发环境">开发环境</a></li>
<li><a href="#ubuntu系统和命令介绍">Ubuntu系统和命令介绍</a><ul>
<li><a href="#系统设置">系统设置</a></li>
<li><a href="#常用命令">常用命令</a></li>
</ul>
</li>
<li><a href="#bscs">BS/CS</a></li>
<li><a href="#mvcmvt">MVC/MVT</a></li>
<li><a href="#hellodjango项目">HelloDjango项目</a><ul>
<li><a href="#创建虚拟环境">创建虚拟环境</a></li>
<li><a href="#虚拟环境的优点">虚拟环境的优点</a><ul>
<li><a href="#linuxmacos-下">Linux/MacOS 下</a></li>
<li><a href="#windows-下">Windows 下：</a></li>
<li><a href="#虚拟环境使用方法">虚拟环境使用方法：</a></li>
</ul>
</li>
<li><a href="#安装django框架">安装Django框架</a></li>
<li><a href="#创建hellodjango项目">创建HelloDJango项目</a></li>
<li><a href="#django的项目结构">Django的项目结构</a></li>
<li><a href="#settingspy">settings.py</a></li>
<li><a href="#pycharm安装">Pycharm安装</a></li>
<li><a href="#创建数据库">创建数据库</a></li>
<li><a href="#创建视图">创建视图</a></li>
</ul>
</li>
<li><a href="#django请求流程">Django请求流程</a></li>
<li><a href="#设计一个小项目">设计一个小项目</a><ul>
<li><a href="#需求分析">需求分析</a></li>
<li><a href="#数据库配置">数据库配置</a></li>
<li><a href="#创建应用">创建应用</a></li>
<li><a href="#定义模型类">定义模型类</a></li>
<li><a href="#生成数据表">生成数据表</a></li>
<li><a href="#测试数据操作">测试数据操作</a></li>
<li><a href="#关联对象的操作">关联对象的操作</a></li>
<li><a href="#运行项目">运行项目</a></li>
</ul>
</li>
<li><a href="#项目主要部分">项目主要部分</a><ul>
<li><a href="#视图">视图</a></li>
<li><a href="#路由">路由</a></li>
<li><a href="#模板">模板</a><ul>
<li><a href="#定义模板">定义模板</a></li>
<li><a href="#使用模板">使用模板</a></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>

[pid: 24644|app: 0|req: 147/370] 218.13.14.215 () {40 vars in 693 bytes} [Wed Aug  1 15:36:25 2018] GET /post/3/ => generated 35800 bytes in 477 msecs (HTTP/1.1 200) 5 headers in 279 bytes (1 switches on core 0)
Not Found: /django项目目录结构.png
[pid: 24644|app: 0|req: 148/371] 218.13.14.215 () {42 vars in 830 bytes} [Wed Aug  1 15:36:26 2018] GET /django%E9%A1%B9%E7%9B%AE%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84.png => generated 3462 bytes in 3 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 1)
Not Found: /迁移文件.png
[pid: 24647|app: 0|req: 49/372] 218.13.14.215 () {42 vars in 794 bytes} [Wed Aug  1 15:36:26 2018] GET /%E8%BF%81%E7%A7%BB%E6%96%87%E4%BB%B6.png => generated 3414 bytes in 6 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 0)
Not Found: /1.png
Not Found: /注册app.png
[pid: 24645|app: 0|req: 85/373] 218.13.14.215 () {42 vars in 776 bytes} [Wed Aug  1 15:36:26 2018] GET /%E6%B3%A8%E5%86%8Capp.png => generated 3393 bytes in 8 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 1)
[pid: 24646|app: 0|req: 80/374] 218.13.14.215 () {42 vars in 748 bytes} [Wed Aug  1 15:36:26 2018] GET /1.png => generated 3357 bytes in 12 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24646|app: 0|req: 81/375] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug  1 15:39:58 2018] GET / => generated 10360 bytes in 39 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
![Alt text](/static/images/django_blog/01.jpg)

---
typora-copy-images-to: images
typora-root-url: images
---

# Django是个啥

​	最初是被开发来用于管理劳伦斯出版集团旗下的一些以新闻内容为主的网站的。并于2005年7月在BSD许可证下发布。这套框架是以比利时的吉普赛爵士吉他手Django Reinhardt来命名的。

​	Django的主要目标是使得开发复杂的、数据库驱动的网站变得简单。Django注重组件的重用性和“可插拔性”，敏捷开发和DRY法则（Don't Repeat Yourself）。在Django中Python被普遍使用，甚至包括配置文件和数据模型。

- 由 Python 开发的一个免费的开源网站框架，可以用于快速搭建高性能，优雅的网站

- Django 中提供了开发网站经常用到的模块，常见的代码都为你写好了

- Django 提供了通用Web开发模式的高度抽象，提供了频繁进行的编程作业的快速解决方法，以及为“如何解决问题”提供了清晰明了的约定。

- Django的理念是DRY(Don't Repeat Yourself)来鼓励快速开发！

  

# 开发环境

Ubuntu + Python3  + Django + PyCharm



# Ubuntu系统和命令介绍

### 系统设置

### 常用命令

- cd
- ls
- cp
- mv
- rm
- mkdir
- pwd
- touch
- cat
- history
- ps
  - ps -aux
- kill 
  - kill -9 pid
- su/sudo
- chmod
- grep
- which
- whereis
- ifconfig
- netstat
  - netstat -antp 查看网络连接状态
- wget
- ssh username@host -p
  - ssh-keygen
- tar
  - tar -zxvf 解压缩
  - tar -czvf 压缩
- du
  - du -sh
- df
  - df -h
- apt install
- apt update
- apt remove
- apt autoremove
- dpkg -i
- vi/vim

# BS/CS

​        C/S 架构即“客户端-服务器” 架构。这里的“客户端”可以是有 GUI （图形用户界面）的定制软件，也可以是浏览器，甚至可以是通过 SSH 访问服务器的命令行脚本。只要是客户端通过访问服务器调取计算或者存储资源的，统统都是 C/S 架构。所谓的 Browser-Server 架构其实是 C/S 架构的一种特殊的实现形式，而不是其对立面。

- C/S:
  - C: Client
  - S: Server
- B/S
  - B: Browser
  - S: Server       

# MVC/MVT

- MVC

  - M: Model（模型）
  - V: View（视图）
  - C: Controller（控制器）

- MVT

  - M: Model（模型），主要封装对数据库层的访问，对数据库中的数据进行增、删、改、查操作。

  - V: View（视图），用于封装结果，生成页面展示的html内容。

  - T: Template（模板），用于接收请求，处理业务逻辑，与Model和View交互，返回结果。

    ​

# HelloDjango项目

### 创建虚拟环境

### 虚拟环境的优点

- 使不同应用开发环境独立
- 环境升级不影响其他应用，也不会影响全局的python环境
- 可以防止系统中出现包管理混乱和版本冲突

开发会用 virtualenv 来管理多个开发环境

#### Linux/MacOS 下

virtualenvwrapper 使得virtualenv变得更好用，所以我们一起安装了

```
(sudo) pip install virtualenv virtualenvwrapper
```

修改~/.bash_profile或其它环境变量相关文件(如 .bashrc 或用 ZSH 之后的 .zshrc)，添加以下语句

```
export WORKON_HOME=$HOME/.virtualenvs
export PROJECT_HOME=$HOME/workspace
source /usr/local/bin/virtualenvwrapper.sh(每台机子的位置不一样，可以通过find命令找到)
```

修改后使之立即生效(也可以重启终端使之生效)：

```
source ~/.bash_profile
```



#### Windows 下：

```
pip install virtualenv virtualenvwrapper-win
```

【可选】Windows下默认虚拟环境是放在用户名下面的Envs中的，与桌面，我的文档，下载等文件夹在一块的。更改方法：计算机，属性，高级系统设置，环境变量，添加WORKON_HOME，如图（windows 10 环境变量设置截图）：

![](/1.png)

#### 虚拟环境使用方法：

- **mkvirtualenv django：创建运行环境django**

- **workon django: 工作在 django环境 或 从其它环境切换到 django环境**

- **deactivate**: 退出终端环境

- **其它的：**

- **rmvirtualenv** ENV：删除运行环境ENV

- **mkproject** mic：创建mic项目和运行环境mic

- **mktmpenv**：创建临时运行环境

- **lsvirtualenv**: 列出可用的运行环境

- **lssitepackages**: 列出当前环境安装了的包

  ​




### 安装Django框架

- pip install django==1.11.7

- 测试django是否已经安装好

  - 进入python shell

    ```python
    import django
    django.get_version()
    ```

- pip list 显示当前python环境中的所有的库

- pip freeze 显示当前python环境中的除系统内置库外的所有第三方库

### 创建HelloDJango项目

- 开启一个django项目 django-admin startproject day01_HelloDjango
- 测试django项目环境 python manage.py runserver
  - python manage.py runserver 0.0.0.0:8000 表示允许本机所有的IP被外网访问
  - python manage.py runserver 9000 使用本机运行，但端口是9000
- 开启自己的App
  - python manage.py startapp App



### Django的项目结构

1. manage.py
   - 管理整个项目
2. XXX/settings.py  
   - 项目配置文件
3. XXX/urls.py
   - 路由器，接收用户请求，分发给视图函数（控制器）
4. XXX/wsgi.py
   - 网关接口，通常用在线上环境部署（开发过程中不会接触）

### settings.py

1. DEBUG 是否打开DEBUG
2. ALLOWED_HOSTS 允许访问的主机
3. INSTALLED_APPS   安装了的应用 
4. DATABASES   数据库配置
5. LANGUAGE_CODE 中文 zh-hans
6. TIME_ZONE  中国 Asia/Shanghai



### Pycharm安装

1. 解压
2. 目录结构中会有  bin
3. 进入bin
4. bin 中pycharm.sh
5. 执行 ./pycharm.sh
6. 如果想在终端中的任何位置运行，那就配置到环境变量中



### 创建数据库

- 创建更改的文件
  - python manage.py makemigrations
- 将生成的py文件应用到数据库
  - python manage.py migrate
- 清空数据库
  - python manage.py flush
- 导入导出数据
  - python manage.py dumpdata appname > appname.json
  - python manage.py loaddata appname.json

### 创建视图

- 需要配置到工程的配置文件中settings中的INSTALLED_APPS
- views中定义函数，接收request，返回response
- 在urls中配置路由规则
  - 在根urls中配置（管理麻烦，配置简单）
  - 在App中创建自己的urls，在urls中书写规则，将urls配置到工程urls中
- 创建模板目录，在views返回时调用模板的渲染
- 变更数据库
  - 在settings中配置数据库信息



# Django请求流程

- 进来的请求转入/index/。
- Django 通过在 ROOT_URLCONF 配置来决定根 URLconf。
- Django 在 URLconf 中的所有 URL 模式中，查找第一个匹配 /index/ 的条目。
- 如果找到匹配，将调用相应的视图函数。
- 视图函数返回一个 HttpResponse。
- Django 转换 HttpResponse 为一个适合的 HTTP response， 以 Web page 显示出来。



# 设计一个小项目

### 需求分析

- 本示例完成“班级-学生”信息的维护，需要存储两种数据：班级、学生
- 班级表结构设计：
  - 表名：Grade
  - 班级名称：g_name
  - 班级人数：g_num
- 学生表结构设计：
  - 表名：Student
  - 学生姓名：s_name
  - 学生性别：s_gender
  - 所属班级：s_grade
- 班级-学生的关系为一对多

### 数据库配置

- 在settings.py文件中，通过DATABASES项进行数据库设置
- django支持的数据库包括：sqlite、mysql等主流数据库
- Django默认使用SQLite数据库

### 创建应用

- 在一个项目中可以创建一到多个应用，每个应用进行一种业务处理
- 创建应用的命令：

```
python manage.py startapp day1_hello_django
```

- 应用的目录结构如下图

![](/django项目目录结构.png)

### 定义模型类

- 有一个数据表，就有一个模型类与之对应
- 打开models.py文件，定义模型类
- 引入包from django.db import models
- 模型类继承自models.Model类
- **说明：不需要定义主键列，在生成时会自动添加，并且值为自动增长**
- 当输出对象时，会调用对象的str方法

```python
from django.db import models

class Grade(models.Model):
    g_name = models.CharField(max_length=20, db_column="班级名称")
    g_num = models.IntegerField(default=30)
    g_crete_date = models.DateTimeField(auto_now=True)

class Student(models.Model):
    s_name = models.CharField(max_length=20, db_column="姓名")
    s_age = models.IntegerField(default=20, db_column="年龄")
    s_sex = models.BooleanField(default=True)
    s_birthday = models.DateTimeField()
    s_grade = models.ForeignKey(Grade)

    class Meta:
        ordering = ["-s_age"]
        # 为数据库设置别名
        verbose_name = "学生表"
    	verbose_name_plural = "学生表"
        
    def _ _str_ _(self):
        return "%d" % self.pk
```

### 生成数据表

- 激活模型：编辑settings.py文件，将booktest应用加入到installed_apps中

  ![1531115052424](/注册app.png)

- 生成迁移文件：根据模型类生成sql语句

```
python manage.py makemigrations
```

- 迁移文件被生成到应用的migrations目录

![1531115146872](/迁移文件.png)

- 执行迁移：执行sql语句生成数据表

```
python manage.py migrate
```

### 测试数据操作

- 进入python shell，进行简单的模型API练习

```
python manage.py shell
```

- 进入shell后提示如下：

![](/进入django shell.png)

- 引入需要的包：

```
from App.models import Grade,Student
```

- 查询所有班级信息：

```
Grade.objects.all()
```

- 新建班级信息：

```
grade = Grade()
grade.g_name = "深圳python1805班"
grade.g_num = 40
grade.save()
```

- 查找班级信息：

```
grade = Grade.objects.get(pk=1)
```

- 输出班级信息：

```
grade
grade.id
grade.g_name
```

- 修改班级信息：

```
grade.g_name="大神班"
grade.save()
```

- 删除班级信息：

```
grade.delete()
```

### 关联对象的操作

- 对于Student可以按照上面的操作方式进行
- 添加，注意添加关联对象

```
s=Student()
s.s_name='张三'
s.s_sex=True
s.scontent='爱好打篮球'
# 注意grade为Grade的实例，上面我们已经删除了，这里需要重新创建
s.sclass=grade
s.save()
```

### 运行项目

```
python manage.py runserver ip:port
```



# 项目主要部分

### 视图

- 在django中，视图的作用是对路由转发过来的url进行处理
- 视图函数接收的第一个参数是request对象，request对象中包含了请求的信息
- 视图函数写每个app下的views.py文件中

```
from django.shortcuts import render
from django.http import HttpResponse

# Create your views here.

def index(request):
    return HttpResponse("Hello Django")
```

注意：视图函数的第一个参数必须是request，返回必须调用django的定义的方法规范。

### 路由

- 在视图函数写完后，要编写相应的url规则，这样当我们在浏览器上输入网址的时候才能转到相应的视图函数处理逻辑
- 只定义路径部分，不定义域名
- 路由函数的url部分遵循正则的书写方式
- 路由规则由两部分必须指定的参数和其他可选参数组成

```
url(r'^index/', App.index, name="index"),
```

注：每次定义完路由规则，在代码的末尾添加逗号

- 在编写路由规则之前必须导入相应的视图
- 在组织项目时，将app和项目的路由分离



### 模板

- 模板是HTML文件，通过占位符来传递视图函数的数据

- 每个app目录下都可以创建templates的文件夹，django会自动从这些app里寻找相应的模板

  

##### 定义模板

定义index.html模板文件

```
<!DOCTYPE html>
<html>
<head>
  <title>首页</title>
</head>
<body>
<h1>学生列表</h1>
<ul>
{%for student in students%}
<li>
  {{student.s_name}}
</li>
{%endfor%}
</ul>
</body>
</html>
```

定义detail.html模板

```
<!DOCTYPE html>
<html>
<head>
  <title>详情页</title>
</head>
<body>
<h1>学生详情</h1>
<ul>
<li>
  {{student.s_name}}
  {{student.s_gender}}
  {{student.s_content}}
</li>
</ul>
</body>
</html>
```

##### 使用模板

- 定义视图

```
def index(request):
    students = StudentInfo.objects.all()
    return render(request, "index.html", {"students":students})

def index_page(request, id):
    student = StudentInfo.objects.get(pk=id)
    return render(request, "detail.html", {"student":student})
```

- 定义路由

```
url(r'index/$', class_view.index, name="index"),
url(r'index/(\d+)/$', class_view.index_page, name="index_page"),
```

- 运行项目
  - python manage.py runserver
------------------------------------------------------------------------------------------------------------------------
<p><img alt="Alt text" src="/static/images/django_blog/01.jpg" /></p>
<hr />
<p>typora-copy-images-to: images
typora-root-url: images</p>
<hr />
<h1 id="django是个啥">Django是个啥</h1>
<p>​   最初是被开发来用于管理劳伦斯出版集团旗下的一些以新闻内容为主的网站的。并于2005年7月在BSD许可证下发布。这套框架是以比利时的吉普赛爵士吉他手Django Reinhardt来命名的。</p>
<p>​   Django的主要目标是使得开发复杂的、数据库驱动的网站变得简单。Django注重组件的重用性和“可插拔性”，敏捷开发和DRY法则（Don't Repeat Yourself）。在Django中Python被普遍使用，甚至包括配置文件和数据模型。</p>
<ul>
<li>
<p>由 Python 开发的一个免费的开源网站框架，可以用于快速搭建高性能，优雅的网站</p>
</li>
<li>
<p>Django 中提供了开发网站经常用到的模块，常见的代码都为你写好了</p>
</li>
<li>
<p>Django 提供了通用Web开发模式的高度抽象，提供了频繁进行的编程作业的快速解决方法，以及为“如何解决问题”提供了清晰明了的约定。</p>
</li>
<li>
<p>Django的理念是DRY(Don't Repeat Yourself)来鼓励快速开发！</p>
</li>
</ul>
<h1 id="开发环境">开发环境</h1>
<p>Ubuntu + Python3  + Django + PyCharm</p>
<h1 id="ubuntu系统和命令介绍">Ubuntu系统和命令介绍</h1>
<h3 id="系统设置">系统设置</h3>
<h3 id="常用命令">常用命令</h3>
<ul>
<li>cd</li>
<li>ls</li>
<li>cp</li>
<li>mv</li>
<li>rm</li>
<li>mkdir</li>
<li>pwd</li>
<li>touch</li>
<li>cat</li>
<li>history</li>
<li>ps</li>
<li>ps -aux</li>
<li>kill </li>
<li>kill -9 pid</li>
<li>su/sudo</li>
<li>chmod</li>
<li>grep</li>
<li>which</li>
<li>whereis</li>
<li>ifconfig</li>
<li>netstat</li>
<li>netstat -antp 查看网络连接状态</li>
<li>wget</li>
<li>ssh username@host -p</li>
<li>ssh-keygen</li>
<li>tar</li>
<li>tar -zxvf 解压缩</li>
<li>tar -czvf 压缩</li>
<li>du</li>
<li>du -sh</li>
<li>df</li>
<li>df -h</li>
<li>apt install</li>
<li>apt update</li>
<li>apt remove</li>
<li>apt autoremove</li>
<li>dpkg -i</li>
<li>vi/vim</li>
</ul>
<h1 id="bscs">BS/CS</h1>
<p>​        C/S 架构即“客户端-服务器” 架构。这里的“客户端”可以是有 GUI （图形用户界面）的定制软件，也可以是浏览器，甚至可以是通过 SSH 访问服务器的命令行脚本。只要是客户端通过访问服务器调取计算或者存储资源的，统统都是 C/S 架构。所谓的 Browser-Server 架构其实是 C/S 架构的一种特殊的实现形式，而不是其对立面。</p>
<ul>
<li>C/S:</li>
<li>C: Client</li>
<li>S: Server</li>
<li>B/S</li>
<li>B: Browser</li>
<li>S: Server       </li>
</ul>
<h1 id="mvcmvt">MVC/MVT</h1>
<ul>
<li>
<p>MVC</p>
</li>
<li>
<p>M: Model（模型）</p>
</li>
<li>V: View（视图）</li>
<li>
<p>C: Controller（控制器）</p>
</li>
<li>
<p>MVT</p>
</li>
<li>
<p>M: Model（模型），主要封装对数据库层的访问，对数据库中的数据进行增、删、改、查操作。</p>
</li>
<li>
<p>V: View（视图），用于封装结果，生成页面展示的html内容。</p>
</li>
<li>
<p>T: Template（模板），用于接收请求，处理业务逻辑，与Model和View交互，返回结果。</p>
<p>​</p>
</li>
</ul>
<h1 id="hellodjango项目">HelloDjango项目</h1>
<h3 id="创建虚拟环境">创建虚拟环境</h3>
<h3 id="虚拟环境的优点">虚拟环境的优点</h3>
<ul>
<li>使不同应用开发环境独立</li>
<li>环境升级不影响其他应用，也不会影响全局的python环境</li>
<li>可以防止系统中出现包管理混乱和版本冲突</li>
</ul>
<p>开发会用 virtualenv 来管理多个开发环境</p>
<h4 id="linuxmacos-下">Linux/MacOS 下</h4>
<p>virtualenvwrapper 使得virtualenv变得更好用，所以我们一起安装了</p>
<div class="codehilite"><pre><span></span>(sudo) pip install virtualenv virtualenvwrapper
</pre></div>


<p>修改~/.bash_profile或其它环境变量相关文件(如 .bashrc 或用 ZSH 之后的 .zshrc)，添加以下语句</p>
<div class="codehilite"><pre><span></span>export WORKON_HOME=$HOME/.virtualenvs
export PROJECT_HOME=$HOME/workspace
source /usr/local/bin/virtualenvwrapper.sh(每台机子的位置不一样，可以通过find命令找到)
</pre></div>


<p>修改后使之立即生效(也可以重启终端使之生效)：</p>
<div class="codehilite"><pre><span></span>source ~/.bash_profile
</pre></div>


<h4 id="windows-下">Windows 下：</h4>
<div class="codehilite"><pre><span></span>pip install virtualenv virtualenvwrapper-win
</pre></div>


<p>【可选】Windows下默认虚拟环境是放在用户名下面的Envs中的，与桌面，我的文档，下载等文件夹在一块的。更改方法：计算机，属性，高级系统设置，环境变量，添加WORKON_HOME，如图（windows 10 环境变量设置截图）：</p>
<p><img alt="" src="/1.png" /></p>
<h4 id="虚拟环境使用方法">虚拟环境使用方法：</h4>
<ul>
<li>
<p><strong>mkvirtualenv django：创建运行环境django</strong></p>
</li>
<li>
<p><strong>workon django: 工作在 django环境 或 从其它环境切换到 django环境</strong></p>
</li>
<li>
<p><strong>deactivate</strong>: 退出终端环境</p>
</li>
<li>
<p><strong>其它的：</strong></p>
</li>
<li>
<p><strong>rmvirtualenv</strong> ENV：删除运行环境ENV</p>
</li>
<li>
<p><strong>mkproject</strong> mic：创建mic项目和运行环境mic</p>
</li>
<li>
<p><strong>mktmpenv</strong>：创建临时运行环境</p>
</li>
<li>
<p><strong>lsvirtualenv</strong>: 列出可用的运行环境</p>
</li>
<li>
<p><strong>lssitepackages</strong>: 列出当前环境安装了的包</p>
</li>
</ul>
<p>​</p>
<h3 id="安装django框架">安装Django框架</h3>
<ul>
<li>
<p>pip install django==1.11.7</p>
</li>
<li>
<p>测试django是否已经安装好</p>
</li>
<li>
<p>进入python shell</p>
<p><code>python
import django
django.get_version()</code></p>
</li>
<li>
<p>pip list 显示当前python环境中的所有的库</p>
</li>
<li>
<p>pip freeze 显示当前python环境中的除系统内置库外的所有第三方库</p>
</li>
</ul>
<h3 id="创建hellodjango项目">创建HelloDJango项目</h3>
<ul>
<li>开启一个django项目 django-admin startproject day01_HelloDjango</li>
<li>测试django项目环境 python manage.py runserver</li>
<li>python manage.py runserver 0.0.0.0:8000 表示允许本机所有的IP被外网访问</li>
<li>python manage.py runserver 9000 使用本机运行，但端口是9000</li>
<li>开启自己的App</li>
<li>python manage.py startapp App</li>
</ul>
<h3 id="django的项目结构">Django的项目结构</h3>
<ol>
<li>manage.py</li>
<li>管理整个项目</li>
<li>XXX/settings.py  </li>
<li>项目配置文件</li>
<li>XXX/urls.py</li>
<li>路由器，接收用户请求，分发给视图函数（控制器）</li>
<li>XXX/wsgi.py</li>
<li>网关接口，通常用在线上环境部署（开发过程中不会接触）</li>
</ol>
<h3 id="settingspy">settings.py</h3>
<ol>
<li>DEBUG 是否打开DEBUG</li>
<li>ALLOWED_HOSTS 允许访问的主机</li>
<li>INSTALLED_APPS   安装了的应用 </li>
<li>DATABASES   数据库配置</li>
<li>LANGUAGE_CODE 中文 zh-hans</li>
<li>TIME_ZONE  中国 Asia/Shanghai</li>
</ol>
<h3 id="pycharm安装">Pycharm安装</h3>
<ol>
<li>解压</li>
<li>目录结构中会有  bin</li>
<li>进入bin</li>
<li>bin 中pycharm.sh</li>
<li>执行 ./pycharm.sh</li>
<li>如果想在终端中的任何位置运行，那就配置到环境变量中</li>
</ol>
<h3 id="创建数据库">创建数据库</h3>
<ul>
<li>创建更改的文件</li>
<li>python manage.py makemigrations</li>
<li>将生成的py文件应用到数据库</li>
<li>python manage.py migrate</li>
<li>清空数据库</li>
<li>python manage.py flush</li>
<li>导入导出数据</li>
<li>python manage.py dumpdata appname &gt; appname.json</li>
<li>python manage.py loaddata appname.json</li>
</ul>
<h3 id="创建视图">创建视图</h3>
<ul>
<li>需要配置到工程的配置文件中settings中的INSTALLED_APPS</li>
<li>views中定义函数，接收request，返回response</li>
<li>在urls中配置路由规则</li>
<li>在根urls中配置（管理麻烦，配置简单）</li>
<li>在App中创建自己的urls，在urls中书写规则，将urls配置到工程urls中</li>
<li>创建模板目录，在views返回时调用模板的渲染</li>
<li>变更数据库</li>
<li>在settings中配置数据库信息</li>
</ul>
<h1 id="django请求流程">Django请求流程</h1>
<ul>
<li>进来的请求转入/index/。</li>
<li>Django 通过在 ROOT_URLCONF 配置来决定根 URLconf。</li>
<li>Django 在 URLconf 中的所有 URL 模式中，查找第一个匹配 /index/ 的条目。</li>
<li>如果找到匹配，将调用相应的视图函数。</li>
<li>视图函数返回一个 HttpResponse。</li>
<li>Django 转换 HttpResponse 为一个适合的 HTTP response， 以 Web page 显示出来。</li>
</ul>
<h1 id="设计一个小项目">设计一个小项目</h1>
<h3 id="需求分析">需求分析</h3>
<ul>
<li>本示例完成“班级-学生”信息的维护，需要存储两种数据：班级、学生</li>
<li>班级表结构设计：</li>
<li>表名：Grade</li>
<li>班级名称：g_name</li>
<li>班级人数：g_num</li>
<li>学生表结构设计：</li>
<li>表名：Student</li>
<li>学生姓名：s_name</li>
<li>学生性别：s_gender</li>
<li>所属班级：s_grade</li>
<li>班级-学生的关系为一对多</li>
</ul>
<h3 id="数据库配置">数据库配置</h3>
<ul>
<li>在settings.py文件中，通过DATABASES项进行数据库设置</li>
<li>django支持的数据库包括：sqlite、mysql等主流数据库</li>
<li>Django默认使用SQLite数据库</li>
</ul>
<h3 id="创建应用">创建应用</h3>
<ul>
<li>在一个项目中可以创建一到多个应用，每个应用进行一种业务处理</li>
<li>创建应用的命令：</li>
</ul>
<div class="codehilite"><pre><span></span>python manage.py startapp day1_hello_django
</pre></div>


<ul>
<li>应用的目录结构如下图</li>
</ul>
<p><img alt="" src="/django项目目录结构.png" /></p>
<h3 id="定义模型类">定义模型类</h3>
<ul>
<li>有一个数据表，就有一个模型类与之对应</li>
<li>打开models.py文件，定义模型类</li>
<li>引入包from django.db import models</li>
<li>模型类继承自models.Model类</li>
<li><strong>说明：不需要定义主键列，在生成时会自动添加，并且值为自动增长</strong></li>
<li>当输出对象时，会调用对象的str方法</li>
</ul>
<div class="codehilite"><pre><span></span><span class="kn">from</span> <span class="nn">django.db</span> <span class="kn">import</span> <span class="n">models</span>

<span class="k">class</span> <span class="nc">Grade</span><span class="p">(</span><span class="n">models</span><span class="o">.</span><span class="n">Model</span><span class="p">):</span>
    <span class="n">g_name</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">CharField</span><span class="p">(</span><span class="n">max_length</span><span class="o">=</span><span class="mi">20</span><span class="p">,</span> <span class="n">db_column</span><span class="o">=</span><span class="s2">&quot;班级名称&quot;</span><span class="p">)</span>
    <span class="n">g_num</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">IntegerField</span><span class="p">(</span><span class="n">default</span><span class="o">=</span><span class="mi">30</span><span class="p">)</span>
    <span class="n">g_crete_date</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">DateTimeField</span><span class="p">(</span><span class="n">auto_now</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>

<span class="k">class</span> <span class="nc">Student</span><span class="p">(</span><span class="n">models</span><span class="o">.</span><span class="n">Model</span><span class="p">):</span>
    <span class="n">s_name</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">CharField</span><span class="p">(</span><span class="n">max_length</span><span class="o">=</span><span class="mi">20</span><span class="p">,</span> <span class="n">db_column</span><span class="o">=</span><span class="s2">&quot;姓名&quot;</span><span class="p">)</span>
    <span class="n">s_age</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">IntegerField</span><span class="p">(</span><span class="n">default</span><span class="o">=</span><span class="mi">20</span><span class="p">,</span> <span class="n">db_column</span><span class="o">=</span><span class="s2">&quot;年龄&quot;</span><span class="p">)</span>
    <span class="n">s_sex</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">BooleanField</span><span class="p">(</span><span class="n">default</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
    <span class="n">s_birthday</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">DateTimeField</span><span class="p">()</span>
    <span class="n">s_grade</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">ForeignKey</span><span class="p">(</span><span class="n">Grade</span><span class="p">)</span>

    <span class="k">class</span> <span class="nc">Meta</span><span class="p">:</span>
        <span class="n">ordering</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&quot;-s_age&quot;</span><span class="p">]</span>
        <span class="c1"># 为数据库设置别名</span>
        <span class="n">verbose_name</span> <span class="o">=</span> <span class="s2">&quot;学生表&quot;</span>
        <span class="n">verbose_name_plural</span> <span class="o">=</span> <span class="s2">&quot;学生表&quot;</span>

    <span class="k">def</span> <span class="nf">_</span> <span class="n">_str_</span> <span class="n">_</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">return</span> <span class="s2">&quot;</span><span class="si">%d</span><span class="s2">&quot;</span> <span class="o">%</span> <span class="bp">self</span><span class="o">.</span><span class="n">pk</span>
</pre></div>


<h3 id="生成数据表">生成数据表</h3>
<ul>
<li>激活模型：编辑settings.py文件，将booktest应用加入到installed_apps中</li>
</ul>
<p><img alt="1531115052424" src="/注册app.png" /></p>
<ul>
<li>生成迁移文件：根据模型类生成sql语句</li>
</ul>
<div class="codehilite"><pre><span></span>python manage.py makemigrations
</pre></div>


<ul>
<li>迁移文件被生成到应用的migrations目录</li>
</ul>
<p><img alt="1531115146872" src="/迁移文件.png" /></p>
<ul>
<li>执行迁移：执行sql语句生成数据表</li>
</ul>
<div class="codehilite"><pre><span></span>python manage.py migrate
</pre></div>


<h3 id="测试数据操作">测试数据操作</h3>
<ul>
<li>进入python shell，进行简单的模型API练习</li>
</ul>
<div class="codehilite"><pre><span></span>python manage.py shell
</pre></div>


<ul>
<li>进入shell后提示如下：</li>
</ul>
<p>![](/进入django shell.png)</p>
<ul>
<li>引入需要的包：</li>
</ul>
<div class="codehilite"><pre><span></span><span class="kn">from</span> <span class="nn">App.models</span> <span class="kn">import</span> <span class="n">Grade</span><span class="p">,</span><span class="n">Student</span>
</pre></div>


<ul>
<li>查询所有班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>Grade.objects.all()
</pre></div>


<ul>
<li>新建班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>grade = Grade()
grade.g_name = &quot;深圳python1805班&quot;
grade.g_num = 40
grade.save()
</pre></div>


<ul>
<li>查找班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>grade = Grade.objects.get(pk=1)
</pre></div>


<ul>
<li>输出班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>grade
grade.id
grade.g_name
</pre></div>


<ul>
<li>修改班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>grade.g_name=&quot;大神班&quot;
grade.save()
</pre></div>


<ul>
<li>删除班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>grade.delete()
</pre></div>


<h3 id="关联对象的操作">关联对象的操作</h3>
<ul>
<li>对于Student可以按照上面的操作方式进行</li>
<li>添加，注意添加关联对象</li>
</ul>
<div class="codehilite"><pre><span></span>s=Student()
s.s_name=&#39;张三&#39;
s.s_sex=True
s.scontent=&#39;爱好打篮球&#39;
# 注意grade为Grade的实例，上面我们已经删除了，这里需要重新创建
s.sclass=grade
s.save()
</pre></div>


<h3 id="运行项目">运行项目</h3>
<div class="codehilite"><pre><span></span>python manage.py runserver ip:port
</pre></div>


<h1 id="项目主要部分">项目主要部分</h1>
<h3 id="视图">视图</h3>
<ul>
<li>在django中，视图的作用是对路由转发过来的url进行处理</li>
<li>视图函数接收的第一个参数是request对象，request对象中包含了请求的信息</li>
<li>视图函数写每个app下的views.py文件中</li>
</ul>
<div class="codehilite"><pre><span></span><span class="kn">from</span> <span class="nn">django.shortcuts</span> <span class="kn">import</span> <span class="n">render</span>
<span class="kn">from</span> <span class="nn">django.http</span> <span class="kn">import</span> <span class="n">HttpResponse</span>

<span class="c1"># Create your views here.</span>

<span class="k">def</span> <span class="nf">index</span><span class="p">(</span><span class="n">request</span><span class="p">):</span>
    <span class="k">return</span> <span class="n">HttpResponse</span><span class="p">(</span><span class="s2">&quot;Hello Django&quot;</span><span class="p">)</span>
</pre></div>


<p>注意：视图函数的第一个参数必须是request，返回必须调用django的定义的方法规范。</p>
<h3 id="路由">路由</h3>
<ul>
<li>在视图函数写完后，要编写相应的url规则，这样当我们在浏览器上输入网址的时候才能转到相应的视图函数处理逻辑</li>
<li>只定义路径部分，不定义域名</li>
<li>路由函数的url部分遵循正则的书写方式</li>
<li>路由规则由两部分必须指定的参数和其他可选参数组成</li>
</ul>
<div class="codehilite"><pre><span></span>url(r&#39;^index/&#39;, App.index, name=&quot;index&quot;),
</pre></div>


<p>注：每次定义完路由规则，在代码的末尾添加逗号</p>
<ul>
<li>在编写路由规则之前必须导入相应的视图</li>
<li>在组织项目时，将app和项目的路由分离</li>
</ul>
<h3 id="模板">模板</h3>
<ul>
<li>
<p>模板是HTML文件，通过占位符来传递视图函数的数据</p>
</li>
<li>
<p>每个app目录下都可以创建templates的文件夹，django会自动从这些app里寻找相应的模板</p>
</li>
</ul>
<h5 id="定义模板">定义模板</h5>
<p>定义index.html模板文件</p>
<div class="codehilite"><pre><span></span><span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="p">&lt;</span><span class="nt">html</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">title</span><span class="p">&gt;</span>首页<span class="p">&lt;/</span><span class="nt">title</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">h1</span><span class="p">&gt;</span>学生列表<span class="p">&lt;/</span><span class="nt">h1</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">ul</span><span class="p">&gt;</span>
<span class="cp">{%</span><span class="k">for</span> <span class="nv">student</span> <span class="k">in</span> <span class="nv">students</span><span class="cp">%}</span>
<span class="p">&lt;</span><span class="nt">li</span><span class="p">&gt;</span>
  <span class="cp">{{</span><span class="nv">student.s_name</span><span class="cp">}}</span>
<span class="p">&lt;/</span><span class="nt">li</span><span class="p">&gt;</span>
<span class="cp">{%</span><span class="k">endfor</span><span class="cp">%}</span>
<span class="p">&lt;/</span><span class="nt">ul</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span>
</pre></div>


<p>定义detail.html模板</p>
<div class="codehilite"><pre><span></span><span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="p">&lt;</span><span class="nt">html</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">title</span><span class="p">&gt;</span>详情页<span class="p">&lt;/</span><span class="nt">title</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">h1</span><span class="p">&gt;</span>学生详情<span class="p">&lt;/</span><span class="nt">h1</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">ul</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">li</span><span class="p">&gt;</span>
  <span class="cp">{{</span><span class="nv">student.s_name</span><span class="cp">}}</span>
  <span class="cp">{{</span><span class="nv">student.s_gender</span><span class="cp">}}</span>
  <span class="cp">{{</span><span class="nv">student.s_content</span><span class="cp">}}</span>
<span class="p">&lt;/</span><span class="nt">li</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">ul</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span>
</pre></div>


<h5 id="使用模板">使用模板</h5>
<ul>
<li>定义视图</li>
</ul>
<div class="codehilite"><pre><span></span>def index(request):
    students = StudentInfo.objects.all()
    return render(request, &quot;index.html&quot;, {&quot;students&quot;:students})

def index_page(request, id):
    student = StudentInfo.objects.get(pk=id)
    return render(request, &quot;detail.html&quot;, {&quot;student&quot;:student})
</pre></div>


<ul>
<li>定义路由</li>
</ul>
<div class="codehilite"><pre><span></span>url(r&#39;index/$&#39;, class_view.index, name=&quot;index&quot;),
url(r&#39;index/(\d+)/$&#39;, class_view.index_page, name=&quot;index_page&quot;),
</pre></div>


<ul>
<li>运行项目</li>
<li>python manage.py runserver</li>
</ul>
<div class="toc">
<ul>
<li><a href="#django是个啥">Django是个啥</a></li>
<li><a href="#开发环境">开发环境</a></li>
<li><a href="#ubuntu系统和命令介绍">Ubuntu系统和命令介绍</a><ul>
<li><a href="#系统设置">系统设置</a></li>
<li><a href="#常用命令">常用命令</a></li>
</ul>
</li>
<li><a href="#bscs">BS/CS</a></li>
<li><a href="#mvcmvt">MVC/MVT</a></li>
<li><a href="#hellodjango项目">HelloDjango项目</a><ul>
<li><a href="#创建虚拟环境">创建虚拟环境</a></li>
<li><a href="#虚拟环境的优点">虚拟环境的优点</a><ul>
<li><a href="#linuxmacos-下">Linux/MacOS 下</a></li>
<li><a href="#windows-下">Windows 下：</a></li>
<li><a href="#虚拟环境使用方法">虚拟环境使用方法：</a></li>
</ul>
</li>
<li><a href="#安装django框架">安装Django框架</a></li>
<li><a href="#创建hellodjango项目">创建HelloDJango项目</a></li>
<li><a href="#django的项目结构">Django的项目结构</a></li>
<li><a href="#settingspy">settings.py</a></li>
<li><a href="#pycharm安装">Pycharm安装</a></li>
<li><a href="#创建数据库">创建数据库</a></li>
<li><a href="#创建视图">创建视图</a></li>
</ul>
</li>
<li><a href="#django请求流程">Django请求流程</a></li>
<li><a href="#设计一个小项目">设计一个小项目</a><ul>
<li><a href="#需求分析">需求分析</a></li>
<li><a href="#数据库配置">数据库配置</a></li>
<li><a href="#创建应用">创建应用</a></li>
<li><a href="#定义模型类">定义模型类</a></li>
<li><a href="#生成数据表">生成数据表</a></li>
<li><a href="#测试数据操作">测试数据操作</a></li>
<li><a href="#关联对象的操作">关联对象的操作</a></li>
<li><a href="#运行项目">运行项目</a></li>
</ul>
</li>
<li><a href="#项目主要部分">项目主要部分</a><ul>
<li><a href="#视图">视图</a></li>
<li><a href="#路由">路由</a></li>
<li><a href="#模板">模板</a><ul>
<li><a href="#定义模板">定义模板</a></li>
<li><a href="#使用模板">使用模板</a></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>

[pid: 24645|app: 0|req: 86/376] 218.13.14.215 () {42 vars in 782 bytes} [Wed Aug  1 15:43:57 2018] GET /post/3/ => generated 35800 bytes in 590 msecs (HTTP/1.1 200) 5 headers in 279 bytes (1 switches on core 1)
Not Found: /1.png
[pid: 24644|app: 0|req: 149/377] 218.13.14.215 () {42 vars in 748 bytes} [Wed Aug  1 15:43:57 2018] GET /1.png => generated 3357 bytes in 3 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 0)
Not Found: /django项目目录结构.png
[pid: 24647|app: 0|req: 50/378] 218.13.14.215 () {42 vars in 830 bytes} [Wed Aug  1 15:43:58 2018] GET /django%E9%A1%B9%E7%9B%AE%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84.png => generated 3462 bytes in 4 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 0)
Not Found: /注册app.png
Not Found: /迁移文件.png
[pid: 24647|app: 0|req: 51/379] 218.13.14.215 () {42 vars in 794 bytes} [Wed Aug  1 15:43:58 2018] GET /%E8%BF%81%E7%A7%BB%E6%96%87%E4%BB%B6.png => generated 3414 bytes in 7 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 1)
[pid: 24645|app: 0|req: 87/380] 218.13.14.215 () {42 vars in 776 bytes} [Wed Aug  1 15:43:58 2018] GET /%E6%B3%A8%E5%86%8Capp.png => generated 3393 bytes in 6 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 0)
![Alt text](/static/images/django_blog/01.jpg)

---
typora-copy-images-to: images
typora-root-url: images
---

# Django是个啥

​	最初是被开发来用于管理劳伦斯出版集团旗下的一些以新闻内容为主的网站的。并于2005年7月在BSD许可证下发布。这套框架是以比利时的吉普赛爵士吉他手Django Reinhardt来命名的。

​	Django的主要目标是使得开发复杂的、数据库驱动的网站变得简单。Django注重组件的重用性和“可插拔性”，敏捷开发和DRY法则（Don't Repeat Yourself）。在Django中Python被普遍使用，甚至包括配置文件和数据模型。

- 由 Python 开发的一个免费的开源网站框架，可以用于快速搭建高性能，优雅的网站

- Django 中提供了开发网站经常用到的模块，常见的代码都为你写好了

- Django 提供了通用Web开发模式的高度抽象，提供了频繁进行的编程作业的快速解决方法，以及为“如何解决问题”提供了清晰明了的约定。

- Django的理念是DRY(Don't Repeat Yourself)来鼓励快速开发！

  

# 开发环境

Ubuntu + Python3  + Django + PyCharm



# Ubuntu系统和命令介绍

### 系统设置

### 常用命令

- cd
- ls
- cp
- mv
- rm
- mkdir
- pwd
- touch
- cat
- history
- ps
  - ps -aux
- kill 
  - kill -9 pid
- su/sudo
- chmod
- grep
- which
- whereis
- ifconfig
- netstat
  - netstat -antp 查看网络连接状态
- wget
- ssh username@host -p
  - ssh-keygen
- tar
  - tar -zxvf 解压缩
  - tar -czvf 压缩
- du
  - du -sh
- df
  - df -h
- apt install
- apt update
- apt remove
- apt autoremove
- dpkg -i
- vi/vim

# BS/CS

​        C/S 架构即“客户端-服务器” 架构。这里的“客户端”可以是有 GUI （图形用户界面）的定制软件，也可以是浏览器，甚至可以是通过 SSH 访问服务器的命令行脚本。只要是客户端通过访问服务器调取计算或者存储资源的，统统都是 C/S 架构。所谓的 Browser-Server 架构其实是 C/S 架构的一种特殊的实现形式，而不是其对立面。

- C/S:
  - C: Client
  - S: Server
- B/S
  - B: Browser
  - S: Server       

# MVC/MVT

- MVC

  - M: Model（模型）
  - V: View（视图）
  - C: Controller（控制器）

- MVT

  - M: Model（模型），主要封装对数据库层的访问，对数据库中的数据进行增、删、改、查操作。

  - V: View（视图），用于封装结果，生成页面展示的html内容。

  - T: Template（模板），用于接收请求，处理业务逻辑，与Model和View交互，返回结果。

    ​

# HelloDjango项目

### 创建虚拟环境

### 虚拟环境的优点

- 使不同应用开发环境独立
- 环境升级不影响其他应用，也不会影响全局的python环境
- 可以防止系统中出现包管理混乱和版本冲突

开发会用 virtualenv 来管理多个开发环境

#### Linux/MacOS 下

virtualenvwrapper 使得virtualenv变得更好用，所以我们一起安装了

```
(sudo) pip install virtualenv virtualenvwrapper
```

修改~/.bash_profile或其它环境变量相关文件(如 .bashrc 或用 ZSH 之后的 .zshrc)，添加以下语句

```
export WORKON_HOME=$HOME/.virtualenvs
export PROJECT_HOME=$HOME/workspace
source /usr/local/bin/virtualenvwrapper.sh(每台机子的位置不一样，可以通过find命令找到)
```

修改后使之立即生效(也可以重启终端使之生效)：

```
source ~/.bash_profile
```



#### Windows 下：

```
pip install virtualenv virtualenvwrapper-win
```

【可选】Windows下默认虚拟环境是放在用户名下面的Envs中的，与桌面，我的文档，下载等文件夹在一块的。更改方法：计算机，属性，高级系统设置，环境变量，添加WORKON_HOME，如图（windows 10 环境变量设置截图）：

![](/1.png)

#### 虚拟环境使用方法：

- **mkvirtualenv django：创建运行环境django**

- **workon django: 工作在 django环境 或 从其它环境切换到 django环境**

- **deactivate**: 退出终端环境

- **其它的：**

- **rmvirtualenv** ENV：删除运行环境ENV

- **mkproject** mic：创建mic项目和运行环境mic

- **mktmpenv**：创建临时运行环境

- **lsvirtualenv**: 列出可用的运行环境

- **lssitepackages**: 列出当前环境安装了的包

  ​




### 安装Django框架

- pip install django==1.11.7

- 测试django是否已经安装好

  - 进入python shell

    ```python
    import django
    django.get_version()
    ```

- pip list 显示当前python环境中的所有的库

- pip freeze 显示当前python环境中的除系统内置库外的所有第三方库

### 创建HelloDJango项目

- 开启一个django项目 django-admin startproject day01_HelloDjango
- 测试django项目环境 python manage.py runserver
  - python manage.py runserver 0.0.0.0:8000 表示允许本机所有的IP被外网访问
  - python manage.py runserver 9000 使用本机运行，但端口是9000
- 开启自己的App
  - python manage.py startapp App



### Django的项目结构

1. manage.py
   - 管理整个项目
2. XXX/settings.py  
   - 项目配置文件
3. XXX/urls.py
   - 路由器，接收用户请求，分发给视图函数（控制器）
4. XXX/wsgi.py
   - 网关接口，通常用在线上环境部署（开发过程中不会接触）

### settings.py

1. DEBUG 是否打开DEBUG
2. ALLOWED_HOSTS 允许访问的主机
3. INSTALLED_APPS   安装了的应用 
4. DATABASES   数据库配置
5. LANGUAGE_CODE 中文 zh-hans
6. TIME_ZONE  中国 Asia/Shanghai



### Pycharm安装

1. 解压
2. 目录结构中会有  bin
3. 进入bin
4. bin 中pycharm.sh
5. 执行 ./pycharm.sh
6. 如果想在终端中的任何位置运行，那就配置到环境变量中



### 创建数据库

- 创建更改的文件
  - python manage.py makemigrations
- 将生成的py文件应用到数据库
  - python manage.py migrate
- 清空数据库
  - python manage.py flush
- 导入导出数据
  - python manage.py dumpdata appname > appname.json
  - python manage.py loaddata appname.json

### 创建视图

- 需要配置到工程的配置文件中settings中的INSTALLED_APPS
- views中定义函数，接收request，返回response
- 在urls中配置路由规则
  - 在根urls中配置（管理麻烦，配置简单）
  - 在App中创建自己的urls，在urls中书写规则，将urls配置到工程urls中
- 创建模板目录，在views返回时调用模板的渲染
- 变更数据库
  - 在settings中配置数据库信息



# Django请求流程

- 进来的请求转入/index/。
- Django 通过在 ROOT_URLCONF 配置来决定根 URLconf。
- Django 在 URLconf 中的所有 URL 模式中，查找第一个匹配 /index/ 的条目。
- 如果找到匹配，将调用相应的视图函数。
- 视图函数返回一个 HttpResponse。
- Django 转换 HttpResponse 为一个适合的 HTTP response， 以 Web page 显示出来。



# 设计一个小项目

### 需求分析

- 本示例完成“班级-学生”信息的维护，需要存储两种数据：班级、学生
- 班级表结构设计：
  - 表名：Grade
  - 班级名称：g_name
  - 班级人数：g_num
- 学生表结构设计：
  - 表名：Student
  - 学生姓名：s_name
  - 学生性别：s_gender
  - 所属班级：s_grade
- 班级-学生的关系为一对多

### 数据库配置

- 在settings.py文件中，通过DATABASES项进行数据库设置
- django支持的数据库包括：sqlite、mysql等主流数据库
- Django默认使用SQLite数据库

### 创建应用

- 在一个项目中可以创建一到多个应用，每个应用进行一种业务处理
- 创建应用的命令：

```
python manage.py startapp day1_hello_django
```

- 应用的目录结构如下图

![](/django项目目录结构.png)

### 定义模型类

- 有一个数据表，就有一个模型类与之对应
- 打开models.py文件，定义模型类
- 引入包from django.db import models
- 模型类继承自models.Model类
- **说明：不需要定义主键列，在生成时会自动添加，并且值为自动增长**
- 当输出对象时，会调用对象的str方法

```python
from django.db import models

class Grade(models.Model):
    g_name = models.CharField(max_length=20, db_column="班级名称")
    g_num = models.IntegerField(default=30)
    g_crete_date = models.DateTimeField(auto_now=True)

class Student(models.Model):
    s_name = models.CharField(max_length=20, db_column="姓名")
    s_age = models.IntegerField(default=20, db_column="年龄")
    s_sex = models.BooleanField(default=True)
    s_birthday = models.DateTimeField()
    s_grade = models.ForeignKey(Grade)

    class Meta:
        ordering = ["-s_age"]
        # 为数据库设置别名
        verbose_name = "学生表"
    	verbose_name_plural = "学生表"
        
    def _ _str_ _(self):
        return "%d" % self.pk
```

### 生成数据表

- 激活模型：编辑settings.py文件，将booktest应用加入到installed_apps中

  ![1531115052424](/注册app.png)

- 生成迁移文件：根据模型类生成sql语句

```
python manage.py makemigrations
```

- 迁移文件被生成到应用的migrations目录

![1531115146872](/迁移文件.png)

- 执行迁移：执行sql语句生成数据表

```
python manage.py migrate
```

### 测试数据操作

- 进入python shell，进行简单的模型API练习

```
python manage.py shell
```

- 进入shell后提示如下：

![](/进入django shell.png)

- 引入需要的包：

```
from App.models import Grade,Student
```

- 查询所有班级信息：

```
Grade.objects.all()
```

- 新建班级信息：

```
grade = Grade()
grade.g_name = "深圳python1805班"
grade.g_num = 40
grade.save()
```

- 查找班级信息：

```
grade = Grade.objects.get(pk=1)
```

- 输出班级信息：

```
grade
grade.id
grade.g_name
```

- 修改班级信息：

```
grade.g_name="大神班"
grade.save()
```

- 删除班级信息：

```
grade.delete()
```

### 关联对象的操作

- 对于Student可以按照上面的操作方式进行
- 添加，注意添加关联对象

```
s=Student()
s.s_name='张三'
s.s_sex=True
s.scontent='爱好打篮球'
# 注意grade为Grade的实例，上面我们已经删除了，这里需要重新创建
s.sclass=grade
s.save()
```

### 运行项目

```
python manage.py runserver ip:port
```



# 项目主要部分

### 视图

- 在django中，视图的作用是对路由转发过来的url进行处理
- 视图函数接收的第一个参数是request对象，request对象中包含了请求的信息
- 视图函数写每个app下的views.py文件中

```
from django.shortcuts import render
from django.http import HttpResponse

# Create your views here.

def index(request):
    return HttpResponse("Hello Django")
```

注意：视图函数的第一个参数必须是request，返回必须调用django的定义的方法规范。

### 路由

- 在视图函数写完后，要编写相应的url规则，这样当我们在浏览器上输入网址的时候才能转到相应的视图函数处理逻辑
- 只定义路径部分，不定义域名
- 路由函数的url部分遵循正则的书写方式
- 路由规则由两部分必须指定的参数和其他可选参数组成

```
url(r'^index/', App.index, name="index"),
```

注：每次定义完路由规则，在代码的末尾添加逗号

- 在编写路由规则之前必须导入相应的视图
- 在组织项目时，将app和项目的路由分离



### 模板

- 模板是HTML文件，通过占位符来传递视图函数的数据

- 每个app目录下都可以创建templates的文件夹，django会自动从这些app里寻找相应的模板

  

##### 定义模板

定义index.html模板文件

```
<!DOCTYPE html>
<html>
<head>
  <title>首页</title>
</head>
<body>
<h1>学生列表</h1>
<ul>
{%for student in students%}
<li>
  {{student.s_name}}
</li>
{%endfor%}
</ul>
</body>
</html>
```

定义detail.html模板

```
<!DOCTYPE html>
<html>
<head>
  <title>详情页</title>
</head>
<body>
<h1>学生详情</h1>
<ul>
<li>
  {{student.s_name}}
  {{student.s_gender}}
  {{student.s_content}}
</li>
</ul>
</body>
</html>
```

##### 使用模板

- 定义视图

```
def index(request):
    students = StudentInfo.objects.all()
    return render(request, "index.html", {"students":students})

def index_page(request, id):
    student = StudentInfo.objects.get(pk=id)
    return render(request, "detail.html", {"student":student})
```

- 定义路由

```
url(r'index/$', class_view.index, name="index"),
url(r'index/(\d+)/$', class_view.index_page, name="index_page"),
```

- 运行项目
  - python manage.py runserver
------------------------------------------------------------------------------------------------------------------------
<p><img alt="Alt text" src="/static/images/django_blog/01.jpg" /></p>
<hr />
<p>typora-copy-images-to: images
typora-root-url: images</p>
<hr />
<h1 id="django是个啥">Django是个啥</h1>
<p>​   最初是被开发来用于管理劳伦斯出版集团旗下的一些以新闻内容为主的网站的。并于2005年7月在BSD许可证下发布。这套框架是以比利时的吉普赛爵士吉他手Django Reinhardt来命名的。</p>
<p>​   Django的主要目标是使得开发复杂的、数据库驱动的网站变得简单。Django注重组件的重用性和“可插拔性”，敏捷开发和DRY法则（Don't Repeat Yourself）。在Django中Python被普遍使用，甚至包括配置文件和数据模型。</p>
<ul>
<li>
<p>由 Python 开发的一个免费的开源网站框架，可以用于快速搭建高性能，优雅的网站</p>
</li>
<li>
<p>Django 中提供了开发网站经常用到的模块，常见的代码都为你写好了</p>
</li>
<li>
<p>Django 提供了通用Web开发模式的高度抽象，提供了频繁进行的编程作业的快速解决方法，以及为“如何解决问题”提供了清晰明了的约定。</p>
</li>
<li>
<p>Django的理念是DRY(Don't Repeat Yourself)来鼓励快速开发！</p>
</li>
</ul>
<h1 id="开发环境">开发环境</h1>
<p>Ubuntu + Python3  + Django + PyCharm</p>
<h1 id="ubuntu系统和命令介绍">Ubuntu系统和命令介绍</h1>
<h3 id="系统设置">系统设置</h3>
<h3 id="常用命令">常用命令</h3>
<ul>
<li>cd</li>
<li>ls</li>
<li>cp</li>
<li>mv</li>
<li>rm</li>
<li>mkdir</li>
<li>pwd</li>
<li>touch</li>
<li>cat</li>
<li>history</li>
<li>ps</li>
<li>ps -aux</li>
<li>kill </li>
<li>kill -9 pid</li>
<li>su/sudo</li>
<li>chmod</li>
<li>grep</li>
<li>which</li>
<li>whereis</li>
<li>ifconfig</li>
<li>netstat</li>
<li>netstat -antp 查看网络连接状态</li>
<li>wget</li>
<li>ssh username@host -p</li>
<li>ssh-keygen</li>
<li>tar</li>
<li>tar -zxvf 解压缩</li>
<li>tar -czvf 压缩</li>
<li>du</li>
<li>du -sh</li>
<li>df</li>
<li>df -h</li>
<li>apt install</li>
<li>apt update</li>
<li>apt remove</li>
<li>apt autoremove</li>
<li>dpkg -i</li>
<li>vi/vim</li>
</ul>
<h1 id="bscs">BS/CS</h1>
<p>​        C/S 架构即“客户端-服务器” 架构。这里的“客户端”可以是有 GUI （图形用户界面）的定制软件，也可以是浏览器，甚至可以是通过 SSH 访问服务器的命令行脚本。只要是客户端通过访问服务器调取计算或者存储资源的，统统都是 C/S 架构。所谓的 Browser-Server 架构其实是 C/S 架构的一种特殊的实现形式，而不是其对立面。</p>
<ul>
<li>C/S:</li>
<li>C: Client</li>
<li>S: Server</li>
<li>B/S</li>
<li>B: Browser</li>
<li>S: Server       </li>
</ul>
<h1 id="mvcmvt">MVC/MVT</h1>
<ul>
<li>
<p>MVC</p>
</li>
<li>
<p>M: Model（模型）</p>
</li>
<li>V: View（视图）</li>
<li>
<p>C: Controller（控制器）</p>
</li>
<li>
<p>MVT</p>
</li>
<li>
<p>M: Model（模型），主要封装对数据库层的访问，对数据库中的数据进行增、删、改、查操作。</p>
</li>
<li>
<p>V: View（视图），用于封装结果，生成页面展示的html内容。</p>
</li>
<li>
<p>T: Template（模板），用于接收请求，处理业务逻辑，与Model和View交互，返回结果。</p>
<p>​</p>
</li>
</ul>
<h1 id="hellodjango项目">HelloDjango项目</h1>
<h3 id="创建虚拟环境">创建虚拟环境</h3>
<h3 id="虚拟环境的优点">虚拟环境的优点</h3>
<ul>
<li>使不同应用开发环境独立</li>
<li>环境升级不影响其他应用，也不会影响全局的python环境</li>
<li>可以防止系统中出现包管理混乱和版本冲突</li>
</ul>
<p>开发会用 virtualenv 来管理多个开发环境</p>
<h4 id="linuxmacos-下">Linux/MacOS 下</h4>
<p>virtualenvwrapper 使得virtualenv变得更好用，所以我们一起安装了</p>
<div class="codehilite"><pre><span></span>(sudo) pip install virtualenv virtualenvwrapper
</pre></div>


<p>修改~/.bash_profile或其它环境变量相关文件(如 .bashrc 或用 ZSH 之后的 .zshrc)，添加以下语句</p>
<div class="codehilite"><pre><span></span>export WORKON_HOME=$HOME/.virtualenvs
export PROJECT_HOME=$HOME/workspace
source /usr/local/bin/virtualenvwrapper.sh(每台机子的位置不一样，可以通过find命令找到)
</pre></div>


<p>修改后使之立即生效(也可以重启终端使之生效)：</p>
<div class="codehilite"><pre><span></span>source ~/.bash_profile
</pre></div>


<h4 id="windows-下">Windows 下：</h4>
<div class="codehilite"><pre><span></span>pip install virtualenv virtualenvwrapper-win
</pre></div>


<p>【可选】Windows下默认虚拟环境是放在用户名下面的Envs中的，与桌面，我的文档，下载等文件夹在一块的。更改方法：计算机，属性，高级系统设置，环境变量，添加WORKON_HOME，如图（windows 10 环境变量设置截图）：</p>
<p><img alt="" src="/1.png" /></p>
<h4 id="虚拟环境使用方法">虚拟环境使用方法：</h4>
<ul>
<li>
<p><strong>mkvirtualenv django：创建运行环境django</strong></p>
</li>
<li>
<p><strong>workon django: 工作在 django环境 或 从其它环境切换到 django环境</strong></p>
</li>
<li>
<p><strong>deactivate</strong>: 退出终端环境</p>
</li>
<li>
<p><strong>其它的：</strong></p>
</li>
<li>
<p><strong>rmvirtualenv</strong> ENV：删除运行环境ENV</p>
</li>
<li>
<p><strong>mkproject</strong> mic：创建mic项目和运行环境mic</p>
</li>
<li>
<p><strong>mktmpenv</strong>：创建临时运行环境</p>
</li>
<li>
<p><strong>lsvirtualenv</strong>: 列出可用的运行环境</p>
</li>
<li>
<p><strong>lssitepackages</strong>: 列出当前环境安装了的包</p>
</li>
</ul>
<p>​</p>
<h3 id="安装django框架">安装Django框架</h3>
<ul>
<li>
<p>pip install django==1.11.7</p>
</li>
<li>
<p>测试django是否已经安装好</p>
</li>
<li>
<p>进入python shell</p>
<p><code>python
import django
django.get_version()</code></p>
</li>
<li>
<p>pip list 显示当前python环境中的所有的库</p>
</li>
<li>
<p>pip freeze 显示当前python环境中的除系统内置库外的所有第三方库</p>
</li>
</ul>
<h3 id="创建hellodjango项目">创建HelloDJango项目</h3>
<ul>
<li>开启一个django项目 django-admin startproject day01_HelloDjango</li>
<li>测试django项目环境 python manage.py runserver</li>
<li>python manage.py runserver 0.0.0.0:8000 表示允许本机所有的IP被外网访问</li>
<li>python manage.py runserver 9000 使用本机运行，但端口是9000</li>
<li>开启自己的App</li>
<li>python manage.py startapp App</li>
</ul>
<h3 id="django的项目结构">Django的项目结构</h3>
<ol>
<li>manage.py</li>
<li>管理整个项目</li>
<li>XXX/settings.py  </li>
<li>项目配置文件</li>
<li>XXX/urls.py</li>
<li>路由器，接收用户请求，分发给视图函数（控制器）</li>
<li>XXX/wsgi.py</li>
<li>网关接口，通常用在线上环境部署（开发过程中不会接触）</li>
</ol>
<h3 id="settingspy">settings.py</h3>
<ol>
<li>DEBUG 是否打开DEBUG</li>
<li>ALLOWED_HOSTS 允许访问的主机</li>
<li>INSTALLED_APPS   安装了的应用 </li>
<li>DATABASES   数据库配置</li>
<li>LANGUAGE_CODE 中文 zh-hans</li>
<li>TIME_ZONE  中国 Asia/Shanghai</li>
</ol>
<h3 id="pycharm安装">Pycharm安装</h3>
<ol>
<li>解压</li>
<li>目录结构中会有  bin</li>
<li>进入bin</li>
<li>bin 中pycharm.sh</li>
<li>执行 ./pycharm.sh</li>
<li>如果想在终端中的任何位置运行，那就配置到环境变量中</li>
</ol>
<h3 id="创建数据库">创建数据库</h3>
<ul>
<li>创建更改的文件</li>
<li>python manage.py makemigrations</li>
<li>将生成的py文件应用到数据库</li>
<li>python manage.py migrate</li>
<li>清空数据库</li>
<li>python manage.py flush</li>
<li>导入导出数据</li>
<li>python manage.py dumpdata appname &gt; appname.json</li>
<li>python manage.py loaddata appname.json</li>
</ul>
<h3 id="创建视图">创建视图</h3>
<ul>
<li>需要配置到工程的配置文件中settings中的INSTALLED_APPS</li>
<li>views中定义函数，接收request，返回response</li>
<li>在urls中配置路由规则</li>
<li>在根urls中配置（管理麻烦，配置简单）</li>
<li>在App中创建自己的urls，在urls中书写规则，将urls配置到工程urls中</li>
<li>创建模板目录，在views返回时调用模板的渲染</li>
<li>变更数据库</li>
<li>在settings中配置数据库信息</li>
</ul>
<h1 id="django请求流程">Django请求流程</h1>
<ul>
<li>进来的请求转入/index/。</li>
<li>Django 通过在 ROOT_URLCONF 配置来决定根 URLconf。</li>
<li>Django 在 URLconf 中的所有 URL 模式中，查找第一个匹配 /index/ 的条目。</li>
<li>如果找到匹配，将调用相应的视图函数。</li>
<li>视图函数返回一个 HttpResponse。</li>
<li>Django 转换 HttpResponse 为一个适合的 HTTP response， 以 Web page 显示出来。</li>
</ul>
<h1 id="设计一个小项目">设计一个小项目</h1>
<h3 id="需求分析">需求分析</h3>
<ul>
<li>本示例完成“班级-学生”信息的维护，需要存储两种数据：班级、学生</li>
<li>班级表结构设计：</li>
<li>表名：Grade</li>
<li>班级名称：g_name</li>
<li>班级人数：g_num</li>
<li>学生表结构设计：</li>
<li>表名：Student</li>
<li>学生姓名：s_name</li>
<li>学生性别：s_gender</li>
<li>所属班级：s_grade</li>
<li>班级-学生的关系为一对多</li>
</ul>
<h3 id="数据库配置">数据库配置</h3>
<ul>
<li>在settings.py文件中，通过DATABASES项进行数据库设置</li>
<li>django支持的数据库包括：sqlite、mysql等主流数据库</li>
<li>Django默认使用SQLite数据库</li>
</ul>
<h3 id="创建应用">创建应用</h3>
<ul>
<li>在一个项目中可以创建一到多个应用，每个应用进行一种业务处理</li>
<li>创建应用的命令：</li>
</ul>
<div class="codehilite"><pre><span></span>python manage.py startapp day1_hello_django
</pre></div>


<ul>
<li>应用的目录结构如下图</li>
</ul>
<p><img alt="" src="/django项目目录结构.png" /></p>
<h3 id="定义模型类">定义模型类</h3>
<ul>
<li>有一个数据表，就有一个模型类与之对应</li>
<li>打开models.py文件，定义模型类</li>
<li>引入包from django.db import models</li>
<li>模型类继承自models.Model类</li>
<li><strong>说明：不需要定义主键列，在生成时会自动添加，并且值为自动增长</strong></li>
<li>当输出对象时，会调用对象的str方法</li>
</ul>
<div class="codehilite"><pre><span></span><span class="kn">from</span> <span class="nn">django.db</span> <span class="kn">import</span> <span class="n">models</span>

<span class="k">class</span> <span class="nc">Grade</span><span class="p">(</span><span class="n">models</span><span class="o">.</span><span class="n">Model</span><span class="p">):</span>
    <span class="n">g_name</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">CharField</span><span class="p">(</span><span class="n">max_length</span><span class="o">=</span><span class="mi">20</span><span class="p">,</span> <span class="n">db_column</span><span class="o">=</span><span class="s2">&quot;班级名称&quot;</span><span class="p">)</span>
    <span class="n">g_num</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">IntegerField</span><span class="p">(</span><span class="n">default</span><span class="o">=</span><span class="mi">30</span><span class="p">)</span>
    <span class="n">g_crete_date</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">DateTimeField</span><span class="p">(</span><span class="n">auto_now</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>

<span class="k">class</span> <span class="nc">Student</span><span class="p">(</span><span class="n">models</span><span class="o">.</span><span class="n">Model</span><span class="p">):</span>
    <span class="n">s_name</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">CharField</span><span class="p">(</span><span class="n">max_length</span><span class="o">=</span><span class="mi">20</span><span class="p">,</span> <span class="n">db_column</span><span class="o">=</span><span class="s2">&quot;姓名&quot;</span><span class="p">)</span>
    <span class="n">s_age</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">IntegerField</span><span class="p">(</span><span class="n">default</span><span class="o">=</span><span class="mi">20</span><span class="p">,</span> <span class="n">db_column</span><span class="o">=</span><span class="s2">&quot;年龄&quot;</span><span class="p">)</span>
    <span class="n">s_sex</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">BooleanField</span><span class="p">(</span><span class="n">default</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
    <span class="n">s_birthday</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">DateTimeField</span><span class="p">()</span>
    <span class="n">s_grade</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">ForeignKey</span><span class="p">(</span><span class="n">Grade</span><span class="p">)</span>

    <span class="k">class</span> <span class="nc">Meta</span><span class="p">:</span>
        <span class="n">ordering</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&quot;-s_age&quot;</span><span class="p">]</span>
        <span class="c1"># 为数据库设置别名</span>
        <span class="n">verbose_name</span> <span class="o">=</span> <span class="s2">&quot;学生表&quot;</span>
        <span class="n">verbose_name_plural</span> <span class="o">=</span> <span class="s2">&quot;学生表&quot;</span>

    <span class="k">def</span> <span class="nf">_</span> <span class="n">_str_</span> <span class="n">_</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">return</span> <span class="s2">&quot;</span><span class="si">%d</span><span class="s2">&quot;</span> <span class="o">%</span> <span class="bp">self</span><span class="o">.</span><span class="n">pk</span>
</pre></div>


<h3 id="生成数据表">生成数据表</h3>
<ul>
<li>激活模型：编辑settings.py文件，将booktest应用加入到installed_apps中</li>
</ul>
<p><img alt="1531115052424" src="/注册app.png" /></p>
<ul>
<li>生成迁移文件：根据模型类生成sql语句</li>
</ul>
<div class="codehilite"><pre><span></span>python manage.py makemigrations
</pre></div>


<ul>
<li>迁移文件被生成到应用的migrations目录</li>
</ul>
<p><img alt="1531115146872" src="/迁移文件.png" /></p>
<ul>
<li>执行迁移：执行sql语句生成数据表</li>
</ul>
<div class="codehilite"><pre><span></span>python manage.py migrate
</pre></div>


<h3 id="测试数据操作">测试数据操作</h3>
<ul>
<li>进入python shell，进行简单的模型API练习</li>
</ul>
<div class="codehilite"><pre><span></span>python manage.py shell
</pre></div>


<ul>
<li>进入shell后提示如下：</li>
</ul>
<p>![](/进入django shell.png)</p>
<ul>
<li>引入需要的包：</li>
</ul>
<div class="codehilite"><pre><span></span><span class="kn">from</span> <span class="nn">App.models</span> <span class="kn">import</span> <span class="n">Grade</span><span class="p">,</span><span class="n">Student</span>
</pre></div>


<ul>
<li>查询所有班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>Grade.objects.all()
</pre></div>


<ul>
<li>新建班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>grade = Grade()
grade.g_name = &quot;深圳python1805班&quot;
grade.g_num = 40
grade.save()
</pre></div>


<ul>
<li>查找班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>grade = Grade.objects.get(pk=1)
</pre></div>


<ul>
<li>输出班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>grade
grade.id
grade.g_name
</pre></div>


<ul>
<li>修改班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>grade.g_name=&quot;大神班&quot;
grade.save()
</pre></div>


<ul>
<li>删除班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>grade.delete()
</pre></div>


<h3 id="关联对象的操作">关联对象的操作</h3>
<ul>
<li>对于Student可以按照上面的操作方式进行</li>
<li>添加，注意添加关联对象</li>
</ul>
<div class="codehilite"><pre><span></span>s=Student()
s.s_name=&#39;张三&#39;
s.s_sex=True
s.scontent=&#39;爱好打篮球&#39;
# 注意grade为Grade的实例，上面我们已经删除了，这里需要重新创建
s.sclass=grade
s.save()
</pre></div>


<h3 id="运行项目">运行项目</h3>
<div class="codehilite"><pre><span></span>python manage.py runserver ip:port
</pre></div>


<h1 id="项目主要部分">项目主要部分</h1>
<h3 id="视图">视图</h3>
<ul>
<li>在django中，视图的作用是对路由转发过来的url进行处理</li>
<li>视图函数接收的第一个参数是request对象，request对象中包含了请求的信息</li>
<li>视图函数写每个app下的views.py文件中</li>
</ul>
<div class="codehilite"><pre><span></span><span class="kn">from</span> <span class="nn">django.shortcuts</span> <span class="kn">import</span> <span class="n">render</span>
<span class="kn">from</span> <span class="nn">django.http</span> <span class="kn">import</span> <span class="n">HttpResponse</span>

<span class="c1"># Create your views here.</span>

<span class="k">def</span> <span class="nf">index</span><span class="p">(</span><span class="n">request</span><span class="p">):</span>
    <span class="k">return</span> <span class="n">HttpResponse</span><span class="p">(</span><span class="s2">&quot;Hello Django&quot;</span><span class="p">)</span>
</pre></div>


<p>注意：视图函数的第一个参数必须是request，返回必须调用django的定义的方法规范。</p>
<h3 id="路由">路由</h3>
<ul>
<li>在视图函数写完后，要编写相应的url规则，这样当我们在浏览器上输入网址的时候才能转到相应的视图函数处理逻辑</li>
<li>只定义路径部分，不定义域名</li>
<li>路由函数的url部分遵循正则的书写方式</li>
<li>路由规则由两部分必须指定的参数和其他可选参数组成</li>
</ul>
<div class="codehilite"><pre><span></span>url(r&#39;^index/&#39;, App.index, name=&quot;index&quot;),
</pre></div>


<p>注：每次定义完路由规则，在代码的末尾添加逗号</p>
<ul>
<li>在编写路由规则之前必须导入相应的视图</li>
<li>在组织项目时，将app和项目的路由分离</li>
</ul>
<h3 id="模板">模板</h3>
<ul>
<li>
<p>模板是HTML文件，通过占位符来传递视图函数的数据</p>
</li>
<li>
<p>每个app目录下都可以创建templates的文件夹，django会自动从这些app里寻找相应的模板</p>
</li>
</ul>
<h5 id="定义模板">定义模板</h5>
<p>定义index.html模板文件</p>
<div class="codehilite"><pre><span></span><span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="p">&lt;</span><span class="nt">html</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">title</span><span class="p">&gt;</span>首页<span class="p">&lt;/</span><span class="nt">title</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">h1</span><span class="p">&gt;</span>学生列表<span class="p">&lt;/</span><span class="nt">h1</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">ul</span><span class="p">&gt;</span>
<span class="cp">{%</span><span class="k">for</span> <span class="nv">student</span> <span class="k">in</span> <span class="nv">students</span><span class="cp">%}</span>
<span class="p">&lt;</span><span class="nt">li</span><span class="p">&gt;</span>
  <span class="cp">{{</span><span class="nv">student.s_name</span><span class="cp">}}</span>
<span class="p">&lt;/</span><span class="nt">li</span><span class="p">&gt;</span>
<span class="cp">{%</span><span class="k">endfor</span><span class="cp">%}</span>
<span class="p">&lt;/</span><span class="nt">ul</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span>
</pre></div>


<p>定义detail.html模板</p>
<div class="codehilite"><pre><span></span><span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="p">&lt;</span><span class="nt">html</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">title</span><span class="p">&gt;</span>详情页<span class="p">&lt;/</span><span class="nt">title</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">h1</span><span class="p">&gt;</span>学生详情<span class="p">&lt;/</span><span class="nt">h1</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">ul</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">li</span><span class="p">&gt;</span>
  <span class="cp">{{</span><span class="nv">student.s_name</span><span class="cp">}}</span>
  <span class="cp">{{</span><span class="nv">student.s_gender</span><span class="cp">}}</span>
  <span class="cp">{{</span><span class="nv">student.s_content</span><span class="cp">}}</span>
<span class="p">&lt;/</span><span class="nt">li</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">ul</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span>
</pre></div>


<h5 id="使用模板">使用模板</h5>
<ul>
<li>定义视图</li>
</ul>
<div class="codehilite"><pre><span></span>def index(request):
    students = StudentInfo.objects.all()
    return render(request, &quot;index.html&quot;, {&quot;students&quot;:students})

def index_page(request, id):
    student = StudentInfo.objects.get(pk=id)
    return render(request, &quot;detail.html&quot;, {&quot;student&quot;:student})
</pre></div>


<ul>
<li>定义路由</li>
</ul>
<div class="codehilite"><pre><span></span>url(r&#39;index/$&#39;, class_view.index, name=&quot;index&quot;),
url(r&#39;index/(\d+)/$&#39;, class_view.index_page, name=&quot;index_page&quot;),
</pre></div>


<ul>
<li>运行项目</li>
<li>python manage.py runserver</li>
</ul>
<div class="toc">
<ul>
<li><a href="#django是个啥">Django是个啥</a></li>
<li><a href="#开发环境">开发环境</a></li>
<li><a href="#ubuntu系统和命令介绍">Ubuntu系统和命令介绍</a><ul>
<li><a href="#系统设置">系统设置</a></li>
<li><a href="#常用命令">常用命令</a></li>
</ul>
</li>
<li><a href="#bscs">BS/CS</a></li>
<li><a href="#mvcmvt">MVC/MVT</a></li>
<li><a href="#hellodjango项目">HelloDjango项目</a><ul>
<li><a href="#创建虚拟环境">创建虚拟环境</a></li>
<li><a href="#虚拟环境的优点">虚拟环境的优点</a><ul>
<li><a href="#linuxmacos-下">Linux/MacOS 下</a></li>
<li><a href="#windows-下">Windows 下：</a></li>
<li><a href="#虚拟环境使用方法">虚拟环境使用方法：</a></li>
</ul>
</li>
<li><a href="#安装django框架">安装Django框架</a></li>
<li><a href="#创建hellodjango项目">创建HelloDJango项目</a></li>
<li><a href="#django的项目结构">Django的项目结构</a></li>
<li><a href="#settingspy">settings.py</a></li>
<li><a href="#pycharm安装">Pycharm安装</a></li>
<li><a href="#创建数据库">创建数据库</a></li>
<li><a href="#创建视图">创建视图</a></li>
</ul>
</li>
<li><a href="#django请求流程">Django请求流程</a></li>
<li><a href="#设计一个小项目">设计一个小项目</a><ul>
<li><a href="#需求分析">需求分析</a></li>
<li><a href="#数据库配置">数据库配置</a></li>
<li><a href="#创建应用">创建应用</a></li>
<li><a href="#定义模型类">定义模型类</a></li>
<li><a href="#生成数据表">生成数据表</a></li>
<li><a href="#测试数据操作">测试数据操作</a></li>
<li><a href="#关联对象的操作">关联对象的操作</a></li>
<li><a href="#运行项目">运行项目</a></li>
</ul>
</li>
<li><a href="#项目主要部分">项目主要部分</a><ul>
<li><a href="#视图">视图</a></li>
<li><a href="#路由">路由</a></li>
<li><a href="#模板">模板</a><ul>
<li><a href="#定义模板">定义模板</a></li>
<li><a href="#使用模板">使用模板</a></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>

[pid: 24644|app: 0|req: 150/381] 113.92.93.76 () {46 vars in 973 bytes} [Wed Aug  1 15:50:23 2018] GET /post/3/ => generated 35820 bytes in 940 msecs (HTTP/1.1 200) 5 headers in 279 bytes (1 switches on core 1)
Not Found: /1.png
[pid: 24644|app: 0|req: 151/382] 113.92.93.76 () {44 vars in 908 bytes} [Wed Aug  1 15:50:24 2018] GET /1.png => generated 3357 bytes in 3 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 0)
Not Found: /django项目目录结构.png
[pid: 24647|app: 0|req: 52/383] 113.92.93.76 () {44 vars in 990 bytes} [Wed Aug  1 15:50:25 2018] GET /django%E9%A1%B9%E7%9B%AE%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84.png => generated 3462 bytes in 5 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 1)
Not Found: /注册app.png
[pid: 24646|app: 0|req: 82/384] 113.92.93.76 () {44 vars in 936 bytes} [Wed Aug  1 15:50:25 2018] GET /%E6%B3%A8%E5%86%8Capp.png => generated 3393 bytes in 3 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 0)
Not Found: /迁移文件.png
[pid: 24646|app: 0|req: 83/385] 113.92.93.76 () {44 vars in 954 bytes} [Wed Aug  1 15:50:25 2018] GET /%E8%BF%81%E7%A7%BB%E6%96%87%E4%BB%B6.png => generated 3414 bytes in 3 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24647|app: 0|req: 53/386] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug  1 16:39:55 2018] GET / => generated 10360 bytes in 49 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 24646|app: 0|req: 84/387] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug  1 17:40:03 2018] GET / => generated 10360 bytes in 46 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24645|app: 0|req: 88/388] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug  1 18:39:54 2018] GET / => generated 10360 bytes in 45 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 24644|app: 0|req: 152/389] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug  1 19:39:52 2018] GET / => generated 10360 bytes in 30 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 24647|app: 0|req: 54/390] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug  1 20:39:55 2018] GET / => generated 10360 bytes in 27 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 24645|app: 0|req: 89/391] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug  1 21:39:51 2018] GET / => generated 10360 bytes in 50 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24646|app: 0|req: 85/392] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug  1 22:39:50 2018] GET / => generated 10360 bytes in 40 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
[pid: 24646|app: 0|req: 86/393] 163.125.179.49 () {46 vars in 1045 bytes} [Wed Aug  1 23:20:46 2018] GET /admin/blog/category/add/ => generated 3837 bytes in 33 msecs (HTTP/1.1 200) 7 headers in 381 bytes (1 switches on core 1)
Not Found: /1.png
[pid: 24644|app: 0|req: 153/394] 163.125.179.49 () {44 vars in 909 bytes} [Wed Aug  1 23:20:48 2018] GET /1.png => generated 3357 bytes in 3 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24647|app: 0|req: 55/395] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug  1 23:39:51 2018] GET / => generated 10360 bytes in 28 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 24644|app: 0|req: 154/396] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug  2 00:39:53 2018] GET / => generated 10360 bytes in 25 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24647|app: 0|req: 56/397] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug  2 01:39:50 2018] GET / => generated 10360 bytes in 29 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 24646|app: 0|req: 87/398] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug  2 02:39:54 2018] GET / => generated 10360 bytes in 30 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24646|app: 0|req: 88/399] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug  2 03:39:53 2018] GET / => generated 10360 bytes in 45 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24647|app: 0|req: 57/400] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug  2 04:39:52 2018] GET / => generated 10360 bytes in 41 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24646|app: 0|req: 89/401] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug  2 05:39:49 2018] GET / => generated 10360 bytes in 61 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 24645|app: 0|req: 90/402] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug  2 06:39:51 2018] GET / => generated 10360 bytes in 48 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 24646|app: 0|req: 90/403] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug  2 07:39:48 2018] GET / => generated 10360 bytes in 25 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 24647|app: 0|req: 58/404] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug  2 08:39:51 2018] GET / => generated 10360 bytes in 22 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
[pid: 24644|app: 0|req: 155/405] 116.88.86.27 () {26 vars in 272 bytes} [Thu Aug  2 08:44:23 2018] GET / => generated 10360 bytes in 27 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 24644|app: 0|req: 156/406] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug  2 09:39:53 2018] GET / => generated 10360 bytes in 67 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 24645|app: 0|req: 91/407] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug  2 10:39:50 2018] GET / => generated 10360 bytes in 25 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24644|app: 0|req: 157/408] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug  2 11:39:48 2018] GET / => generated 10360 bytes in 21 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 24646|app: 0|req: 91/409] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug  2 12:39:50 2018] GET / => generated 10360 bytes in 21 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24647|app: 0|req: 59/410] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug  2 13:39:50 2018] GET / => generated 10360 bytes in 60 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 24644|app: 0|req: 158/411] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug  2 14:39:49 2018] GET / => generated 10360 bytes in 28 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24646|app: 0|req: 92/412] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug  2 15:39:54 2018] GET / => generated 10360 bytes in 27 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24647|app: 0|req: 60/413] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug  2 16:39:49 2018] GET / => generated 10360 bytes in 22 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24645|app: 0|req: 92/414] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug  2 17:39:52 2018] GET / => generated 10360 bytes in 40 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24646|app: 0|req: 93/415] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug  2 18:39:49 2018] GET / => generated 10360 bytes in 57 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 24647|app: 0|req: 61/416] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug  2 19:39:49 2018] GET / => generated 10360 bytes in 42 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24646|app: 0|req: 94/417] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug  2 20:39:49 2018] GET / => generated 10360 bytes in 27 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24647|app: 0|req: 62/418] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug  2 21:39:51 2018] GET / => generated 10360 bytes in 22 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24647|app: 0|req: 63/419] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug  2 22:39:49 2018] GET / => generated 10360 bytes in 36 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24646|app: 0|req: 95/420] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug  2 23:39:51 2018] GET / => generated 10360 bytes in 23 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
[pid: 24646|app: 0|req: 96/421] 124.248.237.226 () {40 vars in 577 bytes} [Fri Aug  3 00:35:13 2018] GET / => generated 10360 bytes in 52 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24647|app: 0|req: 64/422] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug  3 00:39:50 2018] GET / => generated 10360 bytes in 22 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24646|app: 0|req: 97/423] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug  3 01:39:51 2018] GET / => generated 10360 bytes in 34 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24645|app: 0|req: 93/424] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug  3 02:39:51 2018] GET / => generated 10360 bytes in 24 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 24645|app: 0|req: 94/425] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug  3 03:39:50 2018] GET / => generated 10360 bytes in 52 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 24646|app: 0|req: 98/426] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug  3 04:39:47 2018] GET / => generated 10360 bytes in 39 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
[pid: 24644|app: 0|req: 159/427] 168.1.128.53 () {30 vars in 396 bytes} [Fri Aug  3 04:50:15 2018] GET / => generated 10360 bytes in 23 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 24645|app: 0|req: 95/428] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug  3 05:39:48 2018] GET / => generated 10360 bytes in 42 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 24646|app: 0|req: 99/429] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug  3 06:39:48 2018] GET / => generated 10360 bytes in 40 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 24647|app: 0|req: 65/430] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug  3 07:39:46 2018] GET / => generated 10360 bytes in 55 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 24647|app: 0|req: 66/431] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug  3 08:39:49 2018] GET / => generated 10360 bytes in 25 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 24647|app: 0|req: 67/432] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug  3 09:39:58 2018] GET / => generated 10360 bytes in 33 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 24644|app: 0|req: 160/433] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug  3 10:39:51 2018] GET / => generated 10360 bytes in 44 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 24647|app: 0|req: 68/434] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug  3 11:39:51 2018] GET / => generated 10360 bytes in 56 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 24647|app: 0|req: 69/435] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug  3 12:39:54 2018] GET / => generated 10360 bytes in 57 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24646|app: 0|req: 100/436] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug  3 13:39:52 2018] GET / => generated 10360 bytes in 31 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
[pid: 24646|app: 0|req: 101/437] 66.102.6.125 () {38 vars in 637 bytes} [Fri Aug  3 13:56:35 2018] GET /admin/ => generated 0 bytes in 5 msecs (HTTP/1.1 302) 7 headers in 265 bytes (1 switches on core 1)
[pid: 24647|app: 0|req: 70/438] 66.102.6.125 () {38 vars in 674 bytes} [Fri Aug  3 13:56:35 2018] GET /admin/login/?next=/admin/ => generated 1652 bytes in 47 msecs (HTTP/1.1 200) 7 headers in 381 bytes (1 switches on core 1)
Not Found: /favicon.ico
[pid: 24644|app: 0|req: 161/439] 66.102.6.123 () {38 vars in 591 bytes} [Fri Aug  3 13:56:36 2018] GET /favicon.ico => generated 3375 bytes in 3 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24644|app: 0|req: 162/440] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug  3 14:39:50 2018] GET / => generated 10360 bytes in 37 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
[pid: 24644|app: 0|req: 163/441] 139.162.83.10 () {34 vars in 385 bytes} [Fri Aug  3 15:13:39 2018] GET / => generated 10360 bytes in 55 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 24647|app: 0|req: 71/442] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug  3 15:39:52 2018] GET / => generated 10360 bytes in 60 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24645|app: 0|req: 96/443] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug  3 16:39:52 2018] GET / => generated 10360 bytes in 65 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24647|app: 0|req: 72/444] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug  3 17:39:53 2018] GET / => generated 10360 bytes in 50 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24647|app: 0|req: 73/445] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug  3 18:39:48 2018] GET / => generated 10360 bytes in 50 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24646|app: 0|req: 102/446] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug  3 19:39:48 2018] GET / => generated 10360 bytes in 54 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24647|app: 0|req: 74/447] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug  3 20:39:50 2018] GET / => generated 10360 bytes in 30 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 24646|app: 0|req: 103/448] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug  3 21:39:48 2018] GET / => generated 10360 bytes in 22 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24647|app: 0|req: 75/449] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug  3 22:39:48 2018] GET / => generated 10360 bytes in 21 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24645|app: 0|req: 97/450] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug  3 23:39:46 2018] GET / => generated 10360 bytes in 31 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24647|app: 0|req: 76/451] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug  4 00:39:48 2018] GET / => generated 10360 bytes in 25 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24646|app: 0|req: 104/452] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug  4 01:39:47 2018] GET / => generated 10360 bytes in 34 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 24644|app: 0|req: 164/453] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug  4 02:39:48 2018] GET / => generated 10360 bytes in 37 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24644|app: 0|req: 165/454] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug  4 03:39:48 2018] GET / => generated 10360 bytes in 22 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24644|app: 0|req: 166/455] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug  4 04:39:49 2018] GET / => generated 10360 bytes in 42 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 24647|app: 0|req: 77/456] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug  4 05:39:49 2018] GET / => generated 10360 bytes in 28 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
[pid: 24647|app: 0|req: 78/457] 184.70.13.66 () {26 vars in 272 bytes} [Sat Aug  4 06:08:07 2018] GET / => generated 10360 bytes in 52 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 24647|app: 0|req: 79/458] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug  4 06:39:47 2018] GET / => generated 10360 bytes in 26 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 24646|app: 0|req: 105/459] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug  4 07:39:48 2018] GET / => generated 10360 bytes in 40 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24644|app: 0|req: 167/460] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug  4 08:39:51 2018] GET / => generated 10360 bytes in 49 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 24645|app: 0|req: 98/461] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug  4 09:39:49 2018] GET / => generated 10360 bytes in 45 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 24647|app: 0|req: 80/462] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug  4 10:39:46 2018] GET / => generated 10360 bytes in 46 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 24646|app: 0|req: 106/463] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug  4 11:39:47 2018] GET / => generated 10360 bytes in 31 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24645|app: 0|req: 99/464] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug  4 12:39:47 2018] GET / => generated 10360 bytes in 40 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
[pid: 24645|app: 0|req: 100/465] 85.167.178.196 () {26 vars in 274 bytes} [Sat Aug  4 12:45:11 2018] GET / => generated 10360 bytes in 21 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 24647|app: 0|req: 81/466] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug  4 13:39:47 2018] GET / => generated 10360 bytes in 23 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24646|app: 0|req: 107/467] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug  4 14:39:49 2018] GET / => generated 10360 bytes in 25 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24646|app: 0|req: 108/468] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug  4 15:39:51 2018] GET / => generated 10360 bytes in 42 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 24647|app: 0|req: 82/469] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug  4 16:39:49 2018] GET / => generated 10360 bytes in 25 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 24647|app: 0|req: 83/470] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug  4 17:39:52 2018] GET / => generated 10360 bytes in 44 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 24645|app: 0|req: 101/471] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug  4 18:39:48 2018] GET / => generated 10360 bytes in 26 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 24646|app: 0|req: 109/472] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug  4 19:39:51 2018] GET / => generated 10360 bytes in 43 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 24646|app: 0|req: 110/473] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug  4 20:39:48 2018] GET / => generated 10360 bytes in 27 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 24645|app: 0|req: 102/474] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug  4 21:39:49 2018] GET / => generated 10360 bytes in 24 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24646|app: 0|req: 111/475] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug  4 22:39:45 2018] GET / => generated 10360 bytes in 27 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
[pid: 24646|app: 0|req: 112/476] 89.218.73.150 () {26 vars in 273 bytes} [Sat Aug  4 22:56:47 2018] GET / => generated 10360 bytes in 35 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24645|app: 0|req: 103/477] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug  4 23:39:44 2018] GET / => generated 10360 bytes in 24 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 24646|app: 0|req: 113/478] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug  5 00:39:41 2018] GET / => generated 10360 bytes in 33 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 24645|app: 0|req: 104/479] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug  5 01:39:39 2018] GET / => generated 10360 bytes in 46 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
[pid: 24644|app: 0|req: 168/480] 190.94.149.21 () {34 vars in 483 bytes} [Sun Aug  5 02:28:38 2018] GET / => generated 10360 bytes in 30 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24645|app: 0|req: 105/481] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug  5 02:39:40 2018] GET / => generated 10360 bytes in 25 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 24644|app: 0|req: 169/482] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug  5 03:39:43 2018] GET / => generated 10360 bytes in 42 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 24645|app: 0|req: 106/483] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug  5 04:39:42 2018] GET / => generated 10360 bytes in 28 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24647|app: 0|req: 84/484] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug  5 05:39:41 2018] GET / => generated 10360 bytes in 40 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24647|app: 0|req: 85/485] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug  5 06:39:42 2018] GET / => generated 10360 bytes in 43 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24646|app: 0|req: 114/486] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug  5 07:39:41 2018] GET / => generated 10360 bytes in 46 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24647|app: 0|req: 86/487] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug  5 08:39:41 2018] GET / => generated 10360 bytes in 49 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24644|app: 0|req: 170/488] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug  5 09:39:44 2018] GET / => generated 10360 bytes in 54 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 24644|app: 0|req: 171/489] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug  5 10:39:48 2018] GET / => generated 10360 bytes in 66 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 24647|app: 0|req: 87/490] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug  5 11:39:45 2018] GET / => generated 10360 bytes in 23 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24644|app: 0|req: 172/491] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug  5 12:39:45 2018] GET / => generated 10360 bytes in 36 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 24646|app: 0|req: 115/492] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug  5 13:39:47 2018] GET / => generated 10360 bytes in 46 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24646|app: 0|req: 116/493] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug  5 14:39:51 2018] GET / => generated 10360 bytes in 26 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24647|app: 0|req: 88/494] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug  5 15:39:53 2018] GET / => generated 10360 bytes in 51 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 24646|app: 0|req: 117/495] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug  5 16:39:45 2018] GET / => generated 10360 bytes in 43 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
[pid: 24644|app: 0|req: 173/496] 141.212.122.48 () {34 vars in 390 bytes} [Sun Aug  5 16:48:13 2018] GET / => generated 10360 bytes in 43 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24645|app: 0|req: 107/497] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug  5 17:39:56 2018] GET / => generated 10360 bytes in 23 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24644|app: 0|req: 174/498] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug  5 18:39:47 2018] GET / => generated 10360 bytes in 30 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 24647|app: 0|req: 89/499] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug  5 19:39:45 2018] GET / => generated 10360 bytes in 33 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24644|app: 0|req: 175/500] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug  5 20:39:45 2018] GET / => generated 10360 bytes in 26 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
Not Found: /login
[pid: 24644|app: 0|req: 176/501] 51.15.241.141 () {28 vars in 308 bytes} [Sun Aug  5 20:43:29 2018] GET /login => generated 3349 bytes in 7 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24645|app: 0|req: 108/502] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug  5 21:39:53 2018] GET / => generated 10360 bytes in 28 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24646|app: 0|req: 118/503] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug  5 22:39:52 2018] GET / => generated 10360 bytes in 25 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24645|app: 0|req: 109/504] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug  5 23:39:47 2018] GET / => generated 10360 bytes in 25 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24646|app: 0|req: 119/505] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug  6 00:39:43 2018] GET / => generated 10360 bytes in 23 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24646|app: 0|req: 120/506] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug  6 01:39:38 2018] GET / => generated 10360 bytes in 24 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24646|app: 0|req: 121/507] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug  6 02:39:41 2018] GET / => generated 10360 bytes in 26 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24645|app: 0|req: 110/508] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug  6 03:39:41 2018] GET / => generated 10360 bytes in 46 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 24644|app: 0|req: 177/509] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug  6 04:39:43 2018] GET / => generated 10360 bytes in 39 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 7937 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 24646|app: 0|req: 122/510] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug  6 05:39:40 2018] GET / => generated 10360 bytes in 40 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24647|app: 0|req: 90/511] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug  6 06:39:39 2018] GET / => generated 10360 bytes in 47 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24647|app: 0|req: 91/512] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug  6 07:39:39 2018] GET / => generated 10360 bytes in 42 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 24645|app: 0|req: 111/513] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug  6 08:39:39 2018] GET / => generated 10360 bytes in 31 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 24646|app: 0|req: 123/514] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug  6 09:39:41 2018] GET / => generated 10360 bytes in 47 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 24647|app: 0|req: 92/515] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug  6 10:39:40 2018] GET / => generated 10360 bytes in 25 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24645|app: 0|req: 112/516] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug  6 11:39:41 2018] GET / => generated 10360 bytes in 30 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24646|app: 0|req: 124/517] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug  6 12:39:39 2018] GET / => generated 10360 bytes in 27 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 24646|app: 0|req: 125/518] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug  6 13:39:40 2018] GET / => generated 10360 bytes in 51 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 24646|app: 0|req: 126/519] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug  6 14:39:39 2018] GET / => generated 10360 bytes in 22 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24647|app: 0|req: 93/520] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug  6 15:39:56 2018] GET / => generated 10360 bytes in 64 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 24645|app: 0|req: 113/521] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug  6 16:39:41 2018] GET / => generated 10360 bytes in 43 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
[pid: 24645|app: 0|req: 114/522] 66.102.6.123 () {38 vars in 637 bytes} [Mon Aug  6 16:54:03 2018] GET /admin/ => generated 0 bytes in 2 msecs (HTTP/1.1 302) 7 headers in 265 bytes (1 switches on core 1)
[pid: 24647|app: 0|req: 94/523] 66.102.6.123 () {38 vars in 674 bytes} [Mon Aug  6 16:54:03 2018] GET /admin/login/?next=/admin/ => generated 1652 bytes in 22 msecs (HTTP/1.1 200) 7 headers in 381 bytes (1 switches on core 1)
Not Found: /favicon.ico
[pid: 24644|app: 0|req: 178/524] 66.102.6.123 () {38 vars in 591 bytes} [Mon Aug  6 16:54:03 2018] GET /favicon.ico => generated 3375 bytes in 7 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 24646|app: 0|req: 127/525] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug  6 17:39:44 2018] GET / => generated 10360 bytes in 29 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 24647|app: 0|req: 95/526] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug  6 18:39:41 2018] GET / => generated 10360 bytes in 53 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24645|app: 0|req: 115/527] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug  6 19:39:44 2018] GET / => generated 10360 bytes in 31 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24647|app: 0|req: 96/528] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug  6 20:39:43 2018] GET / => generated 10360 bytes in 28 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24646|app: 0|req: 128/529] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug  6 21:39:42 2018] GET / => generated 10360 bytes in 22 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24645|app: 0|req: 116/530] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug  6 22:39:49 2018] GET / => generated 10360 bytes in 24 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 24645|app: 0|req: 117/531] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug  6 23:39:44 2018] GET / => generated 10360 bytes in 21 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24646|app: 0|req: 129/532] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug  7 00:39:44 2018] GET / => generated 10360 bytes in 21 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24647|app: 0|req: 97/533] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug  7 01:39:45 2018] GET / => generated 10360 bytes in 21 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 24647|app: 0|req: 98/534] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug  7 02:39:45 2018] GET / => generated 10360 bytes in 50 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24645|app: 0|req: 118/535] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug  7 03:39:44 2018] GET / => generated 10360 bytes in 45 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24646|app: 0|req: 130/536] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug  7 04:39:44 2018] GET / => generated 10360 bytes in 51 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24646|app: 0|req: 131/537] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug  7 05:39:43 2018] GET / => generated 10360 bytes in 26 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 24645|app: 0|req: 119/538] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug  7 06:39:44 2018] GET / => generated 10360 bytes in 50 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 24644|app: 0|req: 179/539] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug  7 07:39:44 2018] GET / => generated 10360 bytes in 62 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
[pid: 24644|app: 0|req: 180/540] 196.52.43.112 () {30 vars in 397 bytes} [Tue Aug  7 07:47:30 2018] GET / => generated 10360 bytes in 20 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24645|app: 0|req: 120/541] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug  7 08:39:44 2018] GET / => generated 10360 bytes in 52 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24647|app: 0|req: 99/542] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug  7 09:39:43 2018] GET / => generated 10360 bytes in 50 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24647|app: 0|req: 100/543] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug  7 10:39:47 2018] GET / => generated 10360 bytes in 65 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 24646|app: 0|req: 132/544] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug  7 11:39:46 2018] GET / => generated 10360 bytes in 28 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24645|app: 0|req: 121/545] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug  7 12:39:46 2018] GET / => generated 10360 bytes in 33 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24647|app: 0|req: 101/546] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug  7 13:39:46 2018] GET / => generated 10360 bytes in 36 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 24647|app: 0|req: 102/547] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug  7 14:39:50 2018] GET / => generated 10360 bytes in 21 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24645|app: 0|req: 122/548] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug  7 15:39:47 2018] GET / => generated 10360 bytes in 50 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 24644|app: 0|req: 181/549] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug  7 16:39:47 2018] GET / => generated 10360 bytes in 39 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 24645|app: 0|req: 123/550] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug  7 17:40:00 2018] GET / => generated 10360 bytes in 56 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 24645|app: 0|req: 124/551] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug  7 18:40:02 2018] GET / => generated 10360 bytes in 54 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 24645|app: 0|req: 125/552] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug  7 19:40:00 2018] GET / => generated 10360 bytes in 26 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24647|app: 0|req: 103/553] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug  7 20:40:00 2018] GET / => generated 10360 bytes in 34 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 24644|app: 0|req: 182/554] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug  7 21:39:58 2018] GET / => generated 10360 bytes in 36 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
DAMN ! worker 2 (pid: 24645) died, killed by signal 9 :( trying respawn ...
Respawned uWSGI worker 2 (new pid: 19403)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 19403|app: 0|req: 126/555] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug  7 22:39:55 2018] GET / => generated 10360 bytes in 1285 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 24644|app: 0|req: 183/556] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug  7 23:40:01 2018] GET / => generated 10360 bytes in 86 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 19403|app: 0|req: 127/557] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug  8 00:40:01 2018] GET / => generated 10360 bytes in 23 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 19403|app: 0|req: 128/558] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug  8 01:39:55 2018] GET / => generated 10360 bytes in 25 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 19403|app: 0|req: 129/559] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug  8 02:39:57 2018] GET / => generated 10360 bytes in 23 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 19403|app: 0|req: 130/560] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug  8 03:39:55 2018] GET / => generated 10360 bytes in 56 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 19403|app: 0|req: 131/561] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug  8 04:39:57 2018] GET / => generated 10360 bytes in 47 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 19403|app: 0|req: 132/562] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug  8 05:39:54 2018] GET / => generated 10360 bytes in 43 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 19403|app: 0|req: 133/563] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug  8 06:39:54 2018] GET / => generated 10360 bytes in 21 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 19403|app: 0|req: 134/564] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug  8 07:39:56 2018] GET / => generated 10360 bytes in 24 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 19403|app: 0|req: 135/565] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug  8 08:39:59 2018] GET / => generated 10360 bytes in 34 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 24644|app: 0|req: 184/566] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug  8 09:39:56 2018] GET / => generated 10360 bytes in 44 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
[pid: 19403|app: 0|req: 136/567] 213.191.117.125 () {26 vars in 275 bytes} [Wed Aug  8 10:05:04 2018] GET / => generated 10360 bytes in 25 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
[pid: 19403|app: 0|req: 137/568] 66.102.6.123 () {38 vars in 637 bytes} [Wed Aug  8 10:39:18 2018] GET /admin/ => generated 0 bytes in 15 msecs (HTTP/1.1 302) 7 headers in 265 bytes (1 switches on core 0)
[pid: 19403|app: 0|req: 138/569] 66.102.6.121 () {38 vars in 674 bytes} [Wed Aug  8 10:39:18 2018] GET /admin/login/?next=/admin/ => generated 1652 bytes in 42 msecs (HTTP/1.1 200) 7 headers in 381 bytes (1 switches on core 1)
Not Found: /favicon.ico
[pid: 24644|app: 0|req: 185/570] 66.102.6.125 () {38 vars in 591 bytes} [Wed Aug  8 10:39:18 2018] GET /favicon.ico => generated 3375 bytes in 3 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 19403|app: 0|req: 139/571] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug  8 10:39:55 2018] GET / => generated 10360 bytes in 23 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 19403|app: 0|req: 140/572] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug  8 11:39:55 2018] GET / => generated 10360 bytes in 20 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 19403|app: 0|req: 141/573] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug  8 12:39:58 2018] GET / => generated 10360 bytes in 21 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
[pid: 19403|app: 0|req: 142/574] 182.55.39.135 () {26 vars in 273 bytes} [Wed Aug  8 12:44:27 2018] GET / => generated 10360 bytes in 21 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 19403|app: 0|req: 143/575] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug  8 13:40:01 2018] GET / => generated 10360 bytes in 57 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
[pid: 19403|app: 0|req: 144/576] 139.162.83.10 () {34 vars in 385 bytes} [Wed Aug  8 14:32:24 2018] GET / => generated 10360 bytes in 22 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 19403|app: 0|req: 145/577] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug  8 14:39:54 2018] GET / => generated 10360 bytes in 25 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 19403|app: 0|req: 146/578] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug  8 15:39:56 2018] GET / => generated 10360 bytes in 26 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 19403|app: 0|req: 147/579] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug  8 16:39:57 2018] GET / => generated 10360 bytes in 24 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
[pid: 19403|app: 0|req: 148/580] 222.124.192.154 () {26 vars in 275 bytes} [Wed Aug  8 17:04:44 2018] GET / => generated 10360 bytes in 20 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
DAMN ! worker 3 (pid: 24646) died, killed by signal 9 :( trying respawn ...
Respawned uWSGI worker 3 (new pid: 27717)
invalid request block size: 21573 (max 4096)...skip
DAMN ! worker 1 (pid: 24644) died, killed by signal 9 :( trying respawn ...
Respawned uWSGI worker 1 (new pid: 28461)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 186/581] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug  8 17:39:52 2018] GET / => generated 10360 bytes in 1560 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 187/582] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug  8 18:39:55 2018] GET / => generated 10360 bytes in 24 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 188/583] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug  8 19:39:55 2018] GET / => generated 10360 bytes in 113 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24647|app: 0|req: 104/584] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug  8 20:39:55 2018] GET / => generated 10360 bytes in 29 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 189/585] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug  8 21:39:55 2018] GET / => generated 10360 bytes in 30 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 190/586] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug  8 22:39:57 2018] GET / => generated 10360 bytes in 28 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 191/587] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug  8 23:40:01 2018] GET / => generated 10360 bytes in 37 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 192/588] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug  9 00:39:56 2018] GET / => generated 10360 bytes in 23 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 193/589] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug  9 01:39:56 2018] GET / => generated 10360 bytes in 21 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 194/590] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug  9 02:40:02 2018] GET / => generated 10360 bytes in 48 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 195/591] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug  9 03:40:28 2018] GET / => generated 10360 bytes in 62 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 19403|app: 0|req: 149/592] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug  9 04:39:57 2018] GET / => generated 10360 bytes in 48 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 196/593] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug  9 05:39:56 2018] GET / => generated 10360 bytes in 22 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 197/594] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug  9 06:41:58 2018] GET / => generated 10360 bytes in 26 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 27717|app: 0|req: 133/595] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug  9 07:39:58 2018] GET / => generated 10360 bytes in 1182 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 198/596] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug  9 08:40:00 2018] GET / => generated 10360 bytes in 30 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 199/597] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug  9 09:40:02 2018] GET / => generated 10360 bytes in 35 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 200/598] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug  9 10:40:01 2018] GET / => generated 10360 bytes in 49 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 19403|app: 0|req: 150/599] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug  9 11:40:02 2018] GET / => generated 10360 bytes in 34 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 201/600] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug  9 12:40:01 2018] GET / => generated 10360 bytes in 66 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 202/601] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug  9 13:40:01 2018] GET / => generated 10360 bytes in 85 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 203/602] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug  9 14:39:59 2018] GET / => generated 10360 bytes in 25 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 19403|app: 0|req: 151/603] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug  9 15:39:59 2018] GET / => generated 10360 bytes in 35 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 204/604] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug  9 16:40:01 2018] GET / => generated 10360 bytes in 39 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 27717|app: 0|req: 134/605] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug  9 17:40:03 2018] GET / => generated 10360 bytes in 24 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
[pid: 28461|app: 0|req: 205/606] 83.204.252.109 () {26 vars in 274 bytes} [Thu Aug  9 18:30:41 2018] GET / => generated 10360 bytes in 36 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 206/607] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug  9 18:40:06 2018] GET / => generated 10360 bytes in 22 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
Not Found: /favicon.ico
[pid: 28461|app: 0|req: 207/608] 66.102.6.193 () {38 vars in 591 bytes} [Thu Aug  9 19:35:54 2018] GET /favicon.ico => generated 3375 bytes in 7 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24647|app: 0|req: 105/609] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug  9 19:40:04 2018] GET / => generated 10360 bytes in 48 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 208/610] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug  9 20:40:06 2018] GET / => generated 10360 bytes in 24 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 209/611] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug  9 21:40:07 2018] GET / => generated 10360 bytes in 34 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 210/612] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug  9 22:40:04 2018] GET / => generated 10360 bytes in 31 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 211/613] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug  9 23:39:59 2018] GET / => generated 10360 bytes in 28 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 212/614] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 10 00:39:57 2018] GET / => generated 10360 bytes in 31 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
[pid: 28461|app: 0|req: 213/615] 196.52.43.93 () {30 vars in 396 bytes} [Fri Aug 10 01:13:02 2018] GET / => generated 10360 bytes in 32 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 214/616] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 10 01:39:59 2018] GET / => generated 10360 bytes in 21 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 27717|app: 0|req: 135/617] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 10 02:40:02 2018] GET / => generated 10360 bytes in 40 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 27717|app: 0|req: 136/618] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 10 03:39:59 2018] GET / => generated 10360 bytes in 51 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 215/619] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 10 04:39:59 2018] GET / => generated 10360 bytes in 27 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 216/620] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 10 05:39:59 2018] GET / => generated 10360 bytes in 48 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24647|app: 0|req: 106/621] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 10 06:39:59 2018] GET / => generated 10360 bytes in 31 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 217/622] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 10 07:39:58 2018] GET / => generated 10360 bytes in 26 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
[pid: 28461|app: 0|req: 218/623] 88.235.173.9 () {26 vars in 272 bytes} [Fri Aug 10 08:03:06 2018] GET / => generated 10360 bytes in 24 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 219/624] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 10 08:39:58 2018] GET / => generated 10360 bytes in 25 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 220/625] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 10 09:39:59 2018] GET / => generated 10360 bytes in 44 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
[pid: 28461|app: 0|req: 221/626] 124.197.67.69 () {26 vars in 273 bytes} [Fri Aug 10 10:27:46 2018] GET / => generated 10360 bytes in 46 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 19403|app: 0|req: 152/627] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 10 10:40:05 2018] GET / => generated 10360 bytes in 23 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
[pid: 28461|app: 0|req: 222/628] 66.102.6.195 () {38 vars in 637 bytes} [Fri Aug 10 11:13:02 2018] GET /admin/ => generated 0 bytes in 22 msecs (HTTP/1.1 302) 7 headers in 265 bytes (1 switches on core 1)
[pid: 28461|app: 0|req: 223/629] 66.102.6.195 () {38 vars in 674 bytes} [Fri Aug 10 11:13:02 2018] GET /admin/login/?next=/admin/ => generated 1652 bytes in 26 msecs (HTTP/1.1 200) 7 headers in 381 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 224/630] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 10 11:40:01 2018] GET / => generated 10360 bytes in 35 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24647|app: 0|req: 107/631] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 10 12:40:00 2018] GET / => generated 10360 bytes in 63 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 225/632] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 10 13:39:58 2018] GET / => generated 10360 bytes in 22 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
[pid: 28461|app: 0|req: 226/633] 54.241.134.165 () {34 vars in 496 bytes} [Fri Aug 10 14:03:31 2018] GET / => generated 10360 bytes in 22 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 227/634] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 10 14:39:57 2018] GET / => generated 10360 bytes in 29 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 228/635] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 10 15:40:01 2018] GET / => generated 10360 bytes in 108 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 27717|app: 0|req: 137/636] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 10 16:40:02 2018] GET / => generated 10360 bytes in 40 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 27717|app: 0|req: 138/637] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 10 17:40:00 2018] GET / => generated 10360 bytes in 49 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24647|app: 0|req: 108/638] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 10 18:40:03 2018] GET / => generated 10360 bytes in 53 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 229/639] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 10 19:40:00 2018] GET / => generated 10360 bytes in 46 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 230/640] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 10 20:40:01 2018] GET / => generated 10360 bytes in 49 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 231/641] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 10 21:42:21 2018] GET / => generated 10360 bytes in 22 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
[pid: 28461|app: 0|req: 232/642] 139.162.83.10 () {34 vars in 385 bytes} [Fri Aug 10 22:16:43 2018] GET / => generated 10360 bytes in 23 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24647|app: 0|req: 109/643] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 10 22:40:11 2018] GET / => generated 10360 bytes in 31 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 19403|app: 0|req: 153/644] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 10 23:40:06 2018] GET / => generated 10360 bytes in 28 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
[pid: 28461|app: 0|req: 233/645] 151.177.231.169 () {26 vars in 275 bytes} [Sat Aug 11 00:39:02 2018] GET / => generated 10360 bytes in 47 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24647|app: 0|req: 110/646] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug 11 00:40:03 2018] GET / => generated 10360 bytes in 31 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
Not Found: /favicon.ico
[pid: 28461|app: 0|req: 234/647] 66.102.6.195 () {38 vars in 591 bytes} [Sat Aug 11 01:12:31 2018] GET /favicon.ico => generated 3375 bytes in 3 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 0)
[pid: 19403|app: 0|req: 154/648] 223.104.63.11 () {42 vars in 691 bytes} [Sat Aug 11 01:12:33 2018] GET / => generated 10360 bytes in 26 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 0)
Not Found: /favicon.ico
[pid: 28461|app: 0|req: 235/649] 223.104.63.11 () {42 vars in 676 bytes} [Sat Aug 11 01:12:38 2018] GET /favicon.ico => generated 3375 bytes in 2 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 1)
[pid: 28461|app: 0|req: 236/650] 223.104.63.11 () {42 vars in 701 bytes} [Sat Aug 11 01:12:41 2018] GET /admin => generated 0 bytes in 0 msecs (HTTP/1.1 301) 3 headers in 112 bytes (1 switches on core 0)
[pid: 24647|app: 0|req: 111/651] 223.104.63.11 () {42 vars in 703 bytes} [Sat Aug 11 01:12:42 2018] GET /admin/ => generated 0 bytes in 1 msecs (HTTP/1.1 302) 7 headers in 265 bytes (1 switches on core 1)
[pid: 19403|app: 0|req: 155/652] 223.104.63.11 () {42 vars in 740 bytes} [Sat Aug 11 01:12:42 2018] GET /admin/login/?next=/admin/ => generated 1652 bytes in 19 msecs (HTTP/1.1 200) 7 headers in 381 bytes (1 switches on core 1)
[pid: 28461|app: 0|req: 237/653] 223.104.63.11 () {54 vars in 1088 bytes} [Sat Aug 11 01:12:59 2018] POST /admin/login/?next=/admin/ => generated 1783 bytes in 53 msecs (HTTP/1.1 200) 7 headers in 381 bytes (1 switches on core 0)
[pid: 28461|app: 0|req: 238/654] 223.104.63.11 () {54 vars in 1088 bytes} [Sat Aug 11 01:13:07 2018] POST /admin/login/?next=/admin/ => generated 0 bytes in 75 msecs (HTTP/1.1 302) 9 headers in 531 bytes (1 switches on core 1)
[pid: 28461|app: 0|req: 239/655] 223.104.63.11 () {48 vars in 936 bytes} [Sat Aug 11 01:13:08 2018] GET /admin/ => generated 7728 bytes in 24 msecs (HTTP/1.1 200) 6 headers in 227 bytes (1 switches on core 0)
[pid: 28461|app: 0|req: 240/656] 223.104.63.11 () {46 vars in 906 bytes} [Sat Aug 11 01:14:00 2018] GET /admin/blog/post/ => generated 6190 bytes in 44 msecs (HTTP/1.1 200) 7 headers in 381 bytes (1 switches on core 1)
[pid: 28461|app: 0|req: 241/657] 223.104.63.11 () {44 vars in 793 bytes} [Sat Aug 11 01:14:01 2018] GET /admin/jsi18n/ => generated 7682 bytes in 7 msecs (HTTP/1.1 200) 4 headers in 115 bytes (1 switches on core 0)
[pid: 27717|app: 0|req: 139/658] 223.104.63.11 () {46 vars in 924 bytes} [Sat Aug 11 01:14:16 2018] GET /admin/blog/post/add/ => generated 10345 bytes in 80 msecs (HTTP/1.1 200) 7 headers in 382 bytes (1 switches on core 1)
[pid: 28461|app: 0|req: 242/659] 223.104.63.11 () {44 vars in 797 bytes} [Sat Aug 11 01:14:17 2018] GET /admin/jsi18n/ => generated 7682 bytes in 5 msecs (HTTP/1.1 200) 4 headers in 115 bytes (1 switches on core 1)
[pid: 24647|app: 0|req: 112/660] 223.104.63.11 () {46 vars in 979 bytes} [Sat Aug 11 01:14:52 2018] GET /admin/blog/category/add/?_to_field=id&_popup=1 => generated 2889 bytes in 30 msecs (HTTP/1.1 200) 7 headers in 381 bytes (1 switches on core 0)
[pid: 28461|app: 0|req: 243/661] 223.104.63.11 () {44 vars in 823 bytes} [Sat Aug 11 01:14:53 2018] GET /admin/jsi18n/ => generated 7682 bytes in 5 msecs (HTTP/1.1 200) 4 headers in 115 bytes (1 switches on core 1)
[pid: 24647|app: 0|req: 113/662] 223.104.63.11 () {54 vars in 1265 bytes} [Sat Aug 11 01:14:59 2018] POST /admin/blog/category/add/?_to_field=id&_popup=1 => generated 370 bytes in 10 msecs (HTTP/1.1 200) 6 headers in 226 bytes (1 switches on core 1)
[pid: 28461|app: 0|req: 244/663] 223.104.63.11 () {46 vars in 969 bytes} [Sat Aug 11 01:15:06 2018] GET /admin/blog/tag/add/?_to_field=id&_popup=1 => generated 2864 bytes in 28 msecs (HTTP/1.1 200) 7 headers in 381 bytes (1 switches on core 0)
[pid: 28461|app: 0|req: 245/664] 223.104.63.11 () {44 vars in 818 bytes} [Sat Aug 11 01:15:07 2018] GET /admin/jsi18n/ => generated 7682 bytes in 5 msecs (HTTP/1.1 200) 4 headers in 115 bytes (1 switches on core 1)
[pid: 27717|app: 0|req: 140/665] 223.104.63.11 () {54 vars in 1250 bytes} [Sat Aug 11 01:15:12 2018] POST /admin/blog/tag/add/?_to_field=id&_popup=1 => generated 375 bytes in 18 msecs (HTTP/1.1 200) 6 headers in 226 bytes (1 switches on core 0)
[pid: 28461|app: 0|req: 246/666] 223.104.63.11 () {54 vars in 1190 bytes} [Sat Aug 11 01:15:29 2018] POST /admin/blog/post/add/ => generated 10653 bytes in 74 msecs (HTTP/1.1 200) 7 headers in 382 bytes (1 switches on core 1)
[pid: 28461|app: 0|req: 247/667] 223.104.63.11 () {44 vars in 797 bytes} [Sat Aug 11 01:15:30 2018] GET /admin/jsi18n/ => generated 7682 bytes in 4 msecs (HTTP/1.1 200) 4 headers in 115 bytes (1 switches on core 0)
Building prefix dict from the default dictionary ...
Loading model from cache /tmp/jieba.cache
Loading model cost 0.805 seconds.
Prefix dict has been built succesfully.
[pid: 27717|app: 0|req: 141/668] 223.104.63.11 () {54 vars in 1190 bytes} [Sat Aug 11 01:15:47 2018] POST /admin/blog/post/add/ => generated 0 bytes in 888 msecs (HTTP/1.1 302) 8 headers in 595 bytes (1 switches on core 1)
[pid: 28461|app: 0|req: 248/669] 223.104.63.11 () {48 vars in 1263 bytes} [Sat Aug 11 01:15:49 2018] GET /admin/blog/post/add/ => generated 10630 bytes in 56 msecs (HTTP/1.1 200) 8 headers in 466 bytes (1 switches on core 0)
[pid: 28461|app: 0|req: 249/670] 223.104.63.11 () {44 vars in 797 bytes} [Sat Aug 11 01:15:49 2018] GET /admin/jsi18n/ => generated 7682 bytes in 5 msecs (HTTP/1.1 200) 4 headers in 115 bytes (1 switches on core 1)
[pid: 19403|app: 0|req: 156/671] 223.104.63.11 () {46 vars in 938 bytes} [Sat Aug 11 01:15:56 2018] GET /admin/blog/post/4/change/ => generated 10843 bytes in 67 msecs (HTTP/1.1 200) 7 headers in 382 bytes (1 switches on core 0)
[pid: 28461|app: 0|req: 250/672] 223.104.63.11 () {44 vars in 802 bytes} [Sat Aug 11 01:15:57 2018] GET /admin/jsi18n/ => generated 7682 bytes in 5 msecs (HTTP/1.1 200) 4 headers in 115 bytes (1 switches on core 1)
Building prefix dict from the default dictionary ...
Loading model from cache /tmp/jieba.cache
Loading model cost 0.811 seconds.
Prefix dict has been built succesfully.
[pid: 28461|app: 0|req: 251/673] 223.104.63.11 () {54 vars in 1205 bytes} [Sat Aug 11 01:19:05 2018] POST /admin/blog/post/4/change/ => generated 0 bytes in 852 msecs (HTTP/1.1 302) 8 headers in 609 bytes (1 switches on core 1)
[pid: 28461|app: 0|req: 252/674] 223.104.63.11 () {48 vars in 1282 bytes} [Sat Aug 11 01:19:06 2018] GET /admin/blog/post/add/ => generated 10636 bytes in 83 msecs (HTTP/1.1 200) 8 headers in 466 bytes (1 switches on core 0)
[pid: 28461|app: 0|req: 253/675] 223.104.63.11 () {44 vars in 797 bytes} [Sat Aug 11 01:19:06 2018] GET /admin/jsi18n/ => generated 7682 bytes in 5 msecs (HTTP/1.1 200) 4 headers in 115 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 254/676] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug 11 01:39:58 2018] GET / => generated 11030 bytes in 23 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 27717|app: 0|req: 142/677] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug 11 02:39:58 2018] GET / => generated 11030 bytes in 29 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 19403|app: 0|req: 157/678] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug 11 03:40:02 2018] GET / => generated 11030 bytes in 28 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 255/679] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug 11 04:40:00 2018] GET / => generated 11030 bytes in 38 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 19403|app: 0|req: 158/680] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug 11 05:39:54 2018] GET / => generated 11030 bytes in 51 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 256/681] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug 11 06:39:57 2018] GET / => generated 11030 bytes in 49 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 257/682] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug 11 07:39:57 2018] GET / => generated 11030 bytes in 52 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
[pid: 24647|app: 0|req: 114/683] 79.112.143.76 () {26 vars in 273 bytes} [Sat Aug 11 08:18:55 2018] GET / => generated 11030 bytes in 67 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 258/684] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug 11 08:39:56 2018] GET / => generated 11030 bytes in 72 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 259/685] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug 11 09:39:58 2018] GET / => generated 11030 bytes in 36 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 260/686] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug 11 10:39:59 2018] GET / => generated 11030 bytes in 26 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 261/687] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug 11 11:39:57 2018] GET / => generated 11030 bytes in 24 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
[pid: 28461|app: 0|req: 262/688] 77.78.61.100 () {26 vars in 272 bytes} [Sat Aug 11 11:51:54 2018] GET / => generated 11030 bytes in 27 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 263/689] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug 11 12:40:02 2018] GET / => generated 11030 bytes in 33 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 264/690] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug 11 13:39:56 2018] GET / => generated 11030 bytes in 58 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 265/691] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug 11 14:39:58 2018] GET / => generated 11030 bytes in 38 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 266/692] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug 11 15:39:58 2018] GET / => generated 11030 bytes in 51 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24647|app: 0|req: 115/693] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug 11 16:40:07 2018] GET / => generated 11030 bytes in 24 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 24647|app: 0|req: 116/694] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug 11 17:40:04 2018] GET / => generated 11030 bytes in 52 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
[pid: 28461|app: 0|req: 267/695] 103.117.125.9 () {26 vars in 273 bytes} [Sat Aug 11 18:07:06 2018] GET / => generated 11030 bytes in 22 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 268/696] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug 11 18:40:02 2018] GET / => generated 11030 bytes in 49 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 269/697] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug 11 19:40:00 2018] GET / => generated 11030 bytes in 49 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 27717|app: 0|req: 143/698] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug 11 20:40:00 2018] GET / => generated 11030 bytes in 24 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 270/699] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug 11 21:39:59 2018] GET / => generated 11030 bytes in 22 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 271/700] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug 11 22:39:59 2018] GET / => generated 11030 bytes in 25 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24647|app: 0|req: 117/701] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug 11 23:40:08 2018] GET / => generated 11030 bytes in 47 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 272/702] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug 12 00:39:55 2018] GET / => generated 11030 bytes in 22 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 273/703] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug 12 01:40:00 2018] GET / => generated 11030 bytes in 21 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 274/704] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug 12 02:39:58 2018] GET / => generated 11030 bytes in 23 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 275/705] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug 12 03:40:00 2018] GET / => generated 11030 bytes in 23 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 276/706] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug 12 04:39:57 2018] GET / => generated 11030 bytes in 31 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 277/707] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug 12 05:39:56 2018] GET / => generated 11030 bytes in 24 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 278/708] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug 12 06:39:55 2018] GET / => generated 11030 bytes in 22 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 19403|app: 0|req: 159/709] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug 12 07:39:56 2018] GET / => generated 11030 bytes in 73 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 279/710] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug 12 08:39:55 2018] GET / => generated 11030 bytes in 77 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 280/711] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug 12 09:39:55 2018] GET / => generated 11030 bytes in 24 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24647|app: 0|req: 118/712] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug 12 10:39:55 2018] GET / => generated 11030 bytes in 26 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
[pid: 28461|app: 0|req: 281/713] 185.246.141.246 () {26 vars in 275 bytes} [Sun Aug 12 11:26:01 2018] GET / => generated 11030 bytes in 35 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 282/714] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug 12 11:39:53 2018] GET / => generated 11030 bytes in 23 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 283/715] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug 12 12:40:01 2018] GET / => generated 11030 bytes in 34 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
[pid: 28461|app: 0|req: 284/716] 223.73.227.108 () {46 vars in 911 bytes} [Sun Aug 12 12:48:46 2018] GET /admin/blog/ => generated 2957 bytes in 29 msecs (HTTP/1.1 200) 6 headers in 227 bytes (1 switches on core 1)
[pid: 28461|app: 0|req: 285/717] 66.102.6.193 () {38 vars in 637 bytes} [Sun Aug 12 12:49:30 2018] GET /admin/ => generated 0 bytes in 1 msecs (HTTP/1.1 302) 7 headers in 265 bytes (1 switches on core 0)
[pid: 27717|app: 0|req: 144/718] 66.102.6.195 () {38 vars in 674 bytes} [Sun Aug 12 12:49:30 2018] GET /admin/login/?next=/admin/ => generated 1652 bytes in 28 msecs (HTTP/1.1 200) 7 headers in 381 bytes (1 switches on core 1)
Not Found: /favicon.ico
[pid: 28461|app: 0|req: 286/719] 66.102.6.197 () {38 vars in 591 bytes} [Sun Aug 12 12:49:30 2018] GET /favicon.ico => generated 3375 bytes in 3 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
[pid: 28461|app: 0|req: 287/720] 141.212.122.32 () {34 vars in 390 bytes} [Sun Aug 12 13:27:06 2018] GET / => generated 11030 bytes in 22 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 288/721] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug 12 13:39:53 2018] GET / => generated 11030 bytes in 21 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 289/722] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug 12 14:39:54 2018] GET / => generated 11030 bytes in 34 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 290/723] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug 12 15:39:55 2018] GET / => generated 11030 bytes in 53 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
[pid: 28461|app: 0|req: 291/724] 187.190.49.1 () {26 vars in 272 bytes} [Sun Aug 12 16:32:03 2018] GET / => generated 11030 bytes in 27 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 292/725] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug 12 16:39:53 2018] GET / => generated 11030 bytes in 23 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 293/726] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug 12 17:39:54 2018] GET / => generated 11030 bytes in 63 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 294/727] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug 12 18:39:52 2018] GET / => generated 11030 bytes in 22 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 295/728] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug 12 19:39:52 2018] GET / => generated 11030 bytes in 23 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 296/729] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug 12 20:39:52 2018] GET / => generated 11030 bytes in 37 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
[pid: 28461|app: 0|req: 297/730] 138.0.202.147 () {26 vars in 273 bytes} [Sun Aug 12 21:26:41 2018] GET / => generated 11030 bytes in 28 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 298/731] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug 12 21:39:50 2018] GET / => generated 11030 bytes in 25 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
[pid: 28461|app: 0|req: 299/732] 58.250.210.208 () {46 vars in 910 bytes} [Sun Aug 12 22:35:36 2018] GET /admin/blog/ => generated 2957 bytes in 22 msecs (HTTP/1.1 200) 6 headers in 227 bytes (1 switches on core 1)
Not Found: /favicon.ico
[pid: 28461|app: 0|req: 300/733] 58.250.210.208 () {44 vars in 820 bytes} [Sun Aug 12 22:35:37 2018] GET /favicon.ico => generated 3375 bytes in 3 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 301/734] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug 12 22:39:51 2018] GET / => generated 11030 bytes in 25 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 302/735] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug 12 23:39:57 2018] GET / => generated 11030 bytes in 27 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 303/736] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug 13 00:39:52 2018] GET / => generated 11030 bytes in 24 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 19403|app: 0|req: 160/737] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug 13 01:39:52 2018] GET / => generated 11030 bytes in 30 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 304/738] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug 13 02:39:55 2018] GET / => generated 11030 bytes in 23 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 305/739] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug 13 03:39:54 2018] GET / => generated 11030 bytes in 52 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 306/740] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug 13 04:39:54 2018] GET / => generated 11030 bytes in 39 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 307/741] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug 13 05:39:53 2018] GET / => generated 11030 bytes in 47 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 308/742] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug 13 06:39:53 2018] GET / => generated 11030 bytes in 61 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 309/743] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug 13 07:39:51 2018] GET / => generated 11030 bytes in 25 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 310/744] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug 13 08:39:52 2018] GET / => generated 11030 bytes in 53 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 24647|app: 0|req: 119/745] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug 13 09:39:55 2018] GET / => generated 11030 bytes in 59 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 311/746] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug 13 10:39:52 2018] GET / => generated 11030 bytes in 23 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
-- unavailable modifier requested: 4 --
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 312/748] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug 13 11:39:52 2018] GET / => generated 11030 bytes in 25 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 313/749] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug 13 12:39:53 2018] GET / => generated 11030 bytes in 45 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
[pid: 28461|app: 0|req: 314/750] 66.102.6.121 () {38 vars in 637 bytes} [Mon Aug 13 13:33:09 2018] GET /admin/ => generated 0 bytes in 2 msecs (HTTP/1.1 302) 7 headers in 265 bytes (1 switches on core 1)
[pid: 19403|app: 0|req: 161/751] 66.102.6.121 () {38 vars in 674 bytes} [Mon Aug 13 13:33:09 2018] GET /admin/login/?next=/admin/ => generated 1652 bytes in 19 msecs (HTTP/1.1 200) 7 headers in 381 bytes (1 switches on core 0)
Not Found: /favicon.ico
[pid: 28461|app: 0|req: 315/752] 66.102.6.121 () {38 vars in 591 bytes} [Mon Aug 13 13:33:09 2018] GET /favicon.ico => generated 3375 bytes in 3 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 316/753] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug 13 13:39:54 2018] GET / => generated 11030 bytes in 25 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
[pid: 28461|app: 0|req: 317/754] 113.88.65.32 () {44 vars in 823 bytes} [Mon Aug 13 14:09:48 2018] GET / => generated 11030 bytes in 26 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 1)
[pid: 28461|app: 0|req: 318/755] 113.88.65.32 () {46 vars in 909 bytes} [Mon Aug 13 14:10:13 2018] GET /admin/blog/ => generated 2957 bytes in 23 msecs (HTTP/1.1 200) 6 headers in 227 bytes (1 switches on core 0)
[pid: 28461|app: 0|req: 319/756] 113.88.65.32 () {46 vars in 918 bytes} [Mon Aug 13 14:10:14 2018] GET /admin/blog/category/ => generated 6430 bytes in 75 msecs (HTTP/1.1 200) 7 headers in 381 bytes (1 switches on core 1)
[pid: 28461|app: 0|req: 320/757] 113.88.65.32 () {44 vars in 796 bytes} [Mon Aug 13 14:10:15 2018] GET /admin/jsi18n/ => generated 7682 bytes in 7 msecs (HTTP/1.1 200) 4 headers in 115 bytes (1 switches on core 0)
[pid: 28461|app: 0|req: 321/758] 113.88.65.32 () {46 vars in 947 bytes} [Mon Aug 13 14:10:19 2018] GET /admin/blog/category/11/change/ => generated 4055 bytes in 30 msecs (HTTP/1.1 200) 7 headers in 381 bytes (1 switches on core 1)
[pid: 28461|app: 0|req: 322/759] 113.88.65.32 () {44 vars in 806 bytes} [Mon Aug 13 14:10:19 2018] GET /admin/jsi18n/ => generated 7682 bytes in 4 msecs (HTTP/1.1 200) 4 headers in 115 bytes (1 switches on core 0)
[pid: 28461|app: 0|req: 323/760] 113.88.65.32 () {46 vars in 918 bytes} [Mon Aug 13 14:10:24 2018] GET /admin/blog/category/ => generated 6430 bytes in 54 msecs (HTTP/1.1 200) 7 headers in 381 bytes (1 switches on core 0)
[pid: 28461|app: 0|req: 324/761] 113.88.65.32 () {46 vars in 909 bytes} [Mon Aug 13 14:10:25 2018] GET /admin/blog/ => generated 2957 bytes in 16 msecs (HTTP/1.1 200) 6 headers in 227 bytes (1 switches on core 1)
[pid: 27717|app: 0|req: 145/762] 113.88.65.32 () {46 vars in 910 bytes} [Mon Aug 13 14:10:26 2018] GET /admin/blog/post/ => generated 6621 bytes in 41 msecs (HTTP/1.1 200) 7 headers in 381 bytes (1 switches on core 1)
[pid: 28461|app: 0|req: 325/763] 113.88.65.32 () {44 vars in 792 bytes} [Mon Aug 13 14:10:27 2018] GET /admin/jsi18n/ => generated 7682 bytes in 4 msecs (HTTP/1.1 200) 4 headers in 115 bytes (1 switches on core 0)
[pid: 24647|app: 0|req: 120/764] 113.88.65.32 () {46 vars in 933 bytes} [Mon Aug 13 14:10:28 2018] GET /admin/blog/post/4/change/ => generated 10997 bytes in 77 msecs (HTTP/1.1 200) 7 headers in 382 bytes (1 switches on core 1)
[pid: 28461|app: 0|req: 326/765] 113.88.65.32 () {44 vars in 801 bytes} [Mon Aug 13 14:10:29 2018] GET /admin/jsi18n/ => generated 7682 bytes in 4 msecs (HTTP/1.1 200) 4 headers in 115 bytes (1 switches on core 0)
[pid: 27717|app: 0|req: 146/766] 113.88.65.32 () {54 vars in 1204 bytes} [Mon Aug 13 14:10:49 2018] POST /admin/blog/post/4/change/ => generated 10968 bytes in 70 msecs (HTTP/1.1 200) 7 headers in 382 bytes (1 switches on core 0)
[pid: 28461|app: 0|req: 327/767] 113.88.65.32 () {44 vars in 801 bytes} [Mon Aug 13 14:10:49 2018] GET /admin/jsi18n/ => generated 7682 bytes in 4 msecs (HTTP/1.1 200) 4 headers in 115 bytes (1 switches on core 0)
Building prefix dict from the default dictionary ...
Loading model from cache /tmp/jieba.cache
Loading model cost 0.834 seconds.
Prefix dict has been built succesfully.
[pid: 19403|app: 0|req: 162/768] 113.88.65.32 () {54 vars in 1204 bytes} [Mon Aug 13 14:10:56 2018] POST /admin/blog/post/4/change/ => generated 0 bytes in 908 msecs (HTTP/1.1 302) 8 headers in 609 bytes (1 switches on core 1)
[pid: 28461|app: 0|req: 328/769] 113.88.65.32 () {48 vars in 1281 bytes} [Mon Aug 13 14:10:57 2018] GET /admin/blog/post/add/ => generated 10636 bytes in 56 msecs (HTTP/1.1 200) 8 headers in 466 bytes (1 switches on core 0)
[pid: 28461|app: 0|req: 329/770] 113.88.65.32 () {44 vars in 796 bytes} [Mon Aug 13 14:10:57 2018] GET /admin/jsi18n/ => generated 7682 bytes in 4 msecs (HTTP/1.1 200) 4 headers in 115 bytes (1 switches on core 1)
[pid: 19403|app: 0|req: 163/771] 113.88.65.32 () {46 vars in 909 bytes} [Mon Aug 13 14:11:00 2018] GET /admin/blog/ => generated 2957 bytes in 18 msecs (HTTP/1.1 200) 6 headers in 227 bytes (1 switches on core 0)
[pid: 19403|app: 0|req: 164/772] 113.88.65.32 () {46 vars in 910 bytes} [Mon Aug 13 14:11:03 2018] GET /admin/blog/post/ => generated 6621 bytes in 40 msecs (HTTP/1.1 200) 7 headers in 381 bytes (1 switches on core 1)
[pid: 28461|app: 0|req: 330/773] 113.88.65.32 () {44 vars in 792 bytes} [Mon Aug 13 14:11:04 2018] GET /admin/jsi18n/ => generated 7682 bytes in 12 msecs (HTTP/1.1 200) 4 headers in 115 bytes (1 switches on core 1)
[pid: 19403|app: 0|req: 165/774] 113.88.65.32 () {46 vars in 895 bytes} [Mon Aug 13 14:11:10 2018] GET /admin/ => generated 7710 bytes in 29 msecs (HTTP/1.1 200) 6 headers in 227 bytes (1 switches on core 0)
[pid: 28461|app: 0|req: 331/775] 113.88.65.32 () {46 vars in 923 bytes} [Mon Aug 13 14:11:12 2018] GET /admin/blog/post/4/change/ => generated 10828 bytes in 60 msecs (HTTP/1.1 200) 7 headers in 382 bytes (1 switches on core 1)
[pid: 28461|app: 0|req: 332/776] 113.88.65.32 () {44 vars in 801 bytes} [Mon Aug 13 14:11:12 2018] GET /admin/jsi18n/ => generated 7682 bytes in 4 msecs (HTTP/1.1 200) 4 headers in 115 bytes (1 switches on core 0)
[pid: 19403|app: 0|req: 166/777] 113.88.65.32 () {46 vars in 895 bytes} [Mon Aug 13 14:11:16 2018] GET /admin/ => generated 7710 bytes in 20 msecs (HTTP/1.1 200) 6 headers in 227 bytes (1 switches on core 1)
[pid: 28461|app: 0|req: 333/778] 113.88.65.32 () {46 vars in 923 bytes} [Mon Aug 13 14:11:17 2018] GET /admin/blog/post/4/change/ => generated 10828 bytes in 58 msecs (HTTP/1.1 200) 7 headers in 382 bytes (1 switches on core 0)
[pid: 28461|app: 0|req: 334/779] 113.88.65.32 () {44 vars in 801 bytes} [Mon Aug 13 14:11:18 2018] GET /admin/jsi18n/ => generated 7682 bytes in 4 msecs (HTTP/1.1 200) 4 headers in 115 bytes (1 switches on core 1)
[pid: 19403|app: 0|req: 167/780] 113.88.65.32 () {46 vars in 895 bytes} [Mon Aug 13 14:11:21 2018] GET /admin/ => generated 7710 bytes in 19 msecs (HTTP/1.1 200) 6 headers in 227 bytes (1 switches on core 0)
[pid: 28461|app: 0|req: 335/781] 113.88.65.32 () {46 vars in 923 bytes} [Mon Aug 13 14:11:23 2018] GET /admin/blog/post/4/change/ => generated 10828 bytes in 56 msecs (HTTP/1.1 200) 7 headers in 382 bytes (1 switches on core 1)
[pid: 28461|app: 0|req: 336/782] 113.88.65.32 () {44 vars in 801 bytes} [Mon Aug 13 14:11:24 2018] GET /admin/jsi18n/ => generated 7682 bytes in 4 msecs (HTTP/1.1 200) 4 headers in 115 bytes (1 switches on core 0)
[pid: 27717|app: 0|req: 147/783] 113.88.65.32 () {46 vars in 895 bytes} [Mon Aug 13 14:11:28 2018] GET /admin/ => generated 7710 bytes in 20 msecs (HTTP/1.1 200) 6 headers in 227 bytes (1 switches on core 1)
[pid: 28461|app: 0|req: 337/784] 113.88.65.32 () {46 vars in 910 bytes} [Mon Aug 13 14:11:29 2018] GET /admin/blog/post/ => generated 6621 bytes in 36 msecs (HTTP/1.1 200) 7 headers in 381 bytes (1 switches on core 0)
[pid: 28461|app: 0|req: 338/785] 113.88.65.32 () {44 vars in 823 bytes} [Mon Aug 13 14:11:32 2018] GET / => generated 11030 bytes in 27 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 1)
[pid: 28461|app: 0|req: 339/786] 113.88.65.32 () {46 vars in 922 bytes} [Mon Aug 13 14:11:45 2018] GET /search/?q=%E9%9A%8F%E7%AC%94 => generated 9303 bytes in 34 msecs (HTTP/1.1 200) 3 headers in 110 bytes (1 switches on core 0)
[pid: 28461|app: 0|req: 340/787] 113.88.65.32 () {46 vars in 918 bytes} [Mon Aug 13 14:11:55 2018] GET /search/?q=py => generated 11567 bytes in 32 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 1)
<p>[TOC]</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">def Hello():
    pass</pre>
<p>&nbsp;</p>
------------------------------------------------------------------------------------------------------------------------
<p>[TOC]</p>

<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">def Hello():
    pass</pre>

<p>&nbsp;</p>
<div class="toc">
<ul></ul>
</div>

[pid: 28461|app: 0|req: 341/788] 113.88.65.32 () {46 vars in 893 bytes} [Mon Aug 13 14:11:59 2018] GET /post/1/ => generated 10937 bytes in 75 msecs (HTTP/1.1 200) 5 headers in 279 bytes (1 switches on core 0)
[pid: 28461|app: 0|req: 342/789] 113.88.65.32 () {46 vars in 900 bytes} [Mon Aug 13 14:12:10 2018] GET /search/?q=T => generated 7704 bytes in 37 msecs (HTTP/1.1 200) 3 headers in 110 bytes (1 switches on core 1)
<p>[TOC]</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">def Hello():
    pass</pre>
<p>&nbsp;</p>
------------------------------------------------------------------------------------------------------------------------
<p>[TOC]</p>

<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">def Hello():
    pass</pre>

<p>&nbsp;</p>
<div class="toc">
<ul></ul>
</div>

[pid: 28461|app: 0|req: 343/790] 113.88.65.32 () {46 vars in 893 bytes} [Mon Aug 13 14:12:19 2018] GET /post/1/ => generated 10937 bytes in 299 msecs (HTTP/1.1 200) 5 headers in 279 bytes (1 switches on core 0)
[pid: 28461|app: 0|req: 344/791] 113.88.65.32 () {44 vars in 833 bytes} [Mon Aug 13 14:12:44 2018] GET /admin => generated 0 bytes in 0 msecs (HTTP/1.1 301) 3 headers in 112 bytes (1 switches on core 1)
[pid: 27717|app: 0|req: 148/792] 113.88.65.32 () {44 vars in 835 bytes} [Mon Aug 13 14:12:45 2018] GET /admin/ => generated 7710 bytes in 19 msecs (HTTP/1.1 200) 6 headers in 227 bytes (1 switches on core 0)
[pid: 28461|app: 0|req: 345/793] 113.88.65.32 () {46 vars in 923 bytes} [Mon Aug 13 14:12:47 2018] GET /admin/blog/post/4/change/ => generated 10828 bytes in 68 msecs (HTTP/1.1 200) 7 headers in 382 bytes (1 switches on core 1)
[pid: 28461|app: 0|req: 346/794] 113.88.65.32 () {44 vars in 801 bytes} [Mon Aug 13 14:12:48 2018] GET /admin/jsi18n/ => generated 7682 bytes in 5 msecs (HTTP/1.1 200) 4 headers in 115 bytes (1 switches on core 0)
[pid: 19403|app: 0|req: 168/795] 113.88.65.32 () {44 vars in 835 bytes} [Mon Aug 13 14:12:51 2018] GET /admin/ => generated 7710 bytes in 21 msecs (HTTP/1.1 200) 6 headers in 227 bytes (1 switches on core 1)
[pid: 28461|app: 0|req: 347/796] 113.88.65.32 () {46 vars in 905 bytes} [Mon Aug 13 14:12:56 2018] GET /admin/blog/post/ => generated 6621 bytes in 38 msecs (HTTP/1.1 200) 7 headers in 381 bytes (1 switches on core 0)
[pid: 28461|app: 0|req: 348/797] 113.88.65.32 () {44 vars in 792 bytes} [Mon Aug 13 14:12:56 2018] GET /admin/jsi18n/ => generated 7682 bytes in 4 msecs (HTTP/1.1 200) 4 headers in 115 bytes (1 switches on core 1)
[pid: 27717|app: 0|req: 149/798] 113.88.65.32 () {46 vars in 933 bytes} [Mon Aug 13 14:13:00 2018] GET /admin/blog/post/1/change/ => generated 11043 bytes in 53 msecs (HTTP/1.1 200) 7 headers in 382 bytes (1 switches on core 1)
[pid: 28461|app: 0|req: 349/799] 113.88.65.32 () {44 vars in 801 bytes} [Mon Aug 13 14:13:00 2018] GET /admin/jsi18n/ => generated 7682 bytes in 4 msecs (HTTP/1.1 200) 4 headers in 115 bytes (1 switches on core 1)
Not Found: /search/index.html
[pid: 28461|app: 0|req: 350/800] 113.88.65.32 () {46 vars in 913 bytes} [Mon Aug 13 14:18:51 2018] GET /search/index.html => generated 3466 bytes in 3 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 0)
Not Found: /search/full-width.html
[pid: 28461|app: 0|req: 351/801] 113.88.65.32 () {46 vars in 923 bytes} [Mon Aug 13 14:18:54 2018] GET /search/full-width.html => generated 3481 bytes in 3 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 1)
Not Found: /search/about.html
[pid: 28461|app: 0|req: 352/802] 113.88.65.32 () {46 vars in 913 bytes} [Mon Aug 13 14:18:57 2018] GET /search/about.html => generated 3466 bytes in 3 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 0)
Not Found: /search/contact.html
[pid: 27717|app: 0|req: 150/803] 113.88.65.32 () {46 vars in 917 bytes} [Mon Aug 13 14:18:59 2018] GET /search/contact.html => generated 3472 bytes in 3 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 0)
[pid: 28461|app: 0|req: 353/804] 113.88.65.32 () {46 vars in 895 bytes} [Mon Aug 13 14:19:08 2018] GET /all/rss/ => generated 14934 bytes in 13 msecs (HTTP/1.1 200) 3 headers in 121 bytes (112 switches on core 1)
[pid: 28461|app: 0|req: 354/805] 113.88.65.32 () {46 vars in 891 bytes} [Mon Aug 13 14:21:14 2018] GET /tag/2/ => generated 8736 bytes in 23 msecs (HTTP/1.1 200) 3 headers in 110 bytes (1 switches on core 0)
[pid: 28461|app: 0|req: 355/806] 113.88.65.32 () {46 vars in 885 bytes} [Mon Aug 13 14:21:23 2018] GET /tag/2/ => generated 8736 bytes in 17 msecs (HTTP/1.1 200) 3 headers in 110 bytes (1 switches on core 1)
![Alt text](/static/images/django_blog/01.jpg)

---
typora-copy-images-to: images
typora-root-url: images
---

# Django是个啥

​	最初是被开发来用于管理劳伦斯出版集团旗下的一些以新闻内容为主的网站的。并于2005年7月在BSD许可证下发布。这套框架是以比利时的吉普赛爵士吉他手Django Reinhardt来命名的。

​	Django的主要目标是使得开发复杂的、数据库驱动的网站变得简单。Django注重组件的重用性和“可插拔性”，敏捷开发和DRY法则（Don't Repeat Yourself）。在Django中Python被普遍使用，甚至包括配置文件和数据模型。

- 由 Python 开发的一个免费的开源网站框架，可以用于快速搭建高性能，优雅的网站

- Django 中提供了开发网站经常用到的模块，常见的代码都为你写好了

- Django 提供了通用Web开发模式的高度抽象，提供了频繁进行的编程作业的快速解决方法，以及为“如何解决问题”提供了清晰明了的约定。

- Django的理念是DRY(Don't Repeat Yourself)来鼓励快速开发！

  

# 开发环境

Ubuntu + Python3  + Django + PyCharm



# Ubuntu系统和命令介绍

### 系统设置

### 常用命令

- cd
- ls
- cp
- mv
- rm
- mkdir
- pwd
- touch
- cat
- history
- ps
  - ps -aux
- kill 
  - kill -9 pid
- su/sudo
- chmod
- grep
- which
- whereis
- ifconfig
- netstat
  - netstat -antp 查看网络连接状态
- wget
- ssh username@host -p
  - ssh-keygen
- tar
  - tar -zxvf 解压缩
  - tar -czvf 压缩
- du
  - du -sh
- df
  - df -h
- apt install
- apt update
- apt remove
- apt autoremove
- dpkg -i
- vi/vim

# BS/CS

​        C/S 架构即“客户端-服务器” 架构。这里的“客户端”可以是有 GUI （图形用户界面）的定制软件，也可以是浏览器，甚至可以是通过 SSH 访问服务器的命令行脚本。只要是客户端通过访问服务器调取计算或者存储资源的，统统都是 C/S 架构。所谓的 Browser-Server 架构其实是 C/S 架构的一种特殊的实现形式，而不是其对立面。

- C/S:
  - C: Client
  - S: Server
- B/S
  - B: Browser
  - S: Server       

# MVC/MVT

- MVC

  - M: Model（模型）
  - V: View（视图）
  - C: Controller（控制器）

- MVT

  - M: Model（模型），主要封装对数据库层的访问，对数据库中的数据进行增、删、改、查操作。

  - V: View（视图），用于封装结果，生成页面展示的html内容。

  - T: Template（模板），用于接收请求，处理业务逻辑，与Model和View交互，返回结果。

    ​

# HelloDjango项目

### 创建虚拟环境

### 虚拟环境的优点

- 使不同应用开发环境独立
- 环境升级不影响其他应用，也不会影响全局的python环境
- 可以防止系统中出现包管理混乱和版本冲突

开发会用 virtualenv 来管理多个开发环境

#### Linux/MacOS 下

virtualenvwrapper 使得virtualenv变得更好用，所以我们一起安装了

```
(sudo) pip install virtualenv virtualenvwrapper
```

修改~/.bash_profile或其它环境变量相关文件(如 .bashrc 或用 ZSH 之后的 .zshrc)，添加以下语句

```
export WORKON_HOME=$HOME/.virtualenvs
export PROJECT_HOME=$HOME/workspace
source /usr/local/bin/virtualenvwrapper.sh(每台机子的位置不一样，可以通过find命令找到)
```

修改后使之立即生效(也可以重启终端使之生效)：

```
source ~/.bash_profile
```



#### Windows 下：

```
pip install virtualenv virtualenvwrapper-win
```

【可选】Windows下默认虚拟环境是放在用户名下面的Envs中的，与桌面，我的文档，下载等文件夹在一块的。更改方法：计算机，属性，高级系统设置，环境变量，添加WORKON_HOME，如图（windows 10 环境变量设置截图）：

![](/1.png)

#### 虚拟环境使用方法：

- **mkvirtualenv django：创建运行环境django**

- **workon django: 工作在 django环境 或 从其它环境切换到 django环境**

- **deactivate**: 退出终端环境

- **其它的：**

- **rmvirtualenv** ENV：删除运行环境ENV

- **mkproject** mic：创建mic项目和运行环境mic

- **mktmpenv**：创建临时运行环境

- **lsvirtualenv**: 列出可用的运行环境

- **lssitepackages**: 列出当前环境安装了的包

  ​




### 安装Django框架

- pip install django==1.11.7

- 测试django是否已经安装好

  - 进入python shell

    ```python
    import django
    django.get_version()
    ```

- pip list 显示当前python环境中的所有的库

- pip freeze 显示当前python环境中的除系统内置库外的所有第三方库

### 创建HelloDJango项目

- 开启一个django项目 django-admin startproject day01_HelloDjango
- 测试django项目环境 python manage.py runserver
  - python manage.py runserver 0.0.0.0:8000 表示允许本机所有的IP被外网访问
  - python manage.py runserver 9000 使用本机运行，但端口是9000
- 开启自己的App
  - python manage.py startapp App



### Django的项目结构

1. manage.py
   - 管理整个项目
2. XXX/settings.py  
   - 项目配置文件
3. XXX/urls.py
   - 路由器，接收用户请求，分发给视图函数（控制器）
4. XXX/wsgi.py
   - 网关接口，通常用在线上环境部署（开发过程中不会接触）

### settings.py

1. DEBUG 是否打开DEBUG
2. ALLOWED_HOSTS 允许访问的主机
3. INSTALLED_APPS   安装了的应用 
4. DATABASES   数据库配置
5. LANGUAGE_CODE 中文 zh-hans
6. TIME_ZONE  中国 Asia/Shanghai



### Pycharm安装

1. 解压
2. 目录结构中会有  bin
3. 进入bin
4. bin 中pycharm.sh
5. 执行 ./pycharm.sh
6. 如果想在终端中的任何位置运行，那就配置到环境变量中



### 创建数据库

- 创建更改的文件
  - python manage.py makemigrations
- 将生成的py文件应用到数据库
  - python manage.py migrate
- 清空数据库
  - python manage.py flush
- 导入导出数据
  - python manage.py dumpdata appname > appname.json
  - python manage.py loaddata appname.json

### 创建视图

- 需要配置到工程的配置文件中settings中的INSTALLED_APPS
- views中定义函数，接收request，返回response
- 在urls中配置路由规则
  - 在根urls中配置（管理麻烦，配置简单）
  - 在App中创建自己的urls，在urls中书写规则，将urls配置到工程urls中
- 创建模板目录，在views返回时调用模板的渲染
- 变更数据库
  - 在settings中配置数据库信息



# Django请求流程

- 进来的请求转入/index/。
- Django 通过在 ROOT_URLCONF 配置来决定根 URLconf。
- Django 在 URLconf 中的所有 URL 模式中，查找第一个匹配 /index/ 的条目。
- 如果找到匹配，将调用相应的视图函数。
- 视图函数返回一个 HttpResponse。
- Django 转换 HttpResponse 为一个适合的 HTTP response， 以 Web page 显示出来。



# 设计一个小项目

### 需求分析

- 本示例完成“班级-学生”信息的维护，需要存储两种数据：班级、学生
- 班级表结构设计：
  - 表名：Grade
  - 班级名称：g_name
  - 班级人数：g_num
- 学生表结构设计：
  - 表名：Student
  - 学生姓名：s_name
  - 学生性别：s_gender
  - 所属班级：s_grade
- 班级-学生的关系为一对多

### 数据库配置

- 在settings.py文件中，通过DATABASES项进行数据库设置
- django支持的数据库包括：sqlite、mysql等主流数据库
- Django默认使用SQLite数据库

### 创建应用

- 在一个项目中可以创建一到多个应用，每个应用进行一种业务处理
- 创建应用的命令：

```
python manage.py startapp day1_hello_django
```

- 应用的目录结构如下图

![](/django项目目录结构.png)

### 定义模型类

- 有一个数据表，就有一个模型类与之对应
- 打开models.py文件，定义模型类
- 引入包from django.db import models
- 模型类继承自models.Model类
- **说明：不需要定义主键列，在生成时会自动添加，并且值为自动增长**
- 当输出对象时，会调用对象的str方法

```python
from django.db import models

class Grade(models.Model):
    g_name = models.CharField(max_length=20, db_column="班级名称")
    g_num = models.IntegerField(default=30)
    g_crete_date = models.DateTimeField(auto_now=True)

class Student(models.Model):
    s_name = models.CharField(max_length=20, db_column="姓名")
    s_age = models.IntegerField(default=20, db_column="年龄")
    s_sex = models.BooleanField(default=True)
    s_birthday = models.DateTimeField()
    s_grade = models.ForeignKey(Grade)

    class Meta:
        ordering = ["-s_age"]
        # 为数据库设置别名
        verbose_name = "学生表"
    	verbose_name_plural = "学生表"
        
    def _ _str_ _(self):
        return "%d" % self.pk
```

### 生成数据表

- 激活模型：编辑settings.py文件，将booktest应用加入到installed_apps中

  ![1531115052424](/注册app.png)

- 生成迁移文件：根据模型类生成sql语句

```
python manage.py makemigrations
```

- 迁移文件被生成到应用的migrations目录

![1531115146872](/迁移文件.png)

- 执行迁移：执行sql语句生成数据表

```
python manage.py migrate
```

### 测试数据操作

- 进入python shell，进行简单的模型API练习

```
python manage.py shell
```

- 进入shell后提示如下：

![](/进入django shell.png)

- 引入需要的包：

```
from App.models import Grade,Student
```

- 查询所有班级信息：

```
Grade.objects.all()
```

- 新建班级信息：

```
grade = Grade()
grade.g_name = "深圳python1805班"
grade.g_num = 40
grade.save()
```

- 查找班级信息：

```
grade = Grade.objects.get(pk=1)
```

- 输出班级信息：

```
grade
grade.id
grade.g_name
```

- 修改班级信息：

```
grade.g_name="大神班"
grade.save()
```

- 删除班级信息：

```
grade.delete()
```

### 关联对象的操作

- 对于Student可以按照上面的操作方式进行
- 添加，注意添加关联对象

```
s=Student()
s.s_name='张三'
s.s_sex=True
s.scontent='爱好打篮球'
# 注意grade为Grade的实例，上面我们已经删除了，这里需要重新创建
s.sclass=grade
s.save()
```

### 运行项目

```
python manage.py runserver ip:port
```



# 项目主要部分

### 视图

- 在django中，视图的作用是对路由转发过来的url进行处理
- 视图函数接收的第一个参数是request对象，request对象中包含了请求的信息
- 视图函数写每个app下的views.py文件中

```
from django.shortcuts import render
from django.http import HttpResponse

# Create your views here.

def index(request):
    return HttpResponse("Hello Django")
```

注意：视图函数的第一个参数必须是request，返回必须调用django的定义的方法规范。

### 路由

- 在视图函数写完后，要编写相应的url规则，这样当我们在浏览器上输入网址的时候才能转到相应的视图函数处理逻辑
- 只定义路径部分，不定义域名
- 路由函数的url部分遵循正则的书写方式
- 路由规则由两部分必须指定的参数和其他可选参数组成

```
url(r'^index/', App.index, name="index"),
```

注：每次定义完路由规则，在代码的末尾添加逗号

- 在编写路由规则之前必须导入相应的视图
- 在组织项目时，将app和项目的路由分离



### 模板

- 模板是HTML文件，通过占位符来传递视图函数的数据

- 每个app目录下都可以创建templates的文件夹，django会自动从这些app里寻找相应的模板

  

##### 定义模板

定义index.html模板文件

```
<!DOCTYPE html>
<html>
<head>
  <title>首页</title>
</head>
<body>
<h1>学生列表</h1>
<ul>
{%for student in students%}
<li>
  {{student.s_name}}
</li>
{%endfor%}
</ul>
</body>
</html>
```

定义detail.html模板

```
<!DOCTYPE html>
<html>
<head>
  <title>详情页</title>
</head>
<body>
<h1>学生详情</h1>
<ul>
<li>
  {{student.s_name}}
  {{student.s_gender}}
  {{student.s_content}}
</li>
</ul>
</body>
</html>
```

##### 使用模板

- 定义视图

```
def index(request):
    students = StudentInfo.objects.all()
    return render(request, "index.html", {"students":students})

def index_page(request, id):
    student = StudentInfo.objects.get(pk=id)
    return render(request, "detail.html", {"student":student})
```

- 定义路由

```
url(r'index/$', class_view.index, name="index"),
url(r'index/(\d+)/$', class_view.index_page, name="index_page"),
```

- 运行项目
  - python manage.py runserver
------------------------------------------------------------------------------------------------------------------------
<p><img alt="Alt text" src="/static/images/django_blog/01.jpg" /></p>
<hr />
<p>typora-copy-images-to: images
typora-root-url: images</p>
<hr />
<h1 id="django是个啥">Django是个啥</h1>
<p>​   最初是被开发来用于管理劳伦斯出版集团旗下的一些以新闻内容为主的网站的。并于2005年7月在BSD许可证下发布。这套框架是以比利时的吉普赛爵士吉他手Django Reinhardt来命名的。</p>
<p>​   Django的主要目标是使得开发复杂的、数据库驱动的网站变得简单。Django注重组件的重用性和“可插拔性”，敏捷开发和DRY法则（Don't Repeat Yourself）。在Django中Python被普遍使用，甚至包括配置文件和数据模型。</p>
<ul>
<li>
<p>由 Python 开发的一个免费的开源网站框架，可以用于快速搭建高性能，优雅的网站</p>
</li>
<li>
<p>Django 中提供了开发网站经常用到的模块，常见的代码都为你写好了</p>
</li>
<li>
<p>Django 提供了通用Web开发模式的高度抽象，提供了频繁进行的编程作业的快速解决方法，以及为“如何解决问题”提供了清晰明了的约定。</p>
</li>
<li>
<p>Django的理念是DRY(Don't Repeat Yourself)来鼓励快速开发！</p>
</li>
</ul>
<h1 id="开发环境">开发环境</h1>
<p>Ubuntu + Python3  + Django + PyCharm</p>
<h1 id="ubuntu系统和命令介绍">Ubuntu系统和命令介绍</h1>
<h3 id="系统设置">系统设置</h3>
<h3 id="常用命令">常用命令</h3>
<ul>
<li>cd</li>
<li>ls</li>
<li>cp</li>
<li>mv</li>
<li>rm</li>
<li>mkdir</li>
<li>pwd</li>
<li>touch</li>
<li>cat</li>
<li>history</li>
<li>ps</li>
<li>ps -aux</li>
<li>kill </li>
<li>kill -9 pid</li>
<li>su/sudo</li>
<li>chmod</li>
<li>grep</li>
<li>which</li>
<li>whereis</li>
<li>ifconfig</li>
<li>netstat</li>
<li>netstat -antp 查看网络连接状态</li>
<li>wget</li>
<li>ssh username@host -p</li>
<li>ssh-keygen</li>
<li>tar</li>
<li>tar -zxvf 解压缩</li>
<li>tar -czvf 压缩</li>
<li>du</li>
<li>du -sh</li>
<li>df</li>
<li>df -h</li>
<li>apt install</li>
<li>apt update</li>
<li>apt remove</li>
<li>apt autoremove</li>
<li>dpkg -i</li>
<li>vi/vim</li>
</ul>
<h1 id="bscs">BS/CS</h1>
<p>​        C/S 架构即“客户端-服务器” 架构。这里的“客户端”可以是有 GUI （图形用户界面）的定制软件，也可以是浏览器，甚至可以是通过 SSH 访问服务器的命令行脚本。只要是客户端通过访问服务器调取计算或者存储资源的，统统都是 C/S 架构。所谓的 Browser-Server 架构其实是 C/S 架构的一种特殊的实现形式，而不是其对立面。</p>
<ul>
<li>C/S:</li>
<li>C: Client</li>
<li>S: Server</li>
<li>B/S</li>
<li>B: Browser</li>
<li>S: Server       </li>
</ul>
<h1 id="mvcmvt">MVC/MVT</h1>
<ul>
<li>
<p>MVC</p>
</li>
<li>
<p>M: Model（模型）</p>
</li>
<li>V: View（视图）</li>
<li>
<p>C: Controller（控制器）</p>
</li>
<li>
<p>MVT</p>
</li>
<li>
<p>M: Model（模型），主要封装对数据库层的访问，对数据库中的数据进行增、删、改、查操作。</p>
</li>
<li>
<p>V: View（视图），用于封装结果，生成页面展示的html内容。</p>
</li>
<li>
<p>T: Template（模板），用于接收请求，处理业务逻辑，与Model和View交互，返回结果。</p>
<p>​</p>
</li>
</ul>
<h1 id="hellodjango项目">HelloDjango项目</h1>
<h3 id="创建虚拟环境">创建虚拟环境</h3>
<h3 id="虚拟环境的优点">虚拟环境的优点</h3>
<ul>
<li>使不同应用开发环境独立</li>
<li>环境升级不影响其他应用，也不会影响全局的python环境</li>
<li>可以防止系统中出现包管理混乱和版本冲突</li>
</ul>
<p>开发会用 virtualenv 来管理多个开发环境</p>
<h4 id="linuxmacos-下">Linux/MacOS 下</h4>
<p>virtualenvwrapper 使得virtualenv变得更好用，所以我们一起安装了</p>
<div class="codehilite"><pre><span></span>(sudo) pip install virtualenv virtualenvwrapper
</pre></div>


<p>修改~/.bash_profile或其它环境变量相关文件(如 .bashrc 或用 ZSH 之后的 .zshrc)，添加以下语句</p>
<div class="codehilite"><pre><span></span>export WORKON_HOME=$HOME/.virtualenvs
export PROJECT_HOME=$HOME/workspace
source /usr/local/bin/virtualenvwrapper.sh(每台机子的位置不一样，可以通过find命令找到)
</pre></div>


<p>修改后使之立即生效(也可以重启终端使之生效)：</p>
<div class="codehilite"><pre><span></span>source ~/.bash_profile
</pre></div>


<h4 id="windows-下">Windows 下：</h4>
<div class="codehilite"><pre><span></span>pip install virtualenv virtualenvwrapper-win
</pre></div>


<p>【可选】Windows下默认虚拟环境是放在用户名下面的Envs中的，与桌面，我的文档，下载等文件夹在一块的。更改方法：计算机，属性，高级系统设置，环境变量，添加WORKON_HOME，如图（windows 10 环境变量设置截图）：</p>
<p><img alt="" src="/1.png" /></p>
<h4 id="虚拟环境使用方法">虚拟环境使用方法：</h4>
<ul>
<li>
<p><strong>mkvirtualenv django：创建运行环境django</strong></p>
</li>
<li>
<p><strong>workon django: 工作在 django环境 或 从其它环境切换到 django环境</strong></p>
</li>
<li>
<p><strong>deactivate</strong>: 退出终端环境</p>
</li>
<li>
<p><strong>其它的：</strong></p>
</li>
<li>
<p><strong>rmvirtualenv</strong> ENV：删除运行环境ENV</p>
</li>
<li>
<p><strong>mkproject</strong> mic：创建mic项目和运行环境mic</p>
</li>
<li>
<p><strong>mktmpenv</strong>：创建临时运行环境</p>
</li>
<li>
<p><strong>lsvirtualenv</strong>: 列出可用的运行环境</p>
</li>
<li>
<p><strong>lssitepackages</strong>: 列出当前环境安装了的包</p>
</li>
</ul>
<p>​</p>
<h3 id="安装django框架">安装Django框架</h3>
<ul>
<li>
<p>pip install django==1.11.7</p>
</li>
<li>
<p>测试django是否已经安装好</p>
</li>
<li>
<p>进入python shell</p>
<p><code>python
import django
django.get_version()</code></p>
</li>
<li>
<p>pip list 显示当前python环境中的所有的库</p>
</li>
<li>
<p>pip freeze 显示当前python环境中的除系统内置库外的所有第三方库</p>
</li>
</ul>
<h3 id="创建hellodjango项目">创建HelloDJango项目</h3>
<ul>
<li>开启一个django项目 django-admin startproject day01_HelloDjango</li>
<li>测试django项目环境 python manage.py runserver</li>
<li>python manage.py runserver 0.0.0.0:8000 表示允许本机所有的IP被外网访问</li>
<li>python manage.py runserver 9000 使用本机运行，但端口是9000</li>
<li>开启自己的App</li>
<li>python manage.py startapp App</li>
</ul>
<h3 id="django的项目结构">Django的项目结构</h3>
<ol>
<li>manage.py</li>
<li>管理整个项目</li>
<li>XXX/settings.py  </li>
<li>项目配置文件</li>
<li>XXX/urls.py</li>
<li>路由器，接收用户请求，分发给视图函数（控制器）</li>
<li>XXX/wsgi.py</li>
<li>网关接口，通常用在线上环境部署（开发过程中不会接触）</li>
</ol>
<h3 id="settingspy">settings.py</h3>
<ol>
<li>DEBUG 是否打开DEBUG</li>
<li>ALLOWED_HOSTS 允许访问的主机</li>
<li>INSTALLED_APPS   安装了的应用 </li>
<li>DATABASES   数据库配置</li>
<li>LANGUAGE_CODE 中文 zh-hans</li>
<li>TIME_ZONE  中国 Asia/Shanghai</li>
</ol>
<h3 id="pycharm安装">Pycharm安装</h3>
<ol>
<li>解压</li>
<li>目录结构中会有  bin</li>
<li>进入bin</li>
<li>bin 中pycharm.sh</li>
<li>执行 ./pycharm.sh</li>
<li>如果想在终端中的任何位置运行，那就配置到环境变量中</li>
</ol>
<h3 id="创建数据库">创建数据库</h3>
<ul>
<li>创建更改的文件</li>
<li>python manage.py makemigrations</li>
<li>将生成的py文件应用到数据库</li>
<li>python manage.py migrate</li>
<li>清空数据库</li>
<li>python manage.py flush</li>
<li>导入导出数据</li>
<li>python manage.py dumpdata appname &gt; appname.json</li>
<li>python manage.py loaddata appname.json</li>
</ul>
<h3 id="创建视图">创建视图</h3>
<ul>
<li>需要配置到工程的配置文件中settings中的INSTALLED_APPS</li>
<li>views中定义函数，接收request，返回response</li>
<li>在urls中配置路由规则</li>
<li>在根urls中配置（管理麻烦，配置简单）</li>
<li>在App中创建自己的urls，在urls中书写规则，将urls配置到工程urls中</li>
<li>创建模板目录，在views返回时调用模板的渲染</li>
<li>变更数据库</li>
<li>在settings中配置数据库信息</li>
</ul>
<h1 id="django请求流程">Django请求流程</h1>
<ul>
<li>进来的请求转入/index/。</li>
<li>Django 通过在 ROOT_URLCONF 配置来决定根 URLconf。</li>
<li>Django 在 URLconf 中的所有 URL 模式中，查找第一个匹配 /index/ 的条目。</li>
<li>如果找到匹配，将调用相应的视图函数。</li>
<li>视图函数返回一个 HttpResponse。</li>
<li>Django 转换 HttpResponse 为一个适合的 HTTP response， 以 Web page 显示出来。</li>
</ul>
<h1 id="设计一个小项目">设计一个小项目</h1>
<h3 id="需求分析">需求分析</h3>
<ul>
<li>本示例完成“班级-学生”信息的维护，需要存储两种数据：班级、学生</li>
<li>班级表结构设计：</li>
<li>表名：Grade</li>
<li>班级名称：g_name</li>
<li>班级人数：g_num</li>
<li>学生表结构设计：</li>
<li>表名：Student</li>
<li>学生姓名：s_name</li>
<li>学生性别：s_gender</li>
<li>所属班级：s_grade</li>
<li>班级-学生的关系为一对多</li>
</ul>
<h3 id="数据库配置">数据库配置</h3>
<ul>
<li>在settings.py文件中，通过DATABASES项进行数据库设置</li>
<li>django支持的数据库包括：sqlite、mysql等主流数据库</li>
<li>Django默认使用SQLite数据库</li>
</ul>
<h3 id="创建应用">创建应用</h3>
<ul>
<li>在一个项目中可以创建一到多个应用，每个应用进行一种业务处理</li>
<li>创建应用的命令：</li>
</ul>
<div class="codehilite"><pre><span></span>python manage.py startapp day1_hello_django
</pre></div>


<ul>
<li>应用的目录结构如下图</li>
</ul>
<p><img alt="" src="/django项目目录结构.png" /></p>
<h3 id="定义模型类">定义模型类</h3>
<ul>
<li>有一个数据表，就有一个模型类与之对应</li>
<li>打开models.py文件，定义模型类</li>
<li>引入包from django.db import models</li>
<li>模型类继承自models.Model类</li>
<li><strong>说明：不需要定义主键列，在生成时会自动添加，并且值为自动增长</strong></li>
<li>当输出对象时，会调用对象的str方法</li>
</ul>
<div class="codehilite"><pre><span></span><span class="kn">from</span> <span class="nn">django.db</span> <span class="kn">import</span> <span class="n">models</span>

<span class="k">class</span> <span class="nc">Grade</span><span class="p">(</span><span class="n">models</span><span class="o">.</span><span class="n">Model</span><span class="p">):</span>
    <span class="n">g_name</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">CharField</span><span class="p">(</span><span class="n">max_length</span><span class="o">=</span><span class="mi">20</span><span class="p">,</span> <span class="n">db_column</span><span class="o">=</span><span class="s2">&quot;班级名称&quot;</span><span class="p">)</span>
    <span class="n">g_num</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">IntegerField</span><span class="p">(</span><span class="n">default</span><span class="o">=</span><span class="mi">30</span><span class="p">)</span>
    <span class="n">g_crete_date</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">DateTimeField</span><span class="p">(</span><span class="n">auto_now</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>

<span class="k">class</span> <span class="nc">Student</span><span class="p">(</span><span class="n">models</span><span class="o">.</span><span class="n">Model</span><span class="p">):</span>
    <span class="n">s_name</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">CharField</span><span class="p">(</span><span class="n">max_length</span><span class="o">=</span><span class="mi">20</span><span class="p">,</span> <span class="n">db_column</span><span class="o">=</span><span class="s2">&quot;姓名&quot;</span><span class="p">)</span>
    <span class="n">s_age</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">IntegerField</span><span class="p">(</span><span class="n">default</span><span class="o">=</span><span class="mi">20</span><span class="p">,</span> <span class="n">db_column</span><span class="o">=</span><span class="s2">&quot;年龄&quot;</span><span class="p">)</span>
    <span class="n">s_sex</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">BooleanField</span><span class="p">(</span><span class="n">default</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
    <span class="n">s_birthday</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">DateTimeField</span><span class="p">()</span>
    <span class="n">s_grade</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">ForeignKey</span><span class="p">(</span><span class="n">Grade</span><span class="p">)</span>

    <span class="k">class</span> <span class="nc">Meta</span><span class="p">:</span>
        <span class="n">ordering</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&quot;-s_age&quot;</span><span class="p">]</span>
        <span class="c1"># 为数据库设置别名</span>
        <span class="n">verbose_name</span> <span class="o">=</span> <span class="s2">&quot;学生表&quot;</span>
        <span class="n">verbose_name_plural</span> <span class="o">=</span> <span class="s2">&quot;学生表&quot;</span>

    <span class="k">def</span> <span class="nf">_</span> <span class="n">_str_</span> <span class="n">_</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">return</span> <span class="s2">&quot;</span><span class="si">%d</span><span class="s2">&quot;</span> <span class="o">%</span> <span class="bp">self</span><span class="o">.</span><span class="n">pk</span>
</pre></div>


<h3 id="生成数据表">生成数据表</h3>
<ul>
<li>激活模型：编辑settings.py文件，将booktest应用加入到installed_apps中</li>
</ul>
<p><img alt="1531115052424" src="/注册app.png" /></p>
<ul>
<li>生成迁移文件：根据模型类生成sql语句</li>
</ul>
<div class="codehilite"><pre><span></span>python manage.py makemigrations
</pre></div>


<ul>
<li>迁移文件被生成到应用的migrations目录</li>
</ul>
<p><img alt="1531115146872" src="/迁移文件.png" /></p>
<ul>
<li>执行迁移：执行sql语句生成数据表</li>
</ul>
<div class="codehilite"><pre><span></span>python manage.py migrate
</pre></div>


<h3 id="测试数据操作">测试数据操作</h3>
<ul>
<li>进入python shell，进行简单的模型API练习</li>
</ul>
<div class="codehilite"><pre><span></span>python manage.py shell
</pre></div>


<ul>
<li>进入shell后提示如下：</li>
</ul>
<p>![](/进入django shell.png)</p>
<ul>
<li>引入需要的包：</li>
</ul>
<div class="codehilite"><pre><span></span><span class="kn">from</span> <span class="nn">App.models</span> <span class="kn">import</span> <span class="n">Grade</span><span class="p">,</span><span class="n">Student</span>
</pre></div>


<ul>
<li>查询所有班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>Grade.objects.all()
</pre></div>


<ul>
<li>新建班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>grade = Grade()
grade.g_name = &quot;深圳python1805班&quot;
grade.g_num = 40
grade.save()
</pre></div>


<ul>
<li>查找班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>grade = Grade.objects.get(pk=1)
</pre></div>


<ul>
<li>输出班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>grade
grade.id
grade.g_name
</pre></div>


<ul>
<li>修改班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>grade.g_name=&quot;大神班&quot;
grade.save()
</pre></div>


<ul>
<li>删除班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>grade.delete()
</pre></div>


<h3 id="关联对象的操作">关联对象的操作</h3>
<ul>
<li>对于Student可以按照上面的操作方式进行</li>
<li>添加，注意添加关联对象</li>
</ul>
<div class="codehilite"><pre><span></span>s=Student()
s.s_name=&#39;张三&#39;
s.s_sex=True
s.scontent=&#39;爱好打篮球&#39;
# 注意grade为Grade的实例，上面我们已经删除了，这里需要重新创建
s.sclass=grade
s.save()
</pre></div>


<h3 id="运行项目">运行项目</h3>
<div class="codehilite"><pre><span></span>python manage.py runserver ip:port
</pre></div>


<h1 id="项目主要部分">项目主要部分</h1>
<h3 id="视图">视图</h3>
<ul>
<li>在django中，视图的作用是对路由转发过来的url进行处理</li>
<li>视图函数接收的第一个参数是request对象，request对象中包含了请求的信息</li>
<li>视图函数写每个app下的views.py文件中</li>
</ul>
<div class="codehilite"><pre><span></span><span class="kn">from</span> <span class="nn">django.shortcuts</span> <span class="kn">import</span> <span class="n">render</span>
<span class="kn">from</span> <span class="nn">django.http</span> <span class="kn">import</span> <span class="n">HttpResponse</span>

<span class="c1"># Create your views here.</span>

<span class="k">def</span> <span class="nf">index</span><span class="p">(</span><span class="n">request</span><span class="p">):</span>
    <span class="k">return</span> <span class="n">HttpResponse</span><span class="p">(</span><span class="s2">&quot;Hello Django&quot;</span><span class="p">)</span>
</pre></div>


<p>注意：视图函数的第一个参数必须是request，返回必须调用django的定义的方法规范。</p>
<h3 id="路由">路由</h3>
<ul>
<li>在视图函数写完后，要编写相应的url规则，这样当我们在浏览器上输入网址的时候才能转到相应的视图函数处理逻辑</li>
<li>只定义路径部分，不定义域名</li>
<li>路由函数的url部分遵循正则的书写方式</li>
<li>路由规则由两部分必须指定的参数和其他可选参数组成</li>
</ul>
<div class="codehilite"><pre><span></span>url(r&#39;^index/&#39;, App.index, name=&quot;index&quot;),
</pre></div>


<p>注：每次定义完路由规则，在代码的末尾添加逗号</p>
<ul>
<li>在编写路由规则之前必须导入相应的视图</li>
<li>在组织项目时，将app和项目的路由分离</li>
</ul>
<h3 id="模板">模板</h3>
<ul>
<li>
<p>模板是HTML文件，通过占位符来传递视图函数的数据</p>
</li>
<li>
<p>每个app目录下都可以创建templates的文件夹，django会自动从这些app里寻找相应的模板</p>
</li>
</ul>
<h5 id="定义模板">定义模板</h5>
<p>定义index.html模板文件</p>
<div class="codehilite"><pre><span></span><span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="p">&lt;</span><span class="nt">html</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">title</span><span class="p">&gt;</span>首页<span class="p">&lt;/</span><span class="nt">title</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">h1</span><span class="p">&gt;</span>学生列表<span class="p">&lt;/</span><span class="nt">h1</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">ul</span><span class="p">&gt;</span>
<span class="cp">{%</span><span class="k">for</span> <span class="nv">student</span> <span class="k">in</span> <span class="nv">students</span><span class="cp">%}</span>
<span class="p">&lt;</span><span class="nt">li</span><span class="p">&gt;</span>
  <span class="cp">{{</span><span class="nv">student.s_name</span><span class="cp">}}</span>
<span class="p">&lt;/</span><span class="nt">li</span><span class="p">&gt;</span>
<span class="cp">{%</span><span class="k">endfor</span><span class="cp">%}</span>
<span class="p">&lt;/</span><span class="nt">ul</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span>
</pre></div>


<p>定义detail.html模板</p>
<div class="codehilite"><pre><span></span><span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="p">&lt;</span><span class="nt">html</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">title</span><span class="p">&gt;</span>详情页<span class="p">&lt;/</span><span class="nt">title</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">h1</span><span class="p">&gt;</span>学生详情<span class="p">&lt;/</span><span class="nt">h1</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">ul</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">li</span><span class="p">&gt;</span>
  <span class="cp">{{</span><span class="nv">student.s_name</span><span class="cp">}}</span>
  <span class="cp">{{</span><span class="nv">student.s_gender</span><span class="cp">}}</span>
  <span class="cp">{{</span><span class="nv">student.s_content</span><span class="cp">}}</span>
<span class="p">&lt;/</span><span class="nt">li</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">ul</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span>
</pre></div>


<h5 id="使用模板">使用模板</h5>
<ul>
<li>定义视图</li>
</ul>
<div class="codehilite"><pre><span></span>def index(request):
    students = StudentInfo.objects.all()
    return render(request, &quot;index.html&quot;, {&quot;students&quot;:students})

def index_page(request, id):
    student = StudentInfo.objects.get(pk=id)
    return render(request, &quot;detail.html&quot;, {&quot;student&quot;:student})
</pre></div>


<ul>
<li>定义路由</li>
</ul>
<div class="codehilite"><pre><span></span>url(r&#39;index/$&#39;, class_view.index, name=&quot;index&quot;),
url(r&#39;index/(\d+)/$&#39;, class_view.index_page, name=&quot;index_page&quot;),
</pre></div>


<ul>
<li>运行项目</li>
<li>python manage.py runserver</li>
</ul>
<div class="toc">
<ul>
<li><a href="#django是个啥">Django是个啥</a></li>
<li><a href="#开发环境">开发环境</a></li>
<li><a href="#ubuntu系统和命令介绍">Ubuntu系统和命令介绍</a><ul>
<li><a href="#系统设置">系统设置</a></li>
<li><a href="#常用命令">常用命令</a></li>
</ul>
</li>
<li><a href="#bscs">BS/CS</a></li>
<li><a href="#mvcmvt">MVC/MVT</a></li>
<li><a href="#hellodjango项目">HelloDjango项目</a><ul>
<li><a href="#创建虚拟环境">创建虚拟环境</a></li>
<li><a href="#虚拟环境的优点">虚拟环境的优点</a><ul>
<li><a href="#linuxmacos-下">Linux/MacOS 下</a></li>
<li><a href="#windows-下">Windows 下：</a></li>
<li><a href="#虚拟环境使用方法">虚拟环境使用方法：</a></li>
</ul>
</li>
<li><a href="#安装django框架">安装Django框架</a></li>
<li><a href="#创建hellodjango项目">创建HelloDJango项目</a></li>
<li><a href="#django的项目结构">Django的项目结构</a></li>
<li><a href="#settingspy">settings.py</a></li>
<li><a href="#pycharm安装">Pycharm安装</a></li>
<li><a href="#创建数据库">创建数据库</a></li>
<li><a href="#创建视图">创建视图</a></li>
</ul>
</li>
<li><a href="#django请求流程">Django请求流程</a></li>
<li><a href="#设计一个小项目">设计一个小项目</a><ul>
<li><a href="#需求分析">需求分析</a></li>
<li><a href="#数据库配置">数据库配置</a></li>
<li><a href="#创建应用">创建应用</a></li>
<li><a href="#定义模型类">定义模型类</a></li>
<li><a href="#生成数据表">生成数据表</a></li>
<li><a href="#测试数据操作">测试数据操作</a></li>
<li><a href="#关联对象的操作">关联对象的操作</a></li>
<li><a href="#运行项目">运行项目</a></li>
</ul>
</li>
<li><a href="#项目主要部分">项目主要部分</a><ul>
<li><a href="#视图">视图</a></li>
<li><a href="#路由">路由</a></li>
<li><a href="#模板">模板</a><ul>
<li><a href="#定义模板">定义模板</a></li>
<li><a href="#使用模板">使用模板</a></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>

[pid: 27717|app: 0|req: 151/807] 113.88.65.32 () {46 vars in 887 bytes} [Mon Aug 13 14:21:34 2018] GET /post/3/ => generated 36300 bytes in 671 msecs (HTTP/1.1 200) 5 headers in 279 bytes (1 switches on core 1)
Not Found: /1.png
[pid: 28461|app: 0|req: 356/808] 113.88.65.32 () {44 vars in 803 bytes} [Mon Aug 13 14:21:37 2018] GET /1.png => generated 3357 bytes in 3 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 0)
Not Found: /django项目目录结构.png
[pid: 24647|app: 0|req: 121/809] 113.88.65.32 () {44 vars in 885 bytes} [Mon Aug 13 14:21:37 2018] GET /django%E9%A1%B9%E7%9B%AE%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84.png => generated 3462 bytes in 6 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 0)
Not Found: /注册app.png
[pid: 19403|app: 0|req: 169/810] 113.88.65.32 () {44 vars in 831 bytes} [Mon Aug 13 14:21:38 2018] GET /%E6%B3%A8%E5%86%8Capp.png => generated 3393 bytes in 4 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 0)
Not Found: /迁移文件.png
[pid: 19403|app: 0|req: 170/811] 113.88.65.32 () {44 vars in 849 bytes} [Mon Aug 13 14:21:38 2018] GET /%E8%BF%81%E7%A7%BB%E6%96%87%E4%BB%B6.png => generated 3414 bytes in 3 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 1)
[pid: 28461|app: 0|req: 357/812] 113.88.65.32 () {42 vars in 680 bytes} [Mon Aug 13 14:30:14 2018] GET / => generated 11030 bytes in 53 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 0)
Not Found: /favicon.ico
[pid: 28461|app: 0|req: 358/813] 113.88.65.32 () {42 vars in 665 bytes} [Mon Aug 13 14:30:17 2018] GET /favicon.ico => generated 3375 bytes in 3 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 1)
Not Found: /favicon.ico
[pid: 27717|app: 0|req: 152/814] 113.88.65.32 () {42 vars in 665 bytes} [Mon Aug 13 14:30:17 2018] GET /favicon.ico => generated 3375 bytes in 4 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 0)
[pid: 28461|app: 0|req: 359/815] 113.88.65.32 () {44 vars in 724 bytes} [Mon Aug 13 14:31:42 2018] GET / => generated 11030 bytes in 28 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 1)
Not Found: /index.html
[pid: 28461|app: 0|req: 360/816] 113.88.65.32 () {44 vars in 744 bytes} [Mon Aug 13 14:32:09 2018] GET /index.html => generated 3372 bytes in 3 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 0)
Not Found: /full-width.html
[pid: 27717|app: 0|req: 153/817] 113.88.65.32 () {44 vars in 754 bytes} [Mon Aug 13 14:32:12 2018] GET /full-width.html => generated 3387 bytes in 3 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 1)
Not Found: /about.html
[pid: 24647|app: 0|req: 122/818] 113.88.65.32 () {44 vars in 744 bytes} [Mon Aug 13 14:32:14 2018] GET /about.html => generated 3372 bytes in 3 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 1)
[pid: 28461|app: 0|req: 361/819] 113.88.65.32 () {42 vars in 680 bytes} [Mon Aug 13 14:32:31 2018] GET / => generated 11030 bytes in 22 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 0)
[pid: 28461|app: 0|req: 362/820] 113.88.65.32 () {44 vars in 737 bytes} [Mon Aug 13 14:32:42 2018] GET /?page=2 => generated 8918 bytes in 20 msecs (HTTP/1.1 200) 3 headers in 110 bytes (1 switches on core 1)
<p>[TOC]</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">def Hello():
    pass</pre>
<p>&nbsp;</p>
------------------------------------------------------------------------------------------------------------------------
<p>[TOC]</p>

<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">def Hello():
    pass</pre>

<p>&nbsp;</p>
<div class="toc">
<ul></ul>
</div>

[pid: 27717|app: 0|req: 154/821] 113.88.65.32 () {44 vars in 745 bytes} [Mon Aug 13 14:32:43 2018] GET /post/1/ => generated 10937 bytes in 58 msecs (HTTP/1.1 200) 5 headers in 279 bytes (1 switches on core 0)
[pid: 28461|app: 0|req: 363/822] 113.88.65.32 () {46 vars in 850 bytes} [Mon Aug 13 14:33:08 2018] GET /archive/2018/8/ => generated 7708 bytes in 15 msecs (HTTP/1.1 200) 3 headers in 110 bytes (1 switches on core 0)
[pid: 27717|app: 0|req: 155/823] 113.88.65.32 () {46 vars in 858 bytes} [Mon Aug 13 14:33:10 2018] GET /archive/2018/7/ => generated 7708 bytes in 14 msecs (HTTP/1.1 200) 3 headers in 110 bytes (1 switches on core 1)
[pid: 19403|app: 0|req: 171/824] 113.88.65.32 () {46 vars in 858 bytes} [Mon Aug 13 14:33:13 2018] GET /archive/2018/7/ => generated 7708 bytes in 18 msecs (HTTP/1.1 200) 3 headers in 110 bytes (1 switches on core 1)
[pid: 28461|app: 0|req: 364/825] 113.88.65.32 () {46 vars in 858 bytes} [Mon Aug 13 14:33:14 2018] GET /archive/2018/8/ => generated 7708 bytes in 18 msecs (HTTP/1.1 200) 3 headers in 110 bytes (1 switches on core 1)
[pid: 28461|app: 0|req: 365/826] 113.88.65.32 () {46 vars in 850 bytes} [Mon Aug 13 14:33:19 2018] GET /category/1/ => generated 9744 bytes in 22 msecs (HTTP/1.1 200) 3 headers in 110 bytes (1 switches on core 0)
[pid: 27717|app: 0|req: 156/827] 113.88.65.32 () {46 vars in 846 bytes} [Mon Aug 13 14:33:21 2018] GET /category/5/ => generated 8736 bytes in 48 msecs (HTTP/1.1 200) 3 headers in 110 bytes (1 switches on core 0)
[pid: 28461|app: 0|req: 366/828] 113.88.65.32 () {46 vars in 848 bytes} [Mon Aug 13 14:33:23 2018] GET /category/11/ => generated 8663 bytes in 19 msecs (HTTP/1.1 200) 3 headers in 110 bytes (1 switches on core 1)
[pid: 28461|app: 0|req: 367/829] 113.88.65.32 () {46 vars in 837 bytes} [Mon Aug 13 14:33:28 2018] GET /tag/1/ => generated 10840 bytes in 24 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 0)
[pid: 28461|app: 0|req: 368/830] 113.88.65.32 () {46 vars in 831 bytes} [Mon Aug 13 14:33:31 2018] GET /tag/2/ => generated 8736 bytes in 17 msecs (HTTP/1.1 200) 3 headers in 110 bytes (1 switches on core 1)
[pid: 27717|app: 0|req: 157/831] 113.88.65.32 () {46 vars in 835 bytes} [Mon Aug 13 14:33:37 2018] GET /all/rss/ => generated 14934 bytes in 8 msecs (HTTP/1.1 200) 3 headers in 121 bytes (112 switches on core 1)
[pid: 24647|app: 0|req: 123/832] 113.88.65.32 () {42 vars in 668 bytes} [Mon Aug 13 14:33:37 2018] GET /all/rss/ => generated 14934 bytes in 14 msecs (HTTP/1.1 200) 3 headers in 121 bytes (112 switches on core 0)
[pid: 27717|app: 0|req: 158/833] 66.228.47.253 () {38 vars in 662 bytes} [Mon Aug 13 14:33:48 2018] GET /all/rss/ => generated 14934 bytes in 8 msecs (HTTP/1.1 200) 3 headers in 121 bytes (112 switches on core 0)
[pid: 28461|app: 0|req: 369/834] 113.88.65.32 () {44 vars in 769 bytes} [Mon Aug 13 14:33:52 2018] GET / => generated 11030 bytes in 32 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 0)
[pid: 28461|app: 0|req: 370/835] 113.88.65.32 () {46 vars in 842 bytes} [Mon Aug 13 14:35:21 2018] GET /search/?q=py => generated 11567 bytes in 31 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 1)
[pid: 28461|app: 0|req: 371/836] 113.88.65.32 () {46 vars in 880 bytes} [Mon Aug 13 14:35:37 2018] GET /search/?q=%E6%96%87%E6%9C%AC => generated 7704 bytes in 34 msecs (HTTP/1.1 200) 3 headers in 110 bytes (1 switches on core 0)
[pid: 28461|app: 0|req: 372/837] 113.88.65.32 () {46 vars in 878 bytes} [Mon Aug 13 14:35:43 2018] GET /search/?q=%E6%96%87 => generated 7704 bytes in 24 msecs (HTTP/1.1 200) 3 headers in 110 bytes (1 switches on core 1)
[pid: 28461|app: 0|req: 373/838] 113.88.65.32 () {46 vars in 855 bytes} [Mon Aug 13 14:35:49 2018] GET /search/?q=py => generated 11567 bytes in 31 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 0)
[pid: 28461|app: 0|req: 374/839] 113.88.65.32 () {46 vars in 880 bytes} [Mon Aug 13 14:35:57 2018] GET /search/?q=%E6%96%87%E4%BB%B6 => generated 9731 bytes in 28 msecs (HTTP/1.1 200) 3 headers in 110 bytes (1 switches on core 1)
[pid: 28461|app: 0|req: 375/840] 113.88.65.32 () {46 vars in 878 bytes} [Mon Aug 13 14:36:03 2018] GET /search/?q=%E6%96%87 => generated 7704 bytes in 22 msecs (HTTP/1.1 200) 3 headers in 110 bytes (1 switches on core 0)
[pid: 28461|app: 0|req: 376/841] 113.88.65.32 () {46 vars in 887 bytes} [Mon Aug 13 14:36:11 2018] GET /search/?q=%E6%96%87%E6%9C%AC => generated 7704 bytes in 23 msecs (HTTP/1.1 200) 3 headers in 110 bytes (1 switches on core 1)
[pid: 28461|app: 0|req: 377/842] 113.88.65.32 () {46 vars in 896 bytes} [Mon Aug 13 14:36:16 2018] GET /search/?q=%E6%96%87%E4%BB%B6 => generated 9731 bytes in 43 msecs (HTTP/1.1 200) 3 headers in 110 bytes (1 switches on core 0)
![Alt text](/static/images/django_blog/01.jpg)

---
typora-copy-images-to: images
typora-root-url: images
---

# Django是个啥

​	最初是被开发来用于管理劳伦斯出版集团旗下的一些以新闻内容为主的网站的。并于2005年7月在BSD许可证下发布。这套框架是以比利时的吉普赛爵士吉他手Django Reinhardt来命名的。

​	Django的主要目标是使得开发复杂的、数据库驱动的网站变得简单。Django注重组件的重用性和“可插拔性”，敏捷开发和DRY法则（Don't Repeat Yourself）。在Django中Python被普遍使用，甚至包括配置文件和数据模型。

- 由 Python 开发的一个免费的开源网站框架，可以用于快速搭建高性能，优雅的网站

- Django 中提供了开发网站经常用到的模块，常见的代码都为你写好了

- Django 提供了通用Web开发模式的高度抽象，提供了频繁进行的编程作业的快速解决方法，以及为“如何解决问题”提供了清晰明了的约定。

- Django的理念是DRY(Don't Repeat Yourself)来鼓励快速开发！

  

# 开发环境

Ubuntu + Python3  + Django + PyCharm



# Ubuntu系统和命令介绍

### 系统设置

### 常用命令

- cd
- ls
- cp
- mv
- rm
- mkdir
- pwd
- touch
- cat
- history
- ps
  - ps -aux
- kill 
  - kill -9 pid
- su/sudo
- chmod
- grep
- which
- whereis
- ifconfig
- netstat
  - netstat -antp 查看网络连接状态
- wget
- ssh username@host -p
  - ssh-keygen
- tar
  - tar -zxvf 解压缩
  - tar -czvf 压缩
- du
  - du -sh
- df
  - df -h
- apt install
- apt update
- apt remove
- apt autoremove
- dpkg -i
- vi/vim

# BS/CS

​        C/S 架构即“客户端-服务器” 架构。这里的“客户端”可以是有 GUI （图形用户界面）的定制软件，也可以是浏览器，甚至可以是通过 SSH 访问服务器的命令行脚本。只要是客户端通过访问服务器调取计算或者存储资源的，统统都是 C/S 架构。所谓的 Browser-Server 架构其实是 C/S 架构的一种特殊的实现形式，而不是其对立面。

- C/S:
  - C: Client
  - S: Server
- B/S
  - B: Browser
  - S: Server       

# MVC/MVT

- MVC

  - M: Model（模型）
  - V: View（视图）
  - C: Controller（控制器）

- MVT

  - M: Model（模型），主要封装对数据库层的访问，对数据库中的数据进行增、删、改、查操作。

  - V: View（视图），用于封装结果，生成页面展示的html内容。

  - T: Template（模板），用于接收请求，处理业务逻辑，与Model和View交互，返回结果。

    ​

# HelloDjango项目

### 创建虚拟环境

### 虚拟环境的优点

- 使不同应用开发环境独立
- 环境升级不影响其他应用，也不会影响全局的python环境
- 可以防止系统中出现包管理混乱和版本冲突

开发会用 virtualenv 来管理多个开发环境

#### Linux/MacOS 下

virtualenvwrapper 使得virtualenv变得更好用，所以我们一起安装了

```
(sudo) pip install virtualenv virtualenvwrapper
```

修改~/.bash_profile或其它环境变量相关文件(如 .bashrc 或用 ZSH 之后的 .zshrc)，添加以下语句

```
export WORKON_HOME=$HOME/.virtualenvs
export PROJECT_HOME=$HOME/workspace
source /usr/local/bin/virtualenvwrapper.sh(每台机子的位置不一样，可以通过find命令找到)
```

修改后使之立即生效(也可以重启终端使之生效)：

```
source ~/.bash_profile
```



#### Windows 下：

```
pip install virtualenv virtualenvwrapper-win
```

【可选】Windows下默认虚拟环境是放在用户名下面的Envs中的，与桌面，我的文档，下载等文件夹在一块的。更改方法：计算机，属性，高级系统设置，环境变量，添加WORKON_HOME，如图（windows 10 环境变量设置截图）：

![](/1.png)

#### 虚拟环境使用方法：

- **mkvirtualenv django：创建运行环境django**

- **workon django: 工作在 django环境 或 从其它环境切换到 django环境**

- **deactivate**: 退出终端环境

- **其它的：**

- **rmvirtualenv** ENV：删除运行环境ENV

- **mkproject** mic：创建mic项目和运行环境mic

- **mktmpenv**：创建临时运行环境

- **lsvirtualenv**: 列出可用的运行环境

- **lssitepackages**: 列出当前环境安装了的包

  ​




### 安装Django框架

- pip install django==1.11.7

- 测试django是否已经安装好

  - 进入python shell

    ```python
    import django
    django.get_version()
    ```

- pip list 显示当前python环境中的所有的库

- pip freeze 显示当前python环境中的除系统内置库外的所有第三方库

### 创建HelloDJango项目

- 开启一个django项目 django-admin startproject day01_HelloDjango
- 测试django项目环境 python manage.py runserver
  - python manage.py runserver 0.0.0.0:8000 表示允许本机所有的IP被外网访问
  - python manage.py runserver 9000 使用本机运行，但端口是9000
- 开启自己的App
  - python manage.py startapp App



### Django的项目结构

1. manage.py
   - 管理整个项目
2. XXX/settings.py  
   - 项目配置文件
3. XXX/urls.py
   - 路由器，接收用户请求，分发给视图函数（控制器）
4. XXX/wsgi.py
   - 网关接口，通常用在线上环境部署（开发过程中不会接触）

### settings.py

1. DEBUG 是否打开DEBUG
2. ALLOWED_HOSTS 允许访问的主机
3. INSTALLED_APPS   安装了的应用 
4. DATABASES   数据库配置
5. LANGUAGE_CODE 中文 zh-hans
6. TIME_ZONE  中国 Asia/Shanghai



### Pycharm安装

1. 解压
2. 目录结构中会有  bin
3. 进入bin
4. bin 中pycharm.sh
5. 执行 ./pycharm.sh
6. 如果想在终端中的任何位置运行，那就配置到环境变量中



### 创建数据库

- 创建更改的文件
  - python manage.py makemigrations
- 将生成的py文件应用到数据库
  - python manage.py migrate
- 清空数据库
  - python manage.py flush
- 导入导出数据
  - python manage.py dumpdata appname > appname.json
  - python manage.py loaddata appname.json

### 创建视图

- 需要配置到工程的配置文件中settings中的INSTALLED_APPS
- views中定义函数，接收request，返回response
- 在urls中配置路由规则
  - 在根urls中配置（管理麻烦，配置简单）
  - 在App中创建自己的urls，在urls中书写规则，将urls配置到工程urls中
- 创建模板目录，在views返回时调用模板的渲染
- 变更数据库
  - 在settings中配置数据库信息



# Django请求流程

- 进来的请求转入/index/。
- Django 通过在 ROOT_URLCONF 配置来决定根 URLconf。
- Django 在 URLconf 中的所有 URL 模式中，查找第一个匹配 /index/ 的条目。
- 如果找到匹配，将调用相应的视图函数。
- 视图函数返回一个 HttpResponse。
- Django 转换 HttpResponse 为一个适合的 HTTP response， 以 Web page 显示出来。



# 设计一个小项目

### 需求分析

- 本示例完成“班级-学生”信息的维护，需要存储两种数据：班级、学生
- 班级表结构设计：
  - 表名：Grade
  - 班级名称：g_name
  - 班级人数：g_num
- 学生表结构设计：
  - 表名：Student
  - 学生姓名：s_name
  - 学生性别：s_gender
  - 所属班级：s_grade
- 班级-学生的关系为一对多

### 数据库配置

- 在settings.py文件中，通过DATABASES项进行数据库设置
- django支持的数据库包括：sqlite、mysql等主流数据库
- Django默认使用SQLite数据库

### 创建应用

- 在一个项目中可以创建一到多个应用，每个应用进行一种业务处理
- 创建应用的命令：

```
python manage.py startapp day1_hello_django
```

- 应用的目录结构如下图

![](/django项目目录结构.png)

### 定义模型类

- 有一个数据表，就有一个模型类与之对应
- 打开models.py文件，定义模型类
- 引入包from django.db import models
- 模型类继承自models.Model类
- **说明：不需要定义主键列，在生成时会自动添加，并且值为自动增长**
- 当输出对象时，会调用对象的str方法

```python
from django.db import models

class Grade(models.Model):
    g_name = models.CharField(max_length=20, db_column="班级名称")
    g_num = models.IntegerField(default=30)
    g_crete_date = models.DateTimeField(auto_now=True)

class Student(models.Model):
    s_name = models.CharField(max_length=20, db_column="姓名")
    s_age = models.IntegerField(default=20, db_column="年龄")
    s_sex = models.BooleanField(default=True)
    s_birthday = models.DateTimeField()
    s_grade = models.ForeignKey(Grade)

    class Meta:
        ordering = ["-s_age"]
        # 为数据库设置别名
        verbose_name = "学生表"
    	verbose_name_plural = "学生表"
        
    def _ _str_ _(self):
        return "%d" % self.pk
```

### 生成数据表

- 激活模型：编辑settings.py文件，将booktest应用加入到installed_apps中

  ![1531115052424](/注册app.png)

- 生成迁移文件：根据模型类生成sql语句

```
python manage.py makemigrations
```

- 迁移文件被生成到应用的migrations目录

![1531115146872](/迁移文件.png)

- 执行迁移：执行sql语句生成数据表

```
python manage.py migrate
```

### 测试数据操作

- 进入python shell，进行简单的模型API练习

```
python manage.py shell
```

- 进入shell后提示如下：

![](/进入django shell.png)

- 引入需要的包：

```
from App.models import Grade,Student
```

- 查询所有班级信息：

```
Grade.objects.all()
```

- 新建班级信息：

```
grade = Grade()
grade.g_name = "深圳python1805班"
grade.g_num = 40
grade.save()
```

- 查找班级信息：

```
grade = Grade.objects.get(pk=1)
```

- 输出班级信息：

```
grade
grade.id
grade.g_name
```

- 修改班级信息：

```
grade.g_name="大神班"
grade.save()
```

- 删除班级信息：

```
grade.delete()
```

### 关联对象的操作

- 对于Student可以按照上面的操作方式进行
- 添加，注意添加关联对象

```
s=Student()
s.s_name='张三'
s.s_sex=True
s.scontent='爱好打篮球'
# 注意grade为Grade的实例，上面我们已经删除了，这里需要重新创建
s.sclass=grade
s.save()
```

### 运行项目

```
python manage.py runserver ip:port
```



# 项目主要部分

### 视图

- 在django中，视图的作用是对路由转发过来的url进行处理
- 视图函数接收的第一个参数是request对象，request对象中包含了请求的信息
- 视图函数写每个app下的views.py文件中

```
from django.shortcuts import render
from django.http import HttpResponse

# Create your views here.

def index(request):
    return HttpResponse("Hello Django")
```

注意：视图函数的第一个参数必须是request，返回必须调用django的定义的方法规范。

### 路由

- 在视图函数写完后，要编写相应的url规则，这样当我们在浏览器上输入网址的时候才能转到相应的视图函数处理逻辑
- 只定义路径部分，不定义域名
- 路由函数的url部分遵循正则的书写方式
- 路由规则由两部分必须指定的参数和其他可选参数组成

```
url(r'^index/', App.index, name="index"),
```

注：每次定义完路由规则，在代码的末尾添加逗号

- 在编写路由规则之前必须导入相应的视图
- 在组织项目时，将app和项目的路由分离



### 模板

- 模板是HTML文件，通过占位符来传递视图函数的数据

- 每个app目录下都可以创建templates的文件夹，django会自动从这些app里寻找相应的模板

  

##### 定义模板

定义index.html模板文件

```
<!DOCTYPE html>
<html>
<head>
  <title>首页</title>
</head>
<body>
<h1>学生列表</h1>
<ul>
{%for student in students%}
<li>
  {{student.s_name}}
</li>
{%endfor%}
</ul>
</body>
</html>
```

定义detail.html模板

```
<!DOCTYPE html>
<html>
<head>
  <title>详情页</title>
</head>
<body>
<h1>学生详情</h1>
<ul>
<li>
  {{student.s_name}}
  {{student.s_gender}}
  {{student.s_content}}
</li>
</ul>
</body>
</html>
```

##### 使用模板

- 定义视图

```
def index(request):
    students = StudentInfo.objects.all()
    return render(request, "index.html", {"students":students})

def index_page(request, id):
    student = StudentInfo.objects.get(pk=id)
    return render(request, "detail.html", {"student":student})
```

- 定义路由

```
url(r'index/$', class_view.index, name="index"),
url(r'index/(\d+)/$', class_view.index_page, name="index_page"),
```

- 运行项目
  - python manage.py runserver
------------------------------------------------------------------------------------------------------------------------
<p><img alt="Alt text" src="/static/images/django_blog/01.jpg" /></p>
<hr />
<p>typora-copy-images-to: images
typora-root-url: images</p>
<hr />
<h1 id="django是个啥">Django是个啥</h1>
<p>​   最初是被开发来用于管理劳伦斯出版集团旗下的一些以新闻内容为主的网站的。并于2005年7月在BSD许可证下发布。这套框架是以比利时的吉普赛爵士吉他手Django Reinhardt来命名的。</p>
<p>​   Django的主要目标是使得开发复杂的、数据库驱动的网站变得简单。Django注重组件的重用性和“可插拔性”，敏捷开发和DRY法则（Don't Repeat Yourself）。在Django中Python被普遍使用，甚至包括配置文件和数据模型。</p>
<ul>
<li>
<p>由 Python 开发的一个免费的开源网站框架，可以用于快速搭建高性能，优雅的网站</p>
</li>
<li>
<p>Django 中提供了开发网站经常用到的模块，常见的代码都为你写好了</p>
</li>
<li>
<p>Django 提供了通用Web开发模式的高度抽象，提供了频繁进行的编程作业的快速解决方法，以及为“如何解决问题”提供了清晰明了的约定。</p>
</li>
<li>
<p>Django的理念是DRY(Don't Repeat Yourself)来鼓励快速开发！</p>
</li>
</ul>
<h1 id="开发环境">开发环境</h1>
<p>Ubuntu + Python3  + Django + PyCharm</p>
<h1 id="ubuntu系统和命令介绍">Ubuntu系统和命令介绍</h1>
<h3 id="系统设置">系统设置</h3>
<h3 id="常用命令">常用命令</h3>
<ul>
<li>cd</li>
<li>ls</li>
<li>cp</li>
<li>mv</li>
<li>rm</li>
<li>mkdir</li>
<li>pwd</li>
<li>touch</li>
<li>cat</li>
<li>history</li>
<li>ps</li>
<li>ps -aux</li>
<li>kill </li>
<li>kill -9 pid</li>
<li>su/sudo</li>
<li>chmod</li>
<li>grep</li>
<li>which</li>
<li>whereis</li>
<li>ifconfig</li>
<li>netstat</li>
<li>netstat -antp 查看网络连接状态</li>
<li>wget</li>
<li>ssh username@host -p</li>
<li>ssh-keygen</li>
<li>tar</li>
<li>tar -zxvf 解压缩</li>
<li>tar -czvf 压缩</li>
<li>du</li>
<li>du -sh</li>
<li>df</li>
<li>df -h</li>
<li>apt install</li>
<li>apt update</li>
<li>apt remove</li>
<li>apt autoremove</li>
<li>dpkg -i</li>
<li>vi/vim</li>
</ul>
<h1 id="bscs">BS/CS</h1>
<p>​        C/S 架构即“客户端-服务器” 架构。这里的“客户端”可以是有 GUI （图形用户界面）的定制软件，也可以是浏览器，甚至可以是通过 SSH 访问服务器的命令行脚本。只要是客户端通过访问服务器调取计算或者存储资源的，统统都是 C/S 架构。所谓的 Browser-Server 架构其实是 C/S 架构的一种特殊的实现形式，而不是其对立面。</p>
<ul>
<li>C/S:</li>
<li>C: Client</li>
<li>S: Server</li>
<li>B/S</li>
<li>B: Browser</li>
<li>S: Server       </li>
</ul>
<h1 id="mvcmvt">MVC/MVT</h1>
<ul>
<li>
<p>MVC</p>
</li>
<li>
<p>M: Model（模型）</p>
</li>
<li>V: View（视图）</li>
<li>
<p>C: Controller（控制器）</p>
</li>
<li>
<p>MVT</p>
</li>
<li>
<p>M: Model（模型），主要封装对数据库层的访问，对数据库中的数据进行增、删、改、查操作。</p>
</li>
<li>
<p>V: View（视图），用于封装结果，生成页面展示的html内容。</p>
</li>
<li>
<p>T: Template（模板），用于接收请求，处理业务逻辑，与Model和View交互，返回结果。</p>
<p>​</p>
</li>
</ul>
<h1 id="hellodjango项目">HelloDjango项目</h1>
<h3 id="创建虚拟环境">创建虚拟环境</h3>
<h3 id="虚拟环境的优点">虚拟环境的优点</h3>
<ul>
<li>使不同应用开发环境独立</li>
<li>环境升级不影响其他应用，也不会影响全局的python环境</li>
<li>可以防止系统中出现包管理混乱和版本冲突</li>
</ul>
<p>开发会用 virtualenv 来管理多个开发环境</p>
<h4 id="linuxmacos-下">Linux/MacOS 下</h4>
<p>virtualenvwrapper 使得virtualenv变得更好用，所以我们一起安装了</p>
<div class="codehilite"><pre><span></span>(sudo) pip install virtualenv virtualenvwrapper
</pre></div>


<p>修改~/.bash_profile或其它环境变量相关文件(如 .bashrc 或用 ZSH 之后的 .zshrc)，添加以下语句</p>
<div class="codehilite"><pre><span></span>export WORKON_HOME=$HOME/.virtualenvs
export PROJECT_HOME=$HOME/workspace
source /usr/local/bin/virtualenvwrapper.sh(每台机子的位置不一样，可以通过find命令找到)
</pre></div>


<p>修改后使之立即生效(也可以重启终端使之生效)：</p>
<div class="codehilite"><pre><span></span>source ~/.bash_profile
</pre></div>


<h4 id="windows-下">Windows 下：</h4>
<div class="codehilite"><pre><span></span>pip install virtualenv virtualenvwrapper-win
</pre></div>


<p>【可选】Windows下默认虚拟环境是放在用户名下面的Envs中的，与桌面，我的文档，下载等文件夹在一块的。更改方法：计算机，属性，高级系统设置，环境变量，添加WORKON_HOME，如图（windows 10 环境变量设置截图）：</p>
<p><img alt="" src="/1.png" /></p>
<h4 id="虚拟环境使用方法">虚拟环境使用方法：</h4>
<ul>
<li>
<p><strong>mkvirtualenv django：创建运行环境django</strong></p>
</li>
<li>
<p><strong>workon django: 工作在 django环境 或 从其它环境切换到 django环境</strong></p>
</li>
<li>
<p><strong>deactivate</strong>: 退出终端环境</p>
</li>
<li>
<p><strong>其它的：</strong></p>
</li>
<li>
<p><strong>rmvirtualenv</strong> ENV：删除运行环境ENV</p>
</li>
<li>
<p><strong>mkproject</strong> mic：创建mic项目和运行环境mic</p>
</li>
<li>
<p><strong>mktmpenv</strong>：创建临时运行环境</p>
</li>
<li>
<p><strong>lsvirtualenv</strong>: 列出可用的运行环境</p>
</li>
<li>
<p><strong>lssitepackages</strong>: 列出当前环境安装了的包</p>
</li>
</ul>
<p>​</p>
<h3 id="安装django框架">安装Django框架</h3>
<ul>
<li>
<p>pip install django==1.11.7</p>
</li>
<li>
<p>测试django是否已经安装好</p>
</li>
<li>
<p>进入python shell</p>
<p><code>python
import django
django.get_version()</code></p>
</li>
<li>
<p>pip list 显示当前python环境中的所有的库</p>
</li>
<li>
<p>pip freeze 显示当前python环境中的除系统内置库外的所有第三方库</p>
</li>
</ul>
<h3 id="创建hellodjango项目">创建HelloDJango项目</h3>
<ul>
<li>开启一个django项目 django-admin startproject day01_HelloDjango</li>
<li>测试django项目环境 python manage.py runserver</li>
<li>python manage.py runserver 0.0.0.0:8000 表示允许本机所有的IP被外网访问</li>
<li>python manage.py runserver 9000 使用本机运行，但端口是9000</li>
<li>开启自己的App</li>
<li>python manage.py startapp App</li>
</ul>
<h3 id="django的项目结构">Django的项目结构</h3>
<ol>
<li>manage.py</li>
<li>管理整个项目</li>
<li>XXX/settings.py  </li>
<li>项目配置文件</li>
<li>XXX/urls.py</li>
<li>路由器，接收用户请求，分发给视图函数（控制器）</li>
<li>XXX/wsgi.py</li>
<li>网关接口，通常用在线上环境部署（开发过程中不会接触）</li>
</ol>
<h3 id="settingspy">settings.py</h3>
<ol>
<li>DEBUG 是否打开DEBUG</li>
<li>ALLOWED_HOSTS 允许访问的主机</li>
<li>INSTALLED_APPS   安装了的应用 </li>
<li>DATABASES   数据库配置</li>
<li>LANGUAGE_CODE 中文 zh-hans</li>
<li>TIME_ZONE  中国 Asia/Shanghai</li>
</ol>
<h3 id="pycharm安装">Pycharm安装</h3>
<ol>
<li>解压</li>
<li>目录结构中会有  bin</li>
<li>进入bin</li>
<li>bin 中pycharm.sh</li>
<li>执行 ./pycharm.sh</li>
<li>如果想在终端中的任何位置运行，那就配置到环境变量中</li>
</ol>
<h3 id="创建数据库">创建数据库</h3>
<ul>
<li>创建更改的文件</li>
<li>python manage.py makemigrations</li>
<li>将生成的py文件应用到数据库</li>
<li>python manage.py migrate</li>
<li>清空数据库</li>
<li>python manage.py flush</li>
<li>导入导出数据</li>
<li>python manage.py dumpdata appname &gt; appname.json</li>
<li>python manage.py loaddata appname.json</li>
</ul>
<h3 id="创建视图">创建视图</h3>
<ul>
<li>需要配置到工程的配置文件中settings中的INSTALLED_APPS</li>
<li>views中定义函数，接收request，返回response</li>
<li>在urls中配置路由规则</li>
<li>在根urls中配置（管理麻烦，配置简单）</li>
<li>在App中创建自己的urls，在urls中书写规则，将urls配置到工程urls中</li>
<li>创建模板目录，在views返回时调用模板的渲染</li>
<li>变更数据库</li>
<li>在settings中配置数据库信息</li>
</ul>
<h1 id="django请求流程">Django请求流程</h1>
<ul>
<li>进来的请求转入/index/。</li>
<li>Django 通过在 ROOT_URLCONF 配置来决定根 URLconf。</li>
<li>Django 在 URLconf 中的所有 URL 模式中，查找第一个匹配 /index/ 的条目。</li>
<li>如果找到匹配，将调用相应的视图函数。</li>
<li>视图函数返回一个 HttpResponse。</li>
<li>Django 转换 HttpResponse 为一个适合的 HTTP response， 以 Web page 显示出来。</li>
</ul>
<h1 id="设计一个小项目">设计一个小项目</h1>
<h3 id="需求分析">需求分析</h3>
<ul>
<li>本示例完成“班级-学生”信息的维护，需要存储两种数据：班级、学生</li>
<li>班级表结构设计：</li>
<li>表名：Grade</li>
<li>班级名称：g_name</li>
<li>班级人数：g_num</li>
<li>学生表结构设计：</li>
<li>表名：Student</li>
<li>学生姓名：s_name</li>
<li>学生性别：s_gender</li>
<li>所属班级：s_grade</li>
<li>班级-学生的关系为一对多</li>
</ul>
<h3 id="数据库配置">数据库配置</h3>
<ul>
<li>在settings.py文件中，通过DATABASES项进行数据库设置</li>
<li>django支持的数据库包括：sqlite、mysql等主流数据库</li>
<li>Django默认使用SQLite数据库</li>
</ul>
<h3 id="创建应用">创建应用</h3>
<ul>
<li>在一个项目中可以创建一到多个应用，每个应用进行一种业务处理</li>
<li>创建应用的命令：</li>
</ul>
<div class="codehilite"><pre><span></span>python manage.py startapp day1_hello_django
</pre></div>


<ul>
<li>应用的目录结构如下图</li>
</ul>
<p><img alt="" src="/django项目目录结构.png" /></p>
<h3 id="定义模型类">定义模型类</h3>
<ul>
<li>有一个数据表，就有一个模型类与之对应</li>
<li>打开models.py文件，定义模型类</li>
<li>引入包from django.db import models</li>
<li>模型类继承自models.Model类</li>
<li><strong>说明：不需要定义主键列，在生成时会自动添加，并且值为自动增长</strong></li>
<li>当输出对象时，会调用对象的str方法</li>
</ul>
<div class="codehilite"><pre><span></span><span class="kn">from</span> <span class="nn">django.db</span> <span class="kn">import</span> <span class="n">models</span>

<span class="k">class</span> <span class="nc">Grade</span><span class="p">(</span><span class="n">models</span><span class="o">.</span><span class="n">Model</span><span class="p">):</span>
    <span class="n">g_name</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">CharField</span><span class="p">(</span><span class="n">max_length</span><span class="o">=</span><span class="mi">20</span><span class="p">,</span> <span class="n">db_column</span><span class="o">=</span><span class="s2">&quot;班级名称&quot;</span><span class="p">)</span>
    <span class="n">g_num</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">IntegerField</span><span class="p">(</span><span class="n">default</span><span class="o">=</span><span class="mi">30</span><span class="p">)</span>
    <span class="n">g_crete_date</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">DateTimeField</span><span class="p">(</span><span class="n">auto_now</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>

<span class="k">class</span> <span class="nc">Student</span><span class="p">(</span><span class="n">models</span><span class="o">.</span><span class="n">Model</span><span class="p">):</span>
    <span class="n">s_name</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">CharField</span><span class="p">(</span><span class="n">max_length</span><span class="o">=</span><span class="mi">20</span><span class="p">,</span> <span class="n">db_column</span><span class="o">=</span><span class="s2">&quot;姓名&quot;</span><span class="p">)</span>
    <span class="n">s_age</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">IntegerField</span><span class="p">(</span><span class="n">default</span><span class="o">=</span><span class="mi">20</span><span class="p">,</span> <span class="n">db_column</span><span class="o">=</span><span class="s2">&quot;年龄&quot;</span><span class="p">)</span>
    <span class="n">s_sex</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">BooleanField</span><span class="p">(</span><span class="n">default</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
    <span class="n">s_birthday</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">DateTimeField</span><span class="p">()</span>
    <span class="n">s_grade</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">ForeignKey</span><span class="p">(</span><span class="n">Grade</span><span class="p">)</span>

    <span class="k">class</span> <span class="nc">Meta</span><span class="p">:</span>
        <span class="n">ordering</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&quot;-s_age&quot;</span><span class="p">]</span>
        <span class="c1"># 为数据库设置别名</span>
        <span class="n">verbose_name</span> <span class="o">=</span> <span class="s2">&quot;学生表&quot;</span>
        <span class="n">verbose_name_plural</span> <span class="o">=</span> <span class="s2">&quot;学生表&quot;</span>

    <span class="k">def</span> <span class="nf">_</span> <span class="n">_str_</span> <span class="n">_</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">return</span> <span class="s2">&quot;</span><span class="si">%d</span><span class="s2">&quot;</span> <span class="o">%</span> <span class="bp">self</span><span class="o">.</span><span class="n">pk</span>
</pre></div>


<h3 id="生成数据表">生成数据表</h3>
<ul>
<li>激活模型：编辑settings.py文件，将booktest应用加入到installed_apps中</li>
</ul>
<p><img alt="1531115052424" src="/注册app.png" /></p>
<ul>
<li>生成迁移文件：根据模型类生成sql语句</li>
</ul>
<div class="codehilite"><pre><span></span>python manage.py makemigrations
</pre></div>


<ul>
<li>迁移文件被生成到应用的migrations目录</li>
</ul>
<p><img alt="1531115146872" src="/迁移文件.png" /></p>
<ul>
<li>执行迁移：执行sql语句生成数据表</li>
</ul>
<div class="codehilite"><pre><span></span>python manage.py migrate
</pre></div>


<h3 id="测试数据操作">测试数据操作</h3>
<ul>
<li>进入python shell，进行简单的模型API练习</li>
</ul>
<div class="codehilite"><pre><span></span>python manage.py shell
</pre></div>


<ul>
<li>进入shell后提示如下：</li>
</ul>
<p>![](/进入django shell.png)</p>
<ul>
<li>引入需要的包：</li>
</ul>
<div class="codehilite"><pre><span></span><span class="kn">from</span> <span class="nn">App.models</span> <span class="kn">import</span> <span class="n">Grade</span><span class="p">,</span><span class="n">Student</span>
</pre></div>


<ul>
<li>查询所有班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>Grade.objects.all()
</pre></div>


<ul>
<li>新建班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>grade = Grade()
grade.g_name = &quot;深圳python1805班&quot;
grade.g_num = 40
grade.save()
</pre></div>


<ul>
<li>查找班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>grade = Grade.objects.get(pk=1)
</pre></div>


<ul>
<li>输出班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>grade
grade.id
grade.g_name
</pre></div>


<ul>
<li>修改班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>grade.g_name=&quot;大神班&quot;
grade.save()
</pre></div>


<ul>
<li>删除班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>grade.delete()
</pre></div>


<h3 id="关联对象的操作">关联对象的操作</h3>
<ul>
<li>对于Student可以按照上面的操作方式进行</li>
<li>添加，注意添加关联对象</li>
</ul>
<div class="codehilite"><pre><span></span>s=Student()
s.s_name=&#39;张三&#39;
s.s_sex=True
s.scontent=&#39;爱好打篮球&#39;
# 注意grade为Grade的实例，上面我们已经删除了，这里需要重新创建
s.sclass=grade
s.save()
</pre></div>


<h3 id="运行项目">运行项目</h3>
<div class="codehilite"><pre><span></span>python manage.py runserver ip:port
</pre></div>


<h1 id="项目主要部分">项目主要部分</h1>
<h3 id="视图">视图</h3>
<ul>
<li>在django中，视图的作用是对路由转发过来的url进行处理</li>
<li>视图函数接收的第一个参数是request对象，request对象中包含了请求的信息</li>
<li>视图函数写每个app下的views.py文件中</li>
</ul>
<div class="codehilite"><pre><span></span><span class="kn">from</span> <span class="nn">django.shortcuts</span> <span class="kn">import</span> <span class="n">render</span>
<span class="kn">from</span> <span class="nn">django.http</span> <span class="kn">import</span> <span class="n">HttpResponse</span>

<span class="c1"># Create your views here.</span>

<span class="k">def</span> <span class="nf">index</span><span class="p">(</span><span class="n">request</span><span class="p">):</span>
    <span class="k">return</span> <span class="n">HttpResponse</span><span class="p">(</span><span class="s2">&quot;Hello Django&quot;</span><span class="p">)</span>
</pre></div>


<p>注意：视图函数的第一个参数必须是request，返回必须调用django的定义的方法规范。</p>
<h3 id="路由">路由</h3>
<ul>
<li>在视图函数写完后，要编写相应的url规则，这样当我们在浏览器上输入网址的时候才能转到相应的视图函数处理逻辑</li>
<li>只定义路径部分，不定义域名</li>
<li>路由函数的url部分遵循正则的书写方式</li>
<li>路由规则由两部分必须指定的参数和其他可选参数组成</li>
</ul>
<div class="codehilite"><pre><span></span>url(r&#39;^index/&#39;, App.index, name=&quot;index&quot;),
</pre></div>


<p>注：每次定义完路由规则，在代码的末尾添加逗号</p>
<ul>
<li>在编写路由规则之前必须导入相应的视图</li>
<li>在组织项目时，将app和项目的路由分离</li>
</ul>
<h3 id="模板">模板</h3>
<ul>
<li>
<p>模板是HTML文件，通过占位符来传递视图函数的数据</p>
</li>
<li>
<p>每个app目录下都可以创建templates的文件夹，django会自动从这些app里寻找相应的模板</p>
</li>
</ul>
<h5 id="定义模板">定义模板</h5>
<p>定义index.html模板文件</p>
<div class="codehilite"><pre><span></span><span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="p">&lt;</span><span class="nt">html</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">title</span><span class="p">&gt;</span>首页<span class="p">&lt;/</span><span class="nt">title</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">h1</span><span class="p">&gt;</span>学生列表<span class="p">&lt;/</span><span class="nt">h1</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">ul</span><span class="p">&gt;</span>
<span class="cp">{%</span><span class="k">for</span> <span class="nv">student</span> <span class="k">in</span> <span class="nv">students</span><span class="cp">%}</span>
<span class="p">&lt;</span><span class="nt">li</span><span class="p">&gt;</span>
  <span class="cp">{{</span><span class="nv">student.s_name</span><span class="cp">}}</span>
<span class="p">&lt;/</span><span class="nt">li</span><span class="p">&gt;</span>
<span class="cp">{%</span><span class="k">endfor</span><span class="cp">%}</span>
<span class="p">&lt;/</span><span class="nt">ul</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span>
</pre></div>


<p>定义detail.html模板</p>
<div class="codehilite"><pre><span></span><span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="p">&lt;</span><span class="nt">html</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">title</span><span class="p">&gt;</span>详情页<span class="p">&lt;/</span><span class="nt">title</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">h1</span><span class="p">&gt;</span>学生详情<span class="p">&lt;/</span><span class="nt">h1</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">ul</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">li</span><span class="p">&gt;</span>
  <span class="cp">{{</span><span class="nv">student.s_name</span><span class="cp">}}</span>
  <span class="cp">{{</span><span class="nv">student.s_gender</span><span class="cp">}}</span>
  <span class="cp">{{</span><span class="nv">student.s_content</span><span class="cp">}}</span>
<span class="p">&lt;/</span><span class="nt">li</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">ul</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span>
</pre></div>


<h5 id="使用模板">使用模板</h5>
<ul>
<li>定义视图</li>
</ul>
<div class="codehilite"><pre><span></span>def index(request):
    students = StudentInfo.objects.all()
    return render(request, &quot;index.html&quot;, {&quot;students&quot;:students})

def index_page(request, id):
    student = StudentInfo.objects.get(pk=id)
    return render(request, &quot;detail.html&quot;, {&quot;student&quot;:student})
</pre></div>


<ul>
<li>定义路由</li>
</ul>
<div class="codehilite"><pre><span></span>url(r&#39;index/$&#39;, class_view.index, name=&quot;index&quot;),
url(r&#39;index/(\d+)/$&#39;, class_view.index_page, name=&quot;index_page&quot;),
</pre></div>


<ul>
<li>运行项目</li>
<li>python manage.py runserver</li>
</ul>
<div class="toc">
<ul>
<li><a href="#django是个啥">Django是个啥</a></li>
<li><a href="#开发环境">开发环境</a></li>
<li><a href="#ubuntu系统和命令介绍">Ubuntu系统和命令介绍</a><ul>
<li><a href="#系统设置">系统设置</a></li>
<li><a href="#常用命令">常用命令</a></li>
</ul>
</li>
<li><a href="#bscs">BS/CS</a></li>
<li><a href="#mvcmvt">MVC/MVT</a></li>
<li><a href="#hellodjango项目">HelloDjango项目</a><ul>
<li><a href="#创建虚拟环境">创建虚拟环境</a></li>
<li><a href="#虚拟环境的优点">虚拟环境的优点</a><ul>
<li><a href="#linuxmacos-下">Linux/MacOS 下</a></li>
<li><a href="#windows-下">Windows 下：</a></li>
<li><a href="#虚拟环境使用方法">虚拟环境使用方法：</a></li>
</ul>
</li>
<li><a href="#安装django框架">安装Django框架</a></li>
<li><a href="#创建hellodjango项目">创建HelloDJango项目</a></li>
<li><a href="#django的项目结构">Django的项目结构</a></li>
<li><a href="#settingspy">settings.py</a></li>
<li><a href="#pycharm安装">Pycharm安装</a></li>
<li><a href="#创建数据库">创建数据库</a></li>
<li><a href="#创建视图">创建视图</a></li>
</ul>
</li>
<li><a href="#django请求流程">Django请求流程</a></li>
<li><a href="#设计一个小项目">设计一个小项目</a><ul>
<li><a href="#需求分析">需求分析</a></li>
<li><a href="#数据库配置">数据库配置</a></li>
<li><a href="#创建应用">创建应用</a></li>
<li><a href="#定义模型类">定义模型类</a></li>
<li><a href="#生成数据表">生成数据表</a></li>
<li><a href="#测试数据操作">测试数据操作</a></li>
<li><a href="#关联对象的操作">关联对象的操作</a></li>
<li><a href="#运行项目">运行项目</a></li>
</ul>
</li>
<li><a href="#项目主要部分">项目主要部分</a><ul>
<li><a href="#视图">视图</a></li>
<li><a href="#路由">路由</a></li>
<li><a href="#模板">模板</a><ul>
<li><a href="#定义模板">定义模板</a></li>
<li><a href="#使用模板">使用模板</a></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>

[pid: 28461|app: 0|req: 378/843] 113.88.65.32 () {46 vars in 855 bytes} [Mon Aug 13 14:36:22 2018] GET /post/3/ => generated 36300 bytes in 732 msecs (HTTP/1.1 200) 5 headers in 279 bytes (1 switches on core 1)
Not Found: /1.png
[pid: 28461|app: 0|req: 379/844] 113.88.65.32 () {44 vars in 749 bytes} [Mon Aug 13 14:36:24 2018] GET /1.png => generated 3357 bytes in 4 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 0)
Not Found: /django项目目录结构.png
[pid: 27717|app: 0|req: 159/845] 113.88.65.32 () {44 vars in 831 bytes} [Mon Aug 13 14:36:24 2018] GET /django%E9%A1%B9%E7%9B%AE%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84.png => generated 3462 bytes in 3 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 1)
Not Found: /注册app.png
[pid: 24647|app: 0|req: 124/846] 113.88.65.32 () {44 vars in 777 bytes} [Mon Aug 13 14:36:24 2018] GET /%E6%B3%A8%E5%86%8Capp.png => generated 3393 bytes in 3 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 1)
Not Found: /迁移文件.png
[pid: 24647|app: 0|req: 125/847] 113.88.65.32 () {44 vars in 795 bytes} [Mon Aug 13 14:36:24 2018] GET /%E8%BF%81%E7%A7%BB%E6%96%87%E4%BB%B6.png => generated 3414 bytes in 3 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 0)
[pid: 27717|app: 0|req: 160/848] 113.88.65.32 () {46 vars in 841 bytes} [Mon Aug 13 14:36:54 2018] GET / => generated 11030 bytes in 21 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 0)
![Alt text](/static/images/django_blog/01.jpg)

---
typora-copy-images-to: images
typora-root-url: images
---

# Django是个啥

​	最初是被开发来用于管理劳伦斯出版集团旗下的一些以新闻内容为主的网站的。并于2005年7月在BSD许可证下发布。这套框架是以比利时的吉普赛爵士吉他手Django Reinhardt来命名的。

​	Django的主要目标是使得开发复杂的、数据库驱动的网站变得简单。Django注重组件的重用性和“可插拔性”，敏捷开发和DRY法则（Don't Repeat Yourself）。在Django中Python被普遍使用，甚至包括配置文件和数据模型。

- 由 Python 开发的一个免费的开源网站框架，可以用于快速搭建高性能，优雅的网站

- Django 中提供了开发网站经常用到的模块，常见的代码都为你写好了

- Django 提供了通用Web开发模式的高度抽象，提供了频繁进行的编程作业的快速解决方法，以及为“如何解决问题”提供了清晰明了的约定。

- Django的理念是DRY(Don't Repeat Yourself)来鼓励快速开发！

  

# 开发环境

Ubuntu + Python3  + Django + PyCharm



# Ubuntu系统和命令介绍

### 系统设置

### 常用命令

- cd
- ls
- cp
- mv
- rm
- mkdir
- pwd
- touch
- cat
- history
- ps
  - ps -aux
- kill 
  - kill -9 pid
- su/sudo
- chmod
- grep
- which
- whereis
- ifconfig
- netstat
  - netstat -antp 查看网络连接状态
- wget
- ssh username@host -p
  - ssh-keygen
- tar
  - tar -zxvf 解压缩
  - tar -czvf 压缩
- du
  - du -sh
- df
  - df -h
- apt install
- apt update
- apt remove
- apt autoremove
- dpkg -i
- vi/vim

# BS/CS

​        C/S 架构即“客户端-服务器” 架构。这里的“客户端”可以是有 GUI （图形用户界面）的定制软件，也可以是浏览器，甚至可以是通过 SSH 访问服务器的命令行脚本。只要是客户端通过访问服务器调取计算或者存储资源的，统统都是 C/S 架构。所谓的 Browser-Server 架构其实是 C/S 架构的一种特殊的实现形式，而不是其对立面。

- C/S:
  - C: Client
  - S: Server
- B/S
  - B: Browser
  - S: Server       

# MVC/MVT

- MVC

  - M: Model（模型）
  - V: View（视图）
  - C: Controller（控制器）

- MVT

  - M: Model（模型），主要封装对数据库层的访问，对数据库中的数据进行增、删、改、查操作。

  - V: View（视图），用于封装结果，生成页面展示的html内容。

  - T: Template（模板），用于接收请求，处理业务逻辑，与Model和View交互，返回结果。

    ​

# HelloDjango项目

### 创建虚拟环境

### 虚拟环境的优点

- 使不同应用开发环境独立
- 环境升级不影响其他应用，也不会影响全局的python环境
- 可以防止系统中出现包管理混乱和版本冲突

开发会用 virtualenv 来管理多个开发环境

#### Linux/MacOS 下

virtualenvwrapper 使得virtualenv变得更好用，所以我们一起安装了

```
(sudo) pip install virtualenv virtualenvwrapper
```

修改~/.bash_profile或其它环境变量相关文件(如 .bashrc 或用 ZSH 之后的 .zshrc)，添加以下语句

```
export WORKON_HOME=$HOME/.virtualenvs
export PROJECT_HOME=$HOME/workspace
source /usr/local/bin/virtualenvwrapper.sh(每台机子的位置不一样，可以通过find命令找到)
```

修改后使之立即生效(也可以重启终端使之生效)：

```
source ~/.bash_profile
```



#### Windows 下：

```
pip install virtualenv virtualenvwrapper-win
```

【可选】Windows下默认虚拟环境是放在用户名下面的Envs中的，与桌面，我的文档，下载等文件夹在一块的。更改方法：计算机，属性，高级系统设置，环境变量，添加WORKON_HOME，如图（windows 10 环境变量设置截图）：

![](/1.png)

#### 虚拟环境使用方法：

- **mkvirtualenv django：创建运行环境django**

- **workon django: 工作在 django环境 或 从其它环境切换到 django环境**

- **deactivate**: 退出终端环境

- **其它的：**

- **rmvirtualenv** ENV：删除运行环境ENV

- **mkproject** mic：创建mic项目和运行环境mic

- **mktmpenv**：创建临时运行环境

- **lsvirtualenv**: 列出可用的运行环境

- **lssitepackages**: 列出当前环境安装了的包

  ​




### 安装Django框架

- pip install django==1.11.7

- 测试django是否已经安装好

  - 进入python shell

    ```python
    import django
    django.get_version()
    ```

- pip list 显示当前python环境中的所有的库

- pip freeze 显示当前python环境中的除系统内置库外的所有第三方库

### 创建HelloDJango项目

- 开启一个django项目 django-admin startproject day01_HelloDjango
- 测试django项目环境 python manage.py runserver
  - python manage.py runserver 0.0.0.0:8000 表示允许本机所有的IP被外网访问
  - python manage.py runserver 9000 使用本机运行，但端口是9000
- 开启自己的App
  - python manage.py startapp App



### Django的项目结构

1. manage.py
   - 管理整个项目
2. XXX/settings.py  
   - 项目配置文件
3. XXX/urls.py
   - 路由器，接收用户请求，分发给视图函数（控制器）
4. XXX/wsgi.py
   - 网关接口，通常用在线上环境部署（开发过程中不会接触）

### settings.py

1. DEBUG 是否打开DEBUG
2. ALLOWED_HOSTS 允许访问的主机
3. INSTALLED_APPS   安装了的应用 
4. DATABASES   数据库配置
5. LANGUAGE_CODE 中文 zh-hans
6. TIME_ZONE  中国 Asia/Shanghai



### Pycharm安装

1. 解压
2. 目录结构中会有  bin
3. 进入bin
4. bin 中pycharm.sh
5. 执行 ./pycharm.sh
6. 如果想在终端中的任何位置运行，那就配置到环境变量中



### 创建数据库

- 创建更改的文件
  - python manage.py makemigrations
- 将生成的py文件应用到数据库
  - python manage.py migrate
- 清空数据库
  - python manage.py flush
- 导入导出数据
  - python manage.py dumpdata appname > appname.json
  - python manage.py loaddata appname.json

### 创建视图

- 需要配置到工程的配置文件中settings中的INSTALLED_APPS
- views中定义函数，接收request，返回response
- 在urls中配置路由规则
  - 在根urls中配置（管理麻烦，配置简单）
  - 在App中创建自己的urls，在urls中书写规则，将urls配置到工程urls中
- 创建模板目录，在views返回时调用模板的渲染
- 变更数据库
  - 在settings中配置数据库信息



# Django请求流程

- 进来的请求转入/index/。
- Django 通过在 ROOT_URLCONF 配置来决定根 URLconf。
- Django 在 URLconf 中的所有 URL 模式中，查找第一个匹配 /index/ 的条目。
- 如果找到匹配，将调用相应的视图函数。
- 视图函数返回一个 HttpResponse。
- Django 转换 HttpResponse 为一个适合的 HTTP response， 以 Web page 显示出来。



# 设计一个小项目

### 需求分析

- 本示例完成“班级-学生”信息的维护，需要存储两种数据：班级、学生
- 班级表结构设计：
  - 表名：Grade
  - 班级名称：g_name
  - 班级人数：g_num
- 学生表结构设计：
  - 表名：Student
  - 学生姓名：s_name
  - 学生性别：s_gender
  - 所属班级：s_grade
- 班级-学生的关系为一对多

### 数据库配置

- 在settings.py文件中，通过DATABASES项进行数据库设置
- django支持的数据库包括：sqlite、mysql等主流数据库
- Django默认使用SQLite数据库

### 创建应用

- 在一个项目中可以创建一到多个应用，每个应用进行一种业务处理
- 创建应用的命令：

```
python manage.py startapp day1_hello_django
```

- 应用的目录结构如下图

![](/django项目目录结构.png)

### 定义模型类

- 有一个数据表，就有一个模型类与之对应
- 打开models.py文件，定义模型类
- 引入包from django.db import models
- 模型类继承自models.Model类
- **说明：不需要定义主键列，在生成时会自动添加，并且值为自动增长**
- 当输出对象时，会调用对象的str方法

```python
from django.db import models

class Grade(models.Model):
    g_name = models.CharField(max_length=20, db_column="班级名称")
    g_num = models.IntegerField(default=30)
    g_crete_date = models.DateTimeField(auto_now=True)

class Student(models.Model):
    s_name = models.CharField(max_length=20, db_column="姓名")
    s_age = models.IntegerField(default=20, db_column="年龄")
    s_sex = models.BooleanField(default=True)
    s_birthday = models.DateTimeField()
    s_grade = models.ForeignKey(Grade)

    class Meta:
        ordering = ["-s_age"]
        # 为数据库设置别名
        verbose_name = "学生表"
    	verbose_name_plural = "学生表"
        
    def _ _str_ _(self):
        return "%d" % self.pk
```

### 生成数据表

- 激活模型：编辑settings.py文件，将booktest应用加入到installed_apps中

  ![1531115052424](/注册app.png)

- 生成迁移文件：根据模型类生成sql语句

```
python manage.py makemigrations
```

- 迁移文件被生成到应用的migrations目录

![1531115146872](/迁移文件.png)

- 执行迁移：执行sql语句生成数据表

```
python manage.py migrate
```

### 测试数据操作

- 进入python shell，进行简单的模型API练习

```
python manage.py shell
```

- 进入shell后提示如下：

![](/进入django shell.png)

- 引入需要的包：

```
from App.models import Grade,Student
```

- 查询所有班级信息：

```
Grade.objects.all()
```

- 新建班级信息：

```
grade = Grade()
grade.g_name = "深圳python1805班"
grade.g_num = 40
grade.save()
```

- 查找班级信息：

```
grade = Grade.objects.get(pk=1)
```

- 输出班级信息：

```
grade
grade.id
grade.g_name
```

- 修改班级信息：

```
grade.g_name="大神班"
grade.save()
```

- 删除班级信息：

```
grade.delete()
```

### 关联对象的操作

- 对于Student可以按照上面的操作方式进行
- 添加，注意添加关联对象

```
s=Student()
s.s_name='张三'
s.s_sex=True
s.scontent='爱好打篮球'
# 注意grade为Grade的实例，上面我们已经删除了，这里需要重新创建
s.sclass=grade
s.save()
```

### 运行项目

```
python manage.py runserver ip:port
```



# 项目主要部分

### 视图

- 在django中，视图的作用是对路由转发过来的url进行处理
- 视图函数接收的第一个参数是request对象，request对象中包含了请求的信息
- 视图函数写每个app下的views.py文件中

```
from django.shortcuts import render
from django.http import HttpResponse

# Create your views here.

def index(request):
    return HttpResponse("Hello Django")
```

注意：视图函数的第一个参数必须是request，返回必须调用django的定义的方法规范。

### 路由

- 在视图函数写完后，要编写相应的url规则，这样当我们在浏览器上输入网址的时候才能转到相应的视图函数处理逻辑
- 只定义路径部分，不定义域名
- 路由函数的url部分遵循正则的书写方式
- 路由规则由两部分必须指定的参数和其他可选参数组成

```
url(r'^index/', App.index, name="index"),
```

注：每次定义完路由规则，在代码的末尾添加逗号

- 在编写路由规则之前必须导入相应的视图
- 在组织项目时，将app和项目的路由分离



### 模板

- 模板是HTML文件，通过占位符来传递视图函数的数据

- 每个app目录下都可以创建templates的文件夹，django会自动从这些app里寻找相应的模板

  

##### 定义模板

定义index.html模板文件

```
<!DOCTYPE html>
<html>
<head>
  <title>首页</title>
</head>
<body>
<h1>学生列表</h1>
<ul>
{%for student in students%}
<li>
  {{student.s_name}}
</li>
{%endfor%}
</ul>
</body>
</html>
```

定义detail.html模板

```
<!DOCTYPE html>
<html>
<head>
  <title>详情页</title>
</head>
<body>
<h1>学生详情</h1>
<ul>
<li>
  {{student.s_name}}
  {{student.s_gender}}
  {{student.s_content}}
</li>
</ul>
</body>
</html>
```

##### 使用模板

- 定义视图

```
def index(request):
    students = StudentInfo.objects.all()
    return render(request, "index.html", {"students":students})

def index_page(request, id):
    student = StudentInfo.objects.get(pk=id)
    return render(request, "detail.html", {"student":student})
```

- 定义路由

```
url(r'index/$', class_view.index, name="index"),
url(r'index/(\d+)/$', class_view.index_page, name="index_page"),
```

- 运行项目
  - python manage.py runserver
------------------------------------------------------------------------------------------------------------------------
<p><img alt="Alt text" src="/static/images/django_blog/01.jpg" /></p>
<hr />
<p>typora-copy-images-to: images
typora-root-url: images</p>
<hr />
<h1 id="django是个啥">Django是个啥</h1>
<p>​   最初是被开发来用于管理劳伦斯出版集团旗下的一些以新闻内容为主的网站的。并于2005年7月在BSD许可证下发布。这套框架是以比利时的吉普赛爵士吉他手Django Reinhardt来命名的。</p>
<p>​   Django的主要目标是使得开发复杂的、数据库驱动的网站变得简单。Django注重组件的重用性和“可插拔性”，敏捷开发和DRY法则（Don't Repeat Yourself）。在Django中Python被普遍使用，甚至包括配置文件和数据模型。</p>
<ul>
<li>
<p>由 Python 开发的一个免费的开源网站框架，可以用于快速搭建高性能，优雅的网站</p>
</li>
<li>
<p>Django 中提供了开发网站经常用到的模块，常见的代码都为你写好了</p>
</li>
<li>
<p>Django 提供了通用Web开发模式的高度抽象，提供了频繁进行的编程作业的快速解决方法，以及为“如何解决问题”提供了清晰明了的约定。</p>
</li>
<li>
<p>Django的理念是DRY(Don't Repeat Yourself)来鼓励快速开发！</p>
</li>
</ul>
<h1 id="开发环境">开发环境</h1>
<p>Ubuntu + Python3  + Django + PyCharm</p>
<h1 id="ubuntu系统和命令介绍">Ubuntu系统和命令介绍</h1>
<h3 id="系统设置">系统设置</h3>
<h3 id="常用命令">常用命令</h3>
<ul>
<li>cd</li>
<li>ls</li>
<li>cp</li>
<li>mv</li>
<li>rm</li>
<li>mkdir</li>
<li>pwd</li>
<li>touch</li>
<li>cat</li>
<li>history</li>
<li>ps</li>
<li>ps -aux</li>
<li>kill </li>
<li>kill -9 pid</li>
<li>su/sudo</li>
<li>chmod</li>
<li>grep</li>
<li>which</li>
<li>whereis</li>
<li>ifconfig</li>
<li>netstat</li>
<li>netstat -antp 查看网络连接状态</li>
<li>wget</li>
<li>ssh username@host -p</li>
<li>ssh-keygen</li>
<li>tar</li>
<li>tar -zxvf 解压缩</li>
<li>tar -czvf 压缩</li>
<li>du</li>
<li>du -sh</li>
<li>df</li>
<li>df -h</li>
<li>apt install</li>
<li>apt update</li>
<li>apt remove</li>
<li>apt autoremove</li>
<li>dpkg -i</li>
<li>vi/vim</li>
</ul>
<h1 id="bscs">BS/CS</h1>
<p>​        C/S 架构即“客户端-服务器” 架构。这里的“客户端”可以是有 GUI （图形用户界面）的定制软件，也可以是浏览器，甚至可以是通过 SSH 访问服务器的命令行脚本。只要是客户端通过访问服务器调取计算或者存储资源的，统统都是 C/S 架构。所谓的 Browser-Server 架构其实是 C/S 架构的一种特殊的实现形式，而不是其对立面。</p>
<ul>
<li>C/S:</li>
<li>C: Client</li>
<li>S: Server</li>
<li>B/S</li>
<li>B: Browser</li>
<li>S: Server       </li>
</ul>
<h1 id="mvcmvt">MVC/MVT</h1>
<ul>
<li>
<p>MVC</p>
</li>
<li>
<p>M: Model（模型）</p>
</li>
<li>V: View（视图）</li>
<li>
<p>C: Controller（控制器）</p>
</li>
<li>
<p>MVT</p>
</li>
<li>
<p>M: Model（模型），主要封装对数据库层的访问，对数据库中的数据进行增、删、改、查操作。</p>
</li>
<li>
<p>V: View（视图），用于封装结果，生成页面展示的html内容。</p>
</li>
<li>
<p>T: Template（模板），用于接收请求，处理业务逻辑，与Model和View交互，返回结果。</p>
<p>​</p>
</li>
</ul>
<h1 id="hellodjango项目">HelloDjango项目</h1>
<h3 id="创建虚拟环境">创建虚拟环境</h3>
<h3 id="虚拟环境的优点">虚拟环境的优点</h3>
<ul>
<li>使不同应用开发环境独立</li>
<li>环境升级不影响其他应用，也不会影响全局的python环境</li>
<li>可以防止系统中出现包管理混乱和版本冲突</li>
</ul>
<p>开发会用 virtualenv 来管理多个开发环境</p>
<h4 id="linuxmacos-下">Linux/MacOS 下</h4>
<p>virtualenvwrapper 使得virtualenv变得更好用，所以我们一起安装了</p>
<div class="codehilite"><pre><span></span>(sudo) pip install virtualenv virtualenvwrapper
</pre></div>


<p>修改~/.bash_profile或其它环境变量相关文件(如 .bashrc 或用 ZSH 之后的 .zshrc)，添加以下语句</p>
<div class="codehilite"><pre><span></span>export WORKON_HOME=$HOME/.virtualenvs
export PROJECT_HOME=$HOME/workspace
source /usr/local/bin/virtualenvwrapper.sh(每台机子的位置不一样，可以通过find命令找到)
</pre></div>


<p>修改后使之立即生效(也可以重启终端使之生效)：</p>
<div class="codehilite"><pre><span></span>source ~/.bash_profile
</pre></div>


<h4 id="windows-下">Windows 下：</h4>
<div class="codehilite"><pre><span></span>pip install virtualenv virtualenvwrapper-win
</pre></div>


<p>【可选】Windows下默认虚拟环境是放在用户名下面的Envs中的，与桌面，我的文档，下载等文件夹在一块的。更改方法：计算机，属性，高级系统设置，环境变量，添加WORKON_HOME，如图（windows 10 环境变量设置截图）：</p>
<p><img alt="" src="/1.png" /></p>
<h4 id="虚拟环境使用方法">虚拟环境使用方法：</h4>
<ul>
<li>
<p><strong>mkvirtualenv django：创建运行环境django</strong></p>
</li>
<li>
<p><strong>workon django: 工作在 django环境 或 从其它环境切换到 django环境</strong></p>
</li>
<li>
<p><strong>deactivate</strong>: 退出终端环境</p>
</li>
<li>
<p><strong>其它的：</strong></p>
</li>
<li>
<p><strong>rmvirtualenv</strong> ENV：删除运行环境ENV</p>
</li>
<li>
<p><strong>mkproject</strong> mic：创建mic项目和运行环境mic</p>
</li>
<li>
<p><strong>mktmpenv</strong>：创建临时运行环境</p>
</li>
<li>
<p><strong>lsvirtualenv</strong>: 列出可用的运行环境</p>
</li>
<li>
<p><strong>lssitepackages</strong>: 列出当前环境安装了的包</p>
</li>
</ul>
<p>​</p>
<h3 id="安装django框架">安装Django框架</h3>
<ul>
<li>
<p>pip install django==1.11.7</p>
</li>
<li>
<p>测试django是否已经安装好</p>
</li>
<li>
<p>进入python shell</p>
<p><code>python
import django
django.get_version()</code></p>
</li>
<li>
<p>pip list 显示当前python环境中的所有的库</p>
</li>
<li>
<p>pip freeze 显示当前python环境中的除系统内置库外的所有第三方库</p>
</li>
</ul>
<h3 id="创建hellodjango项目">创建HelloDJango项目</h3>
<ul>
<li>开启一个django项目 django-admin startproject day01_HelloDjango</li>
<li>测试django项目环境 python manage.py runserver</li>
<li>python manage.py runserver 0.0.0.0:8000 表示允许本机所有的IP被外网访问</li>
<li>python manage.py runserver 9000 使用本机运行，但端口是9000</li>
<li>开启自己的App</li>
<li>python manage.py startapp App</li>
</ul>
<h3 id="django的项目结构">Django的项目结构</h3>
<ol>
<li>manage.py</li>
<li>管理整个项目</li>
<li>XXX/settings.py  </li>
<li>项目配置文件</li>
<li>XXX/urls.py</li>
<li>路由器，接收用户请求，分发给视图函数（控制器）</li>
<li>XXX/wsgi.py</li>
<li>网关接口，通常用在线上环境部署（开发过程中不会接触）</li>
</ol>
<h3 id="settingspy">settings.py</h3>
<ol>
<li>DEBUG 是否打开DEBUG</li>
<li>ALLOWED_HOSTS 允许访问的主机</li>
<li>INSTALLED_APPS   安装了的应用 </li>
<li>DATABASES   数据库配置</li>
<li>LANGUAGE_CODE 中文 zh-hans</li>
<li>TIME_ZONE  中国 Asia/Shanghai</li>
</ol>
<h3 id="pycharm安装">Pycharm安装</h3>
<ol>
<li>解压</li>
<li>目录结构中会有  bin</li>
<li>进入bin</li>
<li>bin 中pycharm.sh</li>
<li>执行 ./pycharm.sh</li>
<li>如果想在终端中的任何位置运行，那就配置到环境变量中</li>
</ol>
<h3 id="创建数据库">创建数据库</h3>
<ul>
<li>创建更改的文件</li>
<li>python manage.py makemigrations</li>
<li>将生成的py文件应用到数据库</li>
<li>python manage.py migrate</li>
<li>清空数据库</li>
<li>python manage.py flush</li>
<li>导入导出数据</li>
<li>python manage.py dumpdata appname &gt; appname.json</li>
<li>python manage.py loaddata appname.json</li>
</ul>
<h3 id="创建视图">创建视图</h3>
<ul>
<li>需要配置到工程的配置文件中settings中的INSTALLED_APPS</li>
<li>views中定义函数，接收request，返回response</li>
<li>在urls中配置路由规则</li>
<li>在根urls中配置（管理麻烦，配置简单）</li>
<li>在App中创建自己的urls，在urls中书写规则，将urls配置到工程urls中</li>
<li>创建模板目录，在views返回时调用模板的渲染</li>
<li>变更数据库</li>
<li>在settings中配置数据库信息</li>
</ul>
<h1 id="django请求流程">Django请求流程</h1>
<ul>
<li>进来的请求转入/index/。</li>
<li>Django 通过在 ROOT_URLCONF 配置来决定根 URLconf。</li>
<li>Django 在 URLconf 中的所有 URL 模式中，查找第一个匹配 /index/ 的条目。</li>
<li>如果找到匹配，将调用相应的视图函数。</li>
<li>视图函数返回一个 HttpResponse。</li>
<li>Django 转换 HttpResponse 为一个适合的 HTTP response， 以 Web page 显示出来。</li>
</ul>
<h1 id="设计一个小项目">设计一个小项目</h1>
<h3 id="需求分析">需求分析</h3>
<ul>
<li>本示例完成“班级-学生”信息的维护，需要存储两种数据：班级、学生</li>
<li>班级表结构设计：</li>
<li>表名：Grade</li>
<li>班级名称：g_name</li>
<li>班级人数：g_num</li>
<li>学生表结构设计：</li>
<li>表名：Student</li>
<li>学生姓名：s_name</li>
<li>学生性别：s_gender</li>
<li>所属班级：s_grade</li>
<li>班级-学生的关系为一对多</li>
</ul>
<h3 id="数据库配置">数据库配置</h3>
<ul>
<li>在settings.py文件中，通过DATABASES项进行数据库设置</li>
<li>django支持的数据库包括：sqlite、mysql等主流数据库</li>
<li>Django默认使用SQLite数据库</li>
</ul>
<h3 id="创建应用">创建应用</h3>
<ul>
<li>在一个项目中可以创建一到多个应用，每个应用进行一种业务处理</li>
<li>创建应用的命令：</li>
</ul>
<div class="codehilite"><pre><span></span>python manage.py startapp day1_hello_django
</pre></div>


<ul>
<li>应用的目录结构如下图</li>
</ul>
<p><img alt="" src="/django项目目录结构.png" /></p>
<h3 id="定义模型类">定义模型类</h3>
<ul>
<li>有一个数据表，就有一个模型类与之对应</li>
<li>打开models.py文件，定义模型类</li>
<li>引入包from django.db import models</li>
<li>模型类继承自models.Model类</li>
<li><strong>说明：不需要定义主键列，在生成时会自动添加，并且值为自动增长</strong></li>
<li>当输出对象时，会调用对象的str方法</li>
</ul>
<div class="codehilite"><pre><span></span><span class="kn">from</span> <span class="nn">django.db</span> <span class="kn">import</span> <span class="n">models</span>

<span class="k">class</span> <span class="nc">Grade</span><span class="p">(</span><span class="n">models</span><span class="o">.</span><span class="n">Model</span><span class="p">):</span>
    <span class="n">g_name</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">CharField</span><span class="p">(</span><span class="n">max_length</span><span class="o">=</span><span class="mi">20</span><span class="p">,</span> <span class="n">db_column</span><span class="o">=</span><span class="s2">&quot;班级名称&quot;</span><span class="p">)</span>
    <span class="n">g_num</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">IntegerField</span><span class="p">(</span><span class="n">default</span><span class="o">=</span><span class="mi">30</span><span class="p">)</span>
    <span class="n">g_crete_date</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">DateTimeField</span><span class="p">(</span><span class="n">auto_now</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>

<span class="k">class</span> <span class="nc">Student</span><span class="p">(</span><span class="n">models</span><span class="o">.</span><span class="n">Model</span><span class="p">):</span>
    <span class="n">s_name</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">CharField</span><span class="p">(</span><span class="n">max_length</span><span class="o">=</span><span class="mi">20</span><span class="p">,</span> <span class="n">db_column</span><span class="o">=</span><span class="s2">&quot;姓名&quot;</span><span class="p">)</span>
    <span class="n">s_age</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">IntegerField</span><span class="p">(</span><span class="n">default</span><span class="o">=</span><span class="mi">20</span><span class="p">,</span> <span class="n">db_column</span><span class="o">=</span><span class="s2">&quot;年龄&quot;</span><span class="p">)</span>
    <span class="n">s_sex</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">BooleanField</span><span class="p">(</span><span class="n">default</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
    <span class="n">s_birthday</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">DateTimeField</span><span class="p">()</span>
    <span class="n">s_grade</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">ForeignKey</span><span class="p">(</span><span class="n">Grade</span><span class="p">)</span>

    <span class="k">class</span> <span class="nc">Meta</span><span class="p">:</span>
        <span class="n">ordering</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&quot;-s_age&quot;</span><span class="p">]</span>
        <span class="c1"># 为数据库设置别名</span>
        <span class="n">verbose_name</span> <span class="o">=</span> <span class="s2">&quot;学生表&quot;</span>
        <span class="n">verbose_name_plural</span> <span class="o">=</span> <span class="s2">&quot;学生表&quot;</span>

    <span class="k">def</span> <span class="nf">_</span> <span class="n">_str_</span> <span class="n">_</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">return</span> <span class="s2">&quot;</span><span class="si">%d</span><span class="s2">&quot;</span> <span class="o">%</span> <span class="bp">self</span><span class="o">.</span><span class="n">pk</span>
</pre></div>


<h3 id="生成数据表">生成数据表</h3>
<ul>
<li>激活模型：编辑settings.py文件，将booktest应用加入到installed_apps中</li>
</ul>
<p><img alt="1531115052424" src="/注册app.png" /></p>
<ul>
<li>生成迁移文件：根据模型类生成sql语句</li>
</ul>
<div class="codehilite"><pre><span></span>python manage.py makemigrations
</pre></div>


<ul>
<li>迁移文件被生成到应用的migrations目录</li>
</ul>
<p><img alt="1531115146872" src="/迁移文件.png" /></p>
<ul>
<li>执行迁移：执行sql语句生成数据表</li>
</ul>
<div class="codehilite"><pre><span></span>python manage.py migrate
</pre></div>


<h3 id="测试数据操作">测试数据操作</h3>
<ul>
<li>进入python shell，进行简单的模型API练习</li>
</ul>
<div class="codehilite"><pre><span></span>python manage.py shell
</pre></div>


<ul>
<li>进入shell后提示如下：</li>
</ul>
<p>![](/进入django shell.png)</p>
<ul>
<li>引入需要的包：</li>
</ul>
<div class="codehilite"><pre><span></span><span class="kn">from</span> <span class="nn">App.models</span> <span class="kn">import</span> <span class="n">Grade</span><span class="p">,</span><span class="n">Student</span>
</pre></div>


<ul>
<li>查询所有班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>Grade.objects.all()
</pre></div>


<ul>
<li>新建班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>grade = Grade()
grade.g_name = &quot;深圳python1805班&quot;
grade.g_num = 40
grade.save()
</pre></div>


<ul>
<li>查找班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>grade = Grade.objects.get(pk=1)
</pre></div>


<ul>
<li>输出班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>grade
grade.id
grade.g_name
</pre></div>


<ul>
<li>修改班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>grade.g_name=&quot;大神班&quot;
grade.save()
</pre></div>


<ul>
<li>删除班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>grade.delete()
</pre></div>


<h3 id="关联对象的操作">关联对象的操作</h3>
<ul>
<li>对于Student可以按照上面的操作方式进行</li>
<li>添加，注意添加关联对象</li>
</ul>
<div class="codehilite"><pre><span></span>s=Student()
s.s_name=&#39;张三&#39;
s.s_sex=True
s.scontent=&#39;爱好打篮球&#39;
# 注意grade为Grade的实例，上面我们已经删除了，这里需要重新创建
s.sclass=grade
s.save()
</pre></div>


<h3 id="运行项目">运行项目</h3>
<div class="codehilite"><pre><span></span>python manage.py runserver ip:port
</pre></div>


<h1 id="项目主要部分">项目主要部分</h1>
<h3 id="视图">视图</h3>
<ul>
<li>在django中，视图的作用是对路由转发过来的url进行处理</li>
<li>视图函数接收的第一个参数是request对象，request对象中包含了请求的信息</li>
<li>视图函数写每个app下的views.py文件中</li>
</ul>
<div class="codehilite"><pre><span></span><span class="kn">from</span> <span class="nn">django.shortcuts</span> <span class="kn">import</span> <span class="n">render</span>
<span class="kn">from</span> <span class="nn">django.http</span> <span class="kn">import</span> <span class="n">HttpResponse</span>

<span class="c1"># Create your views here.</span>

<span class="k">def</span> <span class="nf">index</span><span class="p">(</span><span class="n">request</span><span class="p">):</span>
    <span class="k">return</span> <span class="n">HttpResponse</span><span class="p">(</span><span class="s2">&quot;Hello Django&quot;</span><span class="p">)</span>
</pre></div>


<p>注意：视图函数的第一个参数必须是request，返回必须调用django的定义的方法规范。</p>
<h3 id="路由">路由</h3>
<ul>
<li>在视图函数写完后，要编写相应的url规则，这样当我们在浏览器上输入网址的时候才能转到相应的视图函数处理逻辑</li>
<li>只定义路径部分，不定义域名</li>
<li>路由函数的url部分遵循正则的书写方式</li>
<li>路由规则由两部分必须指定的参数和其他可选参数组成</li>
</ul>
<div class="codehilite"><pre><span></span>url(r&#39;^index/&#39;, App.index, name=&quot;index&quot;),
</pre></div>


<p>注：每次定义完路由规则，在代码的末尾添加逗号</p>
<ul>
<li>在编写路由规则之前必须导入相应的视图</li>
<li>在组织项目时，将app和项目的路由分离</li>
</ul>
<h3 id="模板">模板</h3>
<ul>
<li>
<p>模板是HTML文件，通过占位符来传递视图函数的数据</p>
</li>
<li>
<p>每个app目录下都可以创建templates的文件夹，django会自动从这些app里寻找相应的模板</p>
</li>
</ul>
<h5 id="定义模板">定义模板</h5>
<p>定义index.html模板文件</p>
<div class="codehilite"><pre><span></span><span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="p">&lt;</span><span class="nt">html</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">title</span><span class="p">&gt;</span>首页<span class="p">&lt;/</span><span class="nt">title</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">h1</span><span class="p">&gt;</span>学生列表<span class="p">&lt;/</span><span class="nt">h1</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">ul</span><span class="p">&gt;</span>
<span class="cp">{%</span><span class="k">for</span> <span class="nv">student</span> <span class="k">in</span> <span class="nv">students</span><span class="cp">%}</span>
<span class="p">&lt;</span><span class="nt">li</span><span class="p">&gt;</span>
  <span class="cp">{{</span><span class="nv">student.s_name</span><span class="cp">}}</span>
<span class="p">&lt;/</span><span class="nt">li</span><span class="p">&gt;</span>
<span class="cp">{%</span><span class="k">endfor</span><span class="cp">%}</span>
<span class="p">&lt;/</span><span class="nt">ul</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span>
</pre></div>


<p>定义detail.html模板</p>
<div class="codehilite"><pre><span></span><span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="p">&lt;</span><span class="nt">html</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">title</span><span class="p">&gt;</span>详情页<span class="p">&lt;/</span><span class="nt">title</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">h1</span><span class="p">&gt;</span>学生详情<span class="p">&lt;/</span><span class="nt">h1</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">ul</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">li</span><span class="p">&gt;</span>
  <span class="cp">{{</span><span class="nv">student.s_name</span><span class="cp">}}</span>
  <span class="cp">{{</span><span class="nv">student.s_gender</span><span class="cp">}}</span>
  <span class="cp">{{</span><span class="nv">student.s_content</span><span class="cp">}}</span>
<span class="p">&lt;/</span><span class="nt">li</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">ul</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span>
</pre></div>


<h5 id="使用模板">使用模板</h5>
<ul>
<li>定义视图</li>
</ul>
<div class="codehilite"><pre><span></span>def index(request):
    students = StudentInfo.objects.all()
    return render(request, &quot;index.html&quot;, {&quot;students&quot;:students})

def index_page(request, id):
    student = StudentInfo.objects.get(pk=id)
    return render(request, &quot;detail.html&quot;, {&quot;student&quot;:student})
</pre></div>


<ul>
<li>定义路由</li>
</ul>
<div class="codehilite"><pre><span></span>url(r&#39;index/$&#39;, class_view.index, name=&quot;index&quot;),
url(r&#39;index/(\d+)/$&#39;, class_view.index_page, name=&quot;index_page&quot;),
</pre></div>


<ul>
<li>运行项目</li>
<li>python manage.py runserver</li>
</ul>
<div class="toc">
<ul>
<li><a href="#django是个啥">Django是个啥</a></li>
<li><a href="#开发环境">开发环境</a></li>
<li><a href="#ubuntu系统和命令介绍">Ubuntu系统和命令介绍</a><ul>
<li><a href="#系统设置">系统设置</a></li>
<li><a href="#常用命令">常用命令</a></li>
</ul>
</li>
<li><a href="#bscs">BS/CS</a></li>
<li><a href="#mvcmvt">MVC/MVT</a></li>
<li><a href="#hellodjango项目">HelloDjango项目</a><ul>
<li><a href="#创建虚拟环境">创建虚拟环境</a></li>
<li><a href="#虚拟环境的优点">虚拟环境的优点</a><ul>
<li><a href="#linuxmacos-下">Linux/MacOS 下</a></li>
<li><a href="#windows-下">Windows 下：</a></li>
<li><a href="#虚拟环境使用方法">虚拟环境使用方法：</a></li>
</ul>
</li>
<li><a href="#安装django框架">安装Django框架</a></li>
<li><a href="#创建hellodjango项目">创建HelloDJango项目</a></li>
<li><a href="#django的项目结构">Django的项目结构</a></li>
<li><a href="#settingspy">settings.py</a></li>
<li><a href="#pycharm安装">Pycharm安装</a></li>
<li><a href="#创建数据库">创建数据库</a></li>
<li><a href="#创建视图">创建视图</a></li>
</ul>
</li>
<li><a href="#django请求流程">Django请求流程</a></li>
<li><a href="#设计一个小项目">设计一个小项目</a><ul>
<li><a href="#需求分析">需求分析</a></li>
<li><a href="#数据库配置">数据库配置</a></li>
<li><a href="#创建应用">创建应用</a></li>
<li><a href="#定义模型类">定义模型类</a></li>
<li><a href="#生成数据表">生成数据表</a></li>
<li><a href="#测试数据操作">测试数据操作</a></li>
<li><a href="#关联对象的操作">关联对象的操作</a></li>
<li><a href="#运行项目">运行项目</a></li>
</ul>
</li>
<li><a href="#项目主要部分">项目主要部分</a><ul>
<li><a href="#视图">视图</a></li>
<li><a href="#路由">路由</a></li>
<li><a href="#模板">模板</a><ul>
<li><a href="#定义模板">定义模板</a></li>
<li><a href="#使用模板">使用模板</a></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>

[pid: 28461|app: 0|req: 380/849] 113.88.65.32 () {46 vars in 827 bytes} [Mon Aug 13 14:38:04 2018] GET /post/3/ => generated 36300 bytes in 523 msecs (HTTP/1.1 200) 5 headers in 279 bytes (1 switches on core 0)
Not Found: /1.png
[pid: 28461|app: 0|req: 381/850] 113.88.65.32 () {44 vars in 749 bytes} [Mon Aug 13 14:38:05 2018] GET /1.png => generated 3357 bytes in 2 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 1)
Not Found: /注册app.png
Not Found: /django项目目录结构.png
[pid: 19403|app: 0|req: 172/852] 113.88.65.32 () {44 vars in 831 bytes} [Mon Aug 13 14:38:05 2018] GET /django%E9%A1%B9%E7%9B%AE%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84.png => generated 3462 bytes in 7 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 0)
[pid: 27717|app: 0|req: 161/852] 113.88.65.32 () {44 vars in 777 bytes} [Mon Aug 13 14:38:05 2018] GET /%E6%B3%A8%E5%86%8Capp.png => generated 3393 bytes in 3 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 1)
Not Found: /迁移文件.png
[pid: 27717|app: 0|req: 162/853] 113.88.65.32 () {44 vars in 795 bytes} [Mon Aug 13 14:38:05 2018] GET /%E8%BF%81%E7%A7%BB%E6%96%87%E4%BB%B6.png => generated 3414 bytes in 3 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 0)
[pid: 28461|app: 0|req: 382/854] 113.88.65.32 () {54 vars in 1040 bytes} [Mon Aug 13 14:38:47 2018] POST /comment/post/3/ => generated 0 bytes in 131 msecs (HTTP/1.1 302) 4 headers in 130 bytes (1 switches on core 1)
[pid: 27717|app: 0|req: 163/855] 113.88.65.32 () {54 vars in 1040 bytes} [Mon Aug 13 14:38:47 2018] POST /comment/post/3/ => generated 0 bytes in 128 msecs (HTTP/1.1 302) 4 headers in 130 bytes (1 switches on core 0)
![Alt text](/static/images/django_blog/01.jpg)

---
typora-copy-images-to: images
typora-root-url: images
---

# Django是个啥

​	最初是被开发来用于管理劳伦斯出版集团旗下的一些以新闻内容为主的网站的。并于2005年7月在BSD许可证下发布。这套框架是以比利时的吉普赛爵士吉他手Django Reinhardt来命名的。

​	Django的主要目标是使得开发复杂的、数据库驱动的网站变得简单。Django注重组件的重用性和“可插拔性”，敏捷开发和DRY法则（Don't Repeat Yourself）。在Django中Python被普遍使用，甚至包括配置文件和数据模型。

- 由 Python 开发的一个免费的开源网站框架，可以用于快速搭建高性能，优雅的网站

- Django 中提供了开发网站经常用到的模块，常见的代码都为你写好了

- Django 提供了通用Web开发模式的高度抽象，提供了频繁进行的编程作业的快速解决方法，以及为“如何解决问题”提供了清晰明了的约定。

- Django的理念是DRY(Don't Repeat Yourself)来鼓励快速开发！

  

# 开发环境

Ubuntu + Python3  + Django + PyCharm



# Ubuntu系统和命令介绍

### 系统设置

### 常用命令

- cd
- ls
- cp
- mv
- rm
- mkdir
- pwd
- touch
- cat
- history
- ps
  - ps -aux
- kill 
  - kill -9 pid
- su/sudo
- chmod
- grep
- which
- whereis
- ifconfig
- netstat
  - netstat -antp 查看网络连接状态
- wget
- ssh username@host -p
  - ssh-keygen
- tar
  - tar -zxvf 解压缩
  - tar -czvf 压缩
- du
  - du -sh
- df
  - df -h
- apt install
- apt update
- apt remove
- apt autoremove
- dpkg -i
- vi/vim

# BS/CS

​        C/S 架构即“客户端-服务器” 架构。这里的“客户端”可以是有 GUI （图形用户界面）的定制软件，也可以是浏览器，甚至可以是通过 SSH 访问服务器的命令行脚本。只要是客户端通过访问服务器调取计算或者存储资源的，统统都是 C/S 架构。所谓的 Browser-Server 架构其实是 C/S 架构的一种特殊的实现形式，而不是其对立面。

- C/S:
  - C: Client
  - S: Server
- B/S
  - B: Browser
  - S: Server       

# MVC/MVT

- MVC

  - M: Model（模型）
  - V: View（视图）
  - C: Controller（控制器）

- MVT

  - M: Model（模型），主要封装对数据库层的访问，对数据库中的数据进行增、删、改、查操作。

  - V: View（视图），用于封装结果，生成页面展示的html内容。

  - T: Template（模板），用于接收请求，处理业务逻辑，与Model和View交互，返回结果。

    ​

# HelloDjango项目

### 创建虚拟环境

### 虚拟环境的优点

- 使不同应用开发环境独立
- 环境升级不影响其他应用，也不会影响全局的python环境
- 可以防止系统中出现包管理混乱和版本冲突

开发会用 virtualenv 来管理多个开发环境

#### Linux/MacOS 下

virtualenvwrapper 使得virtualenv变得更好用，所以我们一起安装了

```
(sudo) pip install virtualenv virtualenvwrapper
```

修改~/.bash_profile或其它环境变量相关文件(如 .bashrc 或用 ZSH 之后的 .zshrc)，添加以下语句

```
export WORKON_HOME=$HOME/.virtualenvs
export PROJECT_HOME=$HOME/workspace
source /usr/local/bin/virtualenvwrapper.sh(每台机子的位置不一样，可以通过find命令找到)
```

修改后使之立即生效(也可以重启终端使之生效)：

```
source ~/.bash_profile
```



#### Windows 下：

```
pip install virtualenv virtualenvwrapper-win
```

【可选】Windows下默认虚拟环境是放在用户名下面的Envs中的，与桌面，我的文档，下载等文件夹在一块的。更改方法：计算机，属性，高级系统设置，环境变量，添加WORKON_HOME，如图（windows 10 环境变量设置截图）：

![](/1.png)

#### 虚拟环境使用方法：

- **mkvirtualenv django：创建运行环境django**

- **workon django: 工作在 django环境 或 从其它环境切换到 django环境**

- **deactivate**: 退出终端环境

- **其它的：**

- **rmvirtualenv** ENV：删除运行环境ENV

- **mkproject** mic：创建mic项目和运行环境mic

- **mktmpenv**：创建临时运行环境

- **lsvirtualenv**: 列出可用的运行环境

- **lssitepackages**: 列出当前环境安装了的包

  ​




### 安装Django框架

- pip install django==1.11.7

- 测试django是否已经安装好

  - 进入python shell

    ```python
    import django
    django.get_version()
    ```

- pip list 显示当前python环境中的所有的库

- pip freeze 显示当前python环境中的除系统内置库外的所有第三方库

### 创建HelloDJango项目

- 开启一个django项目 django-admin startproject day01_HelloDjango
- 测试django项目环境 python manage.py runserver
  - python manage.py runserver 0.0.0.0:8000 表示允许本机所有的IP被外网访问
  - python manage.py runserver 9000 使用本机运行，但端口是9000
- 开启自己的App
  - python manage.py startapp App



### Django的项目结构

1. manage.py
   - 管理整个项目
2. XXX/settings.py  
   - 项目配置文件
3. XXX/urls.py
   - 路由器，接收用户请求，分发给视图函数（控制器）
4. XXX/wsgi.py
   - 网关接口，通常用在线上环境部署（开发过程中不会接触）

### settings.py

1. DEBUG 是否打开DEBUG
2. ALLOWED_HOSTS 允许访问的主机
3. INSTALLED_APPS   安装了的应用 
4. DATABASES   数据库配置
5. LANGUAGE_CODE 中文 zh-hans
6. TIME_ZONE  中国 Asia/Shanghai



### Pycharm安装

1. 解压
2. 目录结构中会有  bin
3. 进入bin
4. bin 中pycharm.sh
5. 执行 ./pycharm.sh
6. 如果想在终端中的任何位置运行，那就配置到环境变量中



### 创建数据库

- 创建更改的文件
  - python manage.py makemigrations
- 将生成的py文件应用到数据库
  - python manage.py migrate
- 清空数据库
  - python manage.py flush
- 导入导出数据
  - python manage.py dumpdata appname > appname.json
  - python manage.py loaddata appname.json

### 创建视图

- 需要配置到工程的配置文件中settings中的INSTALLED_APPS
- views中定义函数，接收request，返回response
- 在urls中配置路由规则
  - 在根urls中配置（管理麻烦，配置简单）
  - 在App中创建自己的urls，在urls中书写规则，将urls配置到工程urls中
- 创建模板目录，在views返回时调用模板的渲染
- 变更数据库
  - 在settings中配置数据库信息



# Django请求流程

- 进来的请求转入/index/。
- Django 通过在 ROOT_URLCONF 配置来决定根 URLconf。
- Django 在 URLconf 中的所有 URL 模式中，查找第一个匹配 /index/ 的条目。
- 如果找到匹配，将调用相应的视图函数。
- 视图函数返回一个 HttpResponse。
- Django 转换 HttpResponse 为一个适合的 HTTP response， 以 Web page 显示出来。



# 设计一个小项目

### 需求分析

- 本示例完成“班级-学生”信息的维护，需要存储两种数据：班级、学生
- 班级表结构设计：
  - 表名：Grade
  - 班级名称：g_name
  - 班级人数：g_num
- 学生表结构设计：
  - 表名：Student
  - 学生姓名：s_name
  - 学生性别：s_gender
  - 所属班级：s_grade
- 班级-学生的关系为一对多

### 数据库配置

- 在settings.py文件中，通过DATABASES项进行数据库设置
- django支持的数据库包括：sqlite、mysql等主流数据库
- Django默认使用SQLite数据库

### 创建应用

- 在一个项目中可以创建一到多个应用，每个应用进行一种业务处理
- 创建应用的命令：

```
python manage.py startapp day1_hello_django
```

- 应用的目录结构如下图

![](/django项目目录结构.png)

### 定义模型类

- 有一个数据表，就有一个模型类与之对应
- 打开models.py文件，定义模型类
- 引入包from django.db import models
- 模型类继承自models.Model类
- **说明：不需要定义主键列，在生成时会自动添加，并且值为自动增长**
- 当输出对象时，会调用对象的str方法

```python
from django.db import models

class Grade(models.Model):
    g_name = models.CharField(max_length=20, db_column="班级名称")
    g_num = models.IntegerField(default=30)
    g_crete_date = models.DateTimeField(auto_now=True)

class Student(models.Model):
    s_name = models.CharField(max_length=20, db_column="姓名")
    s_age = models.IntegerField(default=20, db_column="年龄")
    s_sex = models.BooleanField(default=True)
    s_birthday = models.DateTimeField()
    s_grade = models.ForeignKey(Grade)

    class Meta:
        ordering = ["-s_age"]
        # 为数据库设置别名
        verbose_name = "学生表"
    	verbose_name_plural = "学生表"
        
    def _ _str_ _(self):
        return "%d" % self.pk
```

### 生成数据表

- 激活模型：编辑settings.py文件，将booktest应用加入到installed_apps中

  ![1531115052424](/注册app.png)

- 生成迁移文件：根据模型类生成sql语句

```
python manage.py makemigrations
```

- 迁移文件被生成到应用的migrations目录

![1531115146872](/迁移文件.png)

- 执行迁移：执行sql语句生成数据表

```
python manage.py migrate
```

### 测试数据操作

- 进入python shell，进行简单的模型API练习

```
python manage.py shell
```

- 进入shell后提示如下：

![](/进入django shell.png)

- 引入需要的包：

```
from App.models import Grade,Student
```

- 查询所有班级信息：

```
Grade.objects.all()
```

- 新建班级信息：

```
grade = Grade()
grade.g_name = "深圳python1805班"
grade.g_num = 40
grade.save()
```

- 查找班级信息：

```
grade = Grade.objects.get(pk=1)
```

- 输出班级信息：

```
grade
grade.id
grade.g_name
```

- 修改班级信息：

```
grade.g_name="大神班"
grade.save()
```

- 删除班级信息：

```
grade.delete()
```

### 关联对象的操作

- 对于Student可以按照上面的操作方式进行
- 添加，注意添加关联对象

```
s=Student()
s.s_name='张三'
s.s_sex=True
s.scontent='爱好打篮球'
# 注意grade为Grade的实例，上面我们已经删除了，这里需要重新创建
s.sclass=grade
s.save()
```

### 运行项目

```
python manage.py runserver ip:port
```



# 项目主要部分

### 视图

- 在django中，视图的作用是对路由转发过来的url进行处理
- 视图函数接收的第一个参数是request对象，request对象中包含了请求的信息
- 视图函数写每个app下的views.py文件中

```
from django.shortcuts import render
from django.http import HttpResponse

# Create your views here.

def index(request):
    return HttpResponse("Hello Django")
```

注意：视图函数的第一个参数必须是request，返回必须调用django的定义的方法规范。

### 路由

- 在视图函数写完后，要编写相应的url规则，这样当我们在浏览器上输入网址的时候才能转到相应的视图函数处理逻辑
- 只定义路径部分，不定义域名
- 路由函数的url部分遵循正则的书写方式
- 路由规则由两部分必须指定的参数和其他可选参数组成

```
url(r'^index/', App.index, name="index"),
```

注：每次定义完路由规则，在代码的末尾添加逗号

- 在编写路由规则之前必须导入相应的视图
- 在组织项目时，将app和项目的路由分离



### 模板

- 模板是HTML文件，通过占位符来传递视图函数的数据

- 每个app目录下都可以创建templates的文件夹，django会自动从这些app里寻找相应的模板

  

##### 定义模板

定义index.html模板文件

```
<!DOCTYPE html>
<html>
<head>
  <title>首页</title>
</head>
<body>
<h1>学生列表</h1>
<ul>
{%for student in students%}
<li>
  {{student.s_name}}
</li>
{%endfor%}
</ul>
</body>
</html>
```

定义detail.html模板

```
<!DOCTYPE html>
<html>
<head>
  <title>详情页</title>
</head>
<body>
<h1>学生详情</h1>
<ul>
<li>
  {{student.s_name}}
  {{student.s_gender}}
  {{student.s_content}}
</li>
</ul>
</body>
</html>
```

##### 使用模板

- 定义视图

```
def index(request):
    students = StudentInfo.objects.all()
    return render(request, "index.html", {"students":students})

def index_page(request, id):
    student = StudentInfo.objects.get(pk=id)
    return render(request, "detail.html", {"student":student})
```

- 定义路由

```
url(r'index/$', class_view.index, name="index"),
url(r'index/(\d+)/$', class_view.index_page, name="index_page"),
```

- 运行项目
  - python manage.py runserver
------------------------------------------------------------------------------------------------------------------------
<p><img alt="Alt text" src="/static/images/django_blog/01.jpg" /></p>
<hr />
<p>typora-copy-images-to: images
typora-root-url: images</p>
<hr />
<h1 id="django是个啥">Django是个啥</h1>
<p>​   最初是被开发来用于管理劳伦斯出版集团旗下的一些以新闻内容为主的网站的。并于2005年7月在BSD许可证下发布。这套框架是以比利时的吉普赛爵士吉他手Django Reinhardt来命名的。</p>
<p>​   Django的主要目标是使得开发复杂的、数据库驱动的网站变得简单。Django注重组件的重用性和“可插拔性”，敏捷开发和DRY法则（Don't Repeat Yourself）。在Django中Python被普遍使用，甚至包括配置文件和数据模型。</p>
<ul>
<li>
<p>由 Python 开发的一个免费的开源网站框架，可以用于快速搭建高性能，优雅的网站</p>
</li>
<li>
<p>Django 中提供了开发网站经常用到的模块，常见的代码都为你写好了</p>
</li>
<li>
<p>Django 提供了通用Web开发模式的高度抽象，提供了频繁进行的编程作业的快速解决方法，以及为“如何解决问题”提供了清晰明了的约定。</p>
</li>
<li>
<p>Django的理念是DRY(Don't Repeat Yourself)来鼓励快速开发！</p>
</li>
</ul>
<h1 id="开发环境">开发环境</h1>
<p>Ubuntu + Python3  + Django + PyCharm</p>
<h1 id="ubuntu系统和命令介绍">Ubuntu系统和命令介绍</h1>
<h3 id="系统设置">系统设置</h3>
<h3 id="常用命令">常用命令</h3>
<ul>
<li>cd</li>
<li>ls</li>
<li>cp</li>
<li>mv</li>
<li>rm</li>
<li>mkdir</li>
<li>pwd</li>
<li>touch</li>
<li>cat</li>
<li>history</li>
<li>ps</li>
<li>ps -aux</li>
<li>kill </li>
<li>kill -9 pid</li>
<li>su/sudo</li>
<li>chmod</li>
<li>grep</li>
<li>which</li>
<li>whereis</li>
<li>ifconfig</li>
<li>netstat</li>
<li>netstat -antp 查看网络连接状态</li>
<li>wget</li>
<li>ssh username@host -p</li>
<li>ssh-keygen</li>
<li>tar</li>
<li>tar -zxvf 解压缩</li>
<li>tar -czvf 压缩</li>
<li>du</li>
<li>du -sh</li>
<li>df</li>
<li>df -h</li>
<li>apt install</li>
<li>apt update</li>
<li>apt remove</li>
<li>apt autoremove</li>
<li>dpkg -i</li>
<li>vi/vim</li>
</ul>
<h1 id="bscs">BS/CS</h1>
<p>​        C/S 架构即“客户端-服务器” 架构。这里的“客户端”可以是有 GUI （图形用户界面）的定制软件，也可以是浏览器，甚至可以是通过 SSH 访问服务器的命令行脚本。只要是客户端通过访问服务器调取计算或者存储资源的，统统都是 C/S 架构。所谓的 Browser-Server 架构其实是 C/S 架构的一种特殊的实现形式，而不是其对立面。</p>
<ul>
<li>C/S:</li>
<li>C: Client</li>
<li>S: Server</li>
<li>B/S</li>
<li>B: Browser</li>
<li>S: Server       </li>
</ul>
<h1 id="mvcmvt">MVC/MVT</h1>
<ul>
<li>
<p>MVC</p>
</li>
<li>
<p>M: Model（模型）</p>
</li>
<li>V: View（视图）</li>
<li>
<p>C: Controller（控制器）</p>
</li>
<li>
<p>MVT</p>
</li>
<li>
<p>M: Model（模型），主要封装对数据库层的访问，对数据库中的数据进行增、删、改、查操作。</p>
</li>
<li>
<p>V: View（视图），用于封装结果，生成页面展示的html内容。</p>
</li>
<li>
<p>T: Template（模板），用于接收请求，处理业务逻辑，与Model和View交互，返回结果。</p>
<p>​</p>
</li>
</ul>
<h1 id="hellodjango项目">HelloDjango项目</h1>
<h3 id="创建虚拟环境">创建虚拟环境</h3>
<h3 id="虚拟环境的优点">虚拟环境的优点</h3>
<ul>
<li>使不同应用开发环境独立</li>
<li>环境升级不影响其他应用，也不会影响全局的python环境</li>
<li>可以防止系统中出现包管理混乱和版本冲突</li>
</ul>
<p>开发会用 virtualenv 来管理多个开发环境</p>
<h4 id="linuxmacos-下">Linux/MacOS 下</h4>
<p>virtualenvwrapper 使得virtualenv变得更好用，所以我们一起安装了</p>
<div class="codehilite"><pre><span></span>(sudo) pip install virtualenv virtualenvwrapper
</pre></div>


<p>修改~/.bash_profile或其它环境变量相关文件(如 .bashrc 或用 ZSH 之后的 .zshrc)，添加以下语句</p>
<div class="codehilite"><pre><span></span>export WORKON_HOME=$HOME/.virtualenvs
export PROJECT_HOME=$HOME/workspace
source /usr/local/bin/virtualenvwrapper.sh(每台机子的位置不一样，可以通过find命令找到)
</pre></div>


<p>修改后使之立即生效(也可以重启终端使之生效)：</p>
<div class="codehilite"><pre><span></span>source ~/.bash_profile
</pre></div>


<h4 id="windows-下">Windows 下：</h4>
<div class="codehilite"><pre><span></span>pip install virtualenv virtualenvwrapper-win
</pre></div>


<p>【可选】Windows下默认虚拟环境是放在用户名下面的Envs中的，与桌面，我的文档，下载等文件夹在一块的。更改方法：计算机，属性，高级系统设置，环境变量，添加WORKON_HOME，如图（windows 10 环境变量设置截图）：</p>
<p><img alt="" src="/1.png" /></p>
<h4 id="虚拟环境使用方法">虚拟环境使用方法：</h4>
<ul>
<li>
<p><strong>mkvirtualenv django：创建运行环境django</strong></p>
</li>
<li>
<p><strong>workon django: 工作在 django环境 或 从其它环境切换到 django环境</strong></p>
</li>
<li>
<p><strong>deactivate</strong>: 退出终端环境</p>
</li>
<li>
<p><strong>其它的：</strong></p>
</li>
<li>
<p><strong>rmvirtualenv</strong> ENV：删除运行环境ENV</p>
</li>
<li>
<p><strong>mkproject</strong> mic：创建mic项目和运行环境mic</p>
</li>
<li>
<p><strong>mktmpenv</strong>：创建临时运行环境</p>
</li>
<li>
<p><strong>lsvirtualenv</strong>: 列出可用的运行环境</p>
</li>
<li>
<p><strong>lssitepackages</strong>: 列出当前环境安装了的包</p>
</li>
</ul>
<p>​</p>
<h3 id="安装django框架">安装Django框架</h3>
<ul>
<li>
<p>pip install django==1.11.7</p>
</li>
<li>
<p>测试django是否已经安装好</p>
</li>
<li>
<p>进入python shell</p>
<p><code>python
import django
django.get_version()</code></p>
</li>
<li>
<p>pip list 显示当前python环境中的所有的库</p>
</li>
<li>
<p>pip freeze 显示当前python环境中的除系统内置库外的所有第三方库</p>
</li>
</ul>
<h3 id="创建hellodjango项目">创建HelloDJango项目</h3>
<ul>
<li>开启一个django项目 django-admin startproject day01_HelloDjango</li>
<li>测试django项目环境 python manage.py runserver</li>
<li>python manage.py runserver 0.0.0.0:8000 表示允许本机所有的IP被外网访问</li>
<li>python manage.py runserver 9000 使用本机运行，但端口是9000</li>
<li>开启自己的App</li>
<li>python manage.py startapp App</li>
</ul>
<h3 id="django的项目结构">Django的项目结构</h3>
<ol>
<li>manage.py</li>
<li>管理整个项目</li>
<li>XXX/settings.py  </li>
<li>项目配置文件</li>
<li>XXX/urls.py</li>
<li>路由器，接收用户请求，分发给视图函数（控制器）</li>
<li>XXX/wsgi.py</li>
<li>网关接口，通常用在线上环境部署（开发过程中不会接触）</li>
</ol>
<h3 id="settingspy">settings.py</h3>
<ol>
<li>DEBUG 是否打开DEBUG</li>
<li>ALLOWED_HOSTS 允许访问的主机</li>
<li>INSTALLED_APPS   安装了的应用 </li>
<li>DATABASES   数据库配置</li>
<li>LANGUAGE_CODE 中文 zh-hans</li>
<li>TIME_ZONE  中国 Asia/Shanghai</li>
</ol>
<h3 id="pycharm安装">Pycharm安装</h3>
<ol>
<li>解压</li>
<li>目录结构中会有  bin</li>
<li>进入bin</li>
<li>bin 中pycharm.sh</li>
<li>执行 ./pycharm.sh</li>
<li>如果想在终端中的任何位置运行，那就配置到环境变量中</li>
</ol>
<h3 id="创建数据库">创建数据库</h3>
<ul>
<li>创建更改的文件</li>
<li>python manage.py makemigrations</li>
<li>将生成的py文件应用到数据库</li>
<li>python manage.py migrate</li>
<li>清空数据库</li>
<li>python manage.py flush</li>
<li>导入导出数据</li>
<li>python manage.py dumpdata appname &gt; appname.json</li>
<li>python manage.py loaddata appname.json</li>
</ul>
<h3 id="创建视图">创建视图</h3>
<ul>
<li>需要配置到工程的配置文件中settings中的INSTALLED_APPS</li>
<li>views中定义函数，接收request，返回response</li>
<li>在urls中配置路由规则</li>
<li>在根urls中配置（管理麻烦，配置简单）</li>
<li>在App中创建自己的urls，在urls中书写规则，将urls配置到工程urls中</li>
<li>创建模板目录，在views返回时调用模板的渲染</li>
<li>变更数据库</li>
<li>在settings中配置数据库信息</li>
</ul>
<h1 id="django请求流程">Django请求流程</h1>
<ul>
<li>进来的请求转入/index/。</li>
<li>Django 通过在 ROOT_URLCONF 配置来决定根 URLconf。</li>
<li>Django 在 URLconf 中的所有 URL 模式中，查找第一个匹配 /index/ 的条目。</li>
<li>如果找到匹配，将调用相应的视图函数。</li>
<li>视图函数返回一个 HttpResponse。</li>
<li>Django 转换 HttpResponse 为一个适合的 HTTP response， 以 Web page 显示出来。</li>
</ul>
<h1 id="设计一个小项目">设计一个小项目</h1>
<h3 id="需求分析">需求分析</h3>
<ul>
<li>本示例完成“班级-学生”信息的维护，需要存储两种数据：班级、学生</li>
<li>班级表结构设计：</li>
<li>表名：Grade</li>
<li>班级名称：g_name</li>
<li>班级人数：g_num</li>
<li>学生表结构设计：</li>
<li>表名：Student</li>
<li>学生姓名：s_name</li>
<li>学生性别：s_gender</li>
<li>所属班级：s_grade</li>
<li>班级-学生的关系为一对多</li>
</ul>
<h3 id="数据库配置">数据库配置</h3>
<ul>
<li>在settings.py文件中，通过DATABASES项进行数据库设置</li>
<li>django支持的数据库包括：sqlite、mysql等主流数据库</li>
<li>Django默认使用SQLite数据库</li>
</ul>
<h3 id="创建应用">创建应用</h3>
<ul>
<li>在一个项目中可以创建一到多个应用，每个应用进行一种业务处理</li>
<li>创建应用的命令：</li>
</ul>
<div class="codehilite"><pre><span></span>python manage.py startapp day1_hello_django
</pre></div>


<ul>
<li>应用的目录结构如下图</li>
</ul>
<p><img alt="" src="/django项目目录结构.png" /></p>
<h3 id="定义模型类">定义模型类</h3>
<ul>
<li>有一个数据表，就有一个模型类与之对应</li>
<li>打开models.py文件，定义模型类</li>
<li>引入包from django.db import models</li>
<li>模型类继承自models.Model类</li>
<li><strong>说明：不需要定义主键列，在生成时会自动添加，并且值为自动增长</strong></li>
<li>当输出对象时，会调用对象的str方法</li>
</ul>
<div class="codehilite"><pre><span></span><span class="kn">from</span> <span class="nn">django.db</span> <span class="kn">import</span> <span class="n">models</span>

<span class="k">class</span> <span class="nc">Grade</span><span class="p">(</span><span class="n">models</span><span class="o">.</span><span class="n">Model</span><span class="p">):</span>
    <span class="n">g_name</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">CharField</span><span class="p">(</span><span class="n">max_length</span><span class="o">=</span><span class="mi">20</span><span class="p">,</span> <span class="n">db_column</span><span class="o">=</span><span class="s2">&quot;班级名称&quot;</span><span class="p">)</span>
    <span class="n">g_num</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">IntegerField</span><span class="p">(</span><span class="n">default</span><span class="o">=</span><span class="mi">30</span><span class="p">)</span>
    <span class="n">g_crete_date</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">DateTimeField</span><span class="p">(</span><span class="n">auto_now</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>

<span class="k">class</span> <span class="nc">Student</span><span class="p">(</span><span class="n">models</span><span class="o">.</span><span class="n">Model</span><span class="p">):</span>
    <span class="n">s_name</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">CharField</span><span class="p">(</span><span class="n">max_length</span><span class="o">=</span><span class="mi">20</span><span class="p">,</span> <span class="n">db_column</span><span class="o">=</span><span class="s2">&quot;姓名&quot;</span><span class="p">)</span>
    <span class="n">s_age</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">IntegerField</span><span class="p">(</span><span class="n">default</span><span class="o">=</span><span class="mi">20</span><span class="p">,</span> <span class="n">db_column</span><span class="o">=</span><span class="s2">&quot;年龄&quot;</span><span class="p">)</span>
    <span class="n">s_sex</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">BooleanField</span><span class="p">(</span><span class="n">default</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
    <span class="n">s_birthday</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">DateTimeField</span><span class="p">()</span>
    <span class="n">s_grade</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">ForeignKey</span><span class="p">(</span><span class="n">Grade</span><span class="p">)</span>

    <span class="k">class</span> <span class="nc">Meta</span><span class="p">:</span>
        <span class="n">ordering</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&quot;-s_age&quot;</span><span class="p">]</span>
        <span class="c1"># 为数据库设置别名</span>
        <span class="n">verbose_name</span> <span class="o">=</span> <span class="s2">&quot;学生表&quot;</span>
        <span class="n">verbose_name_plural</span> <span class="o">=</span> <span class="s2">&quot;学生表&quot;</span>

    <span class="k">def</span> <span class="nf">_</span> <span class="n">_str_</span> <span class="n">_</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">return</span> <span class="s2">&quot;</span><span class="si">%d</span><span class="s2">&quot;</span> <span class="o">%</span> <span class="bp">self</span><span class="o">.</span><span class="n">pk</span>
</pre></div>


<h3 id="生成数据表">生成数据表</h3>
<ul>
<li>激活模型：编辑settings.py文件，将booktest应用加入到installed_apps中</li>
</ul>
<p><img alt="1531115052424" src="/注册app.png" /></p>
<ul>
<li>生成迁移文件：根据模型类生成sql语句</li>
</ul>
<div class="codehilite"><pre><span></span>python manage.py makemigrations
</pre></div>


<ul>
<li>迁移文件被生成到应用的migrations目录</li>
</ul>
<p><img alt="1531115146872" src="/迁移文件.png" /></p>
<ul>
<li>执行迁移：执行sql语句生成数据表</li>
</ul>
<div class="codehilite"><pre><span></span>python manage.py migrate
</pre></div>


<h3 id="测试数据操作">测试数据操作</h3>
<ul>
<li>进入python shell，进行简单的模型API练习</li>
</ul>
<div class="codehilite"><pre><span></span>python manage.py shell
</pre></div>


<ul>
<li>进入shell后提示如下：</li>
</ul>
<p>![](/进入django shell.png)</p>
<ul>
<li>引入需要的包：</li>
</ul>
<div class="codehilite"><pre><span></span><span class="kn">from</span> <span class="nn">App.models</span> <span class="kn">import</span> <span class="n">Grade</span><span class="p">,</span><span class="n">Student</span>
</pre></div>


<ul>
<li>查询所有班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>Grade.objects.all()
</pre></div>


<ul>
<li>新建班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>grade = Grade()
grade.g_name = &quot;深圳python1805班&quot;
grade.g_num = 40
grade.save()
</pre></div>


<ul>
<li>查找班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>grade = Grade.objects.get(pk=1)
</pre></div>


<ul>
<li>输出班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>grade
grade.id
grade.g_name
</pre></div>


<ul>
<li>修改班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>grade.g_name=&quot;大神班&quot;
grade.save()
</pre></div>


<ul>
<li>删除班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>grade.delete()
</pre></div>


<h3 id="关联对象的操作">关联对象的操作</h3>
<ul>
<li>对于Student可以按照上面的操作方式进行</li>
<li>添加，注意添加关联对象</li>
</ul>
<div class="codehilite"><pre><span></span>s=Student()
s.s_name=&#39;张三&#39;
s.s_sex=True
s.scontent=&#39;爱好打篮球&#39;
# 注意grade为Grade的实例，上面我们已经删除了，这里需要重新创建
s.sclass=grade
s.save()
</pre></div>


<h3 id="运行项目">运行项目</h3>
<div class="codehilite"><pre><span></span>python manage.py runserver ip:port
</pre></div>


<h1 id="项目主要部分">项目主要部分</h1>
<h3 id="视图">视图</h3>
<ul>
<li>在django中，视图的作用是对路由转发过来的url进行处理</li>
<li>视图函数接收的第一个参数是request对象，request对象中包含了请求的信息</li>
<li>视图函数写每个app下的views.py文件中</li>
</ul>
<div class="codehilite"><pre><span></span><span class="kn">from</span> <span class="nn">django.shortcuts</span> <span class="kn">import</span> <span class="n">render</span>
<span class="kn">from</span> <span class="nn">django.http</span> <span class="kn">import</span> <span class="n">HttpResponse</span>

<span class="c1"># Create your views here.</span>

<span class="k">def</span> <span class="nf">index</span><span class="p">(</span><span class="n">request</span><span class="p">):</span>
    <span class="k">return</span> <span class="n">HttpResponse</span><span class="p">(</span><span class="s2">&quot;Hello Django&quot;</span><span class="p">)</span>
</pre></div>


<p>注意：视图函数的第一个参数必须是request，返回必须调用django的定义的方法规范。</p>
<h3 id="路由">路由</h3>
<ul>
<li>在视图函数写完后，要编写相应的url规则，这样当我们在浏览器上输入网址的时候才能转到相应的视图函数处理逻辑</li>
<li>只定义路径部分，不定义域名</li>
<li>路由函数的url部分遵循正则的书写方式</li>
<li>路由规则由两部分必须指定的参数和其他可选参数组成</li>
</ul>
<div class="codehilite"><pre><span></span>url(r&#39;^index/&#39;, App.index, name=&quot;index&quot;),
</pre></div>


<p>注：每次定义完路由规则，在代码的末尾添加逗号</p>
<ul>
<li>在编写路由规则之前必须导入相应的视图</li>
<li>在组织项目时，将app和项目的路由分离</li>
</ul>
<h3 id="模板">模板</h3>
<ul>
<li>
<p>模板是HTML文件，通过占位符来传递视图函数的数据</p>
</li>
<li>
<p>每个app目录下都可以创建templates的文件夹，django会自动从这些app里寻找相应的模板</p>
</li>
</ul>
<h5 id="定义模板">定义模板</h5>
<p>定义index.html模板文件</p>
<div class="codehilite"><pre><span></span><span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="p">&lt;</span><span class="nt">html</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">title</span><span class="p">&gt;</span>首页<span class="p">&lt;/</span><span class="nt">title</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">h1</span><span class="p">&gt;</span>学生列表<span class="p">&lt;/</span><span class="nt">h1</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">ul</span><span class="p">&gt;</span>
<span class="cp">{%</span><span class="k">for</span> <span class="nv">student</span> <span class="k">in</span> <span class="nv">students</span><span class="cp">%}</span>
<span class="p">&lt;</span><span class="nt">li</span><span class="p">&gt;</span>
  <span class="cp">{{</span><span class="nv">student.s_name</span><span class="cp">}}</span>
<span class="p">&lt;/</span><span class="nt">li</span><span class="p">&gt;</span>
<span class="cp">{%</span><span class="k">endfor</span><span class="cp">%}</span>
<span class="p">&lt;/</span><span class="nt">ul</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span>
</pre></div>


<p>定义detail.html模板</p>
<div class="codehilite"><pre><span></span><span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="p">&lt;</span><span class="nt">html</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">title</span><span class="p">&gt;</span>详情页<span class="p">&lt;/</span><span class="nt">title</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">h1</span><span class="p">&gt;</span>学生详情<span class="p">&lt;/</span><span class="nt">h1</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">ul</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">li</span><span class="p">&gt;</span>
  <span class="cp">{{</span><span class="nv">student.s_name</span><span class="cp">}}</span>
  <span class="cp">{{</span><span class="nv">student.s_gender</span><span class="cp">}}</span>
  <span class="cp">{{</span><span class="nv">student.s_content</span><span class="cp">}}</span>
<span class="p">&lt;/</span><span class="nt">li</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">ul</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span>
</pre></div>


<h5 id="使用模板">使用模板</h5>
<ul>
<li>定义视图</li>
</ul>
<div class="codehilite"><pre><span></span>def index(request):
    students = StudentInfo.objects.all()
    return render(request, &quot;index.html&quot;, {&quot;students&quot;:students})

def index_page(request, id):
    student = StudentInfo.objects.get(pk=id)
    return render(request, &quot;detail.html&quot;, {&quot;student&quot;:student})
</pre></div>


<ul>
<li>定义路由</li>
</ul>
<div class="codehilite"><pre><span></span>url(r&#39;index/$&#39;, class_view.index, name=&quot;index&quot;),
url(r&#39;index/(\d+)/$&#39;, class_view.index_page, name=&quot;index_page&quot;),
</pre></div>


<ul>
<li>运行项目</li>
<li>python manage.py runserver</li>
</ul>
<div class="toc">
<ul>
<li><a href="#django是个啥">Django是个啥</a></li>
<li><a href="#开发环境">开发环境</a></li>
<li><a href="#ubuntu系统和命令介绍">Ubuntu系统和命令介绍</a><ul>
<li><a href="#系统设置">系统设置</a></li>
<li><a href="#常用命令">常用命令</a></li>
</ul>
</li>
<li><a href="#bscs">BS/CS</a></li>
<li><a href="#mvcmvt">MVC/MVT</a></li>
<li><a href="#hellodjango项目">HelloDjango项目</a><ul>
<li><a href="#创建虚拟环境">创建虚拟环境</a></li>
<li><a href="#虚拟环境的优点">虚拟环境的优点</a><ul>
<li><a href="#linuxmacos-下">Linux/MacOS 下</a></li>
<li><a href="#windows-下">Windows 下：</a></li>
<li><a href="#虚拟环境使用方法">虚拟环境使用方法：</a></li>
</ul>
</li>
<li><a href="#安装django框架">安装Django框架</a></li>
<li><a href="#创建hellodjango项目">创建HelloDJango项目</a></li>
<li><a href="#django的项目结构">Django的项目结构</a></li>
<li><a href="#settingspy">settings.py</a></li>
<li><a href="#pycharm安装">Pycharm安装</a></li>
<li><a href="#创建数据库">创建数据库</a></li>
<li><a href="#创建视图">创建视图</a></li>
</ul>
</li>
<li><a href="#django请求流程">Django请求流程</a></li>
<li><a href="#设计一个小项目">设计一个小项目</a><ul>
<li><a href="#需求分析">需求分析</a></li>
<li><a href="#数据库配置">数据库配置</a></li>
<li><a href="#创建应用">创建应用</a></li>
<li><a href="#定义模型类">定义模型类</a></li>
<li><a href="#生成数据表">生成数据表</a></li>
<li><a href="#测试数据操作">测试数据操作</a></li>
<li><a href="#关联对象的操作">关联对象的操作</a></li>
<li><a href="#运行项目">运行项目</a></li>
</ul>
</li>
<li><a href="#项目主要部分">项目主要部分</a><ul>
<li><a href="#视图">视图</a></li>
<li><a href="#路由">路由</a></li>
<li><a href="#模板">模板</a><ul>
<li><a href="#定义模板">定义模板</a></li>
<li><a href="#使用模板">使用模板</a></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>

[pid: 28461|app: 0|req: 383/856] 113.88.65.32 () {48 vars in 865 bytes} [Mon Aug 13 14:38:47 2018] GET /post/3/ => generated 36926 bytes in 865 msecs (HTTP/1.1 200) 5 headers in 279 bytes (1 switches on core 0)
Not Found: /1.png
[pid: 28461|app: 0|req: 384/857] 113.88.65.32 () {44 vars in 749 bytes} [Mon Aug 13 14:38:48 2018] GET /1.png => generated 3357 bytes in 3 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 1)
Not Found: /django项目目录结构.png
[pid: 27717|app: 0|req: 164/858] 113.88.65.32 () {44 vars in 831 bytes} [Mon Aug 13 14:38:49 2018] GET /django%E9%A1%B9%E7%9B%AE%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84.png => generated 3462 bytes in 3 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 1)
Not Found: /注册app.png
[pid: 24647|app: 0|req: 126/859] 113.88.65.32 () {44 vars in 777 bytes} [Mon Aug 13 14:38:49 2018] GET /%E6%B3%A8%E5%86%8Capp.png => generated 3393 bytes in 3 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 0)
Not Found: /迁移文件.png
[pid: 24647|app: 0|req: 127/860] 113.88.65.32 () {44 vars in 795 bytes} [Mon Aug 13 14:38:49 2018] GET /%E8%BF%81%E7%A7%BB%E6%96%87%E4%BB%B6.png => generated 3414 bytes in 5 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 1)
[pid: 28461|app: 0|req: 385/861] 113.88.65.32 () {44 vars in 779 bytes} [Mon Aug 13 14:39:34 2018] GET /admin => generated 0 bytes in 0 msecs (HTTP/1.1 301) 3 headers in 112 bytes (1 switches on core 1)
[pid: 24647|app: 0|req: 128/862] 113.88.65.32 () {44 vars in 781 bytes} [Mon Aug 13 14:39:34 2018] GET /admin/ => generated 0 bytes in 1 msecs (HTTP/1.1 302) 7 headers in 265 bytes (1 switches on core 0)
[pid: 24647|app: 0|req: 129/863] 113.88.65.32 () {44 vars in 818 bytes} [Mon Aug 13 14:39:35 2018] GET /admin/login/?next=/admin/ => generated 1652 bytes in 12 msecs (HTTP/1.1 200) 7 headers in 381 bytes (1 switches on core 1)
[pid: 28461|app: 0|req: 386/864] 113.88.65.32 () {54 vars in 1077 bytes} [Mon Aug 13 14:39:43 2018] POST /admin/login/?next=/admin/ => generated 1783 bytes in 62 msecs (HTTP/1.1 200) 7 headers in 381 bytes (1 switches on core 1)
[pid: 28461|app: 0|req: 387/865] 113.88.65.32 () {54 vars in 1077 bytes} [Mon Aug 13 14:39:51 2018] POST /admin/login/?next=/admin/ => generated 1783 bytes in 72 msecs (HTTP/1.1 200) 7 headers in 381 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 27717|app: 0|req: 165/866] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug 13 14:39:54 2018] GET / => generated 11030 bytes in 26 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
[pid: 28461|app: 0|req: 388/867] 113.88.65.32 () {54 vars in 1077 bytes} [Mon Aug 13 14:40:03 2018] POST /admin/login/?next=/admin/ => generated 1783 bytes in 61 msecs (HTTP/1.1 200) 7 headers in 381 bytes (1 switches on core 0)
[pid: 28461|app: 0|req: 389/868] 113.88.65.32 () {54 vars in 1077 bytes} [Mon Aug 13 14:40:08 2018] POST /admin/login/?next=/admin/ => generated 1783 bytes in 46 msecs (HTTP/1.1 200) 7 headers in 381 bytes (1 switches on core 1)
[pid: 28461|app: 0|req: 390/869] 139.162.83.10 () {34 vars in 385 bytes} [Mon Aug 13 14:40:17 2018] GET / => generated 11030 bytes in 26 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 0)
DAMN ! worker 3 (pid: 27717) died, killed by signal 9 :( trying respawn ...
Respawned uWSGI worker 3 (new pid: 5899)
[pid: 28461|app: 0|req: 391/870] 113.88.65.32 () {54 vars in 1077 bytes} [Mon Aug 13 14:42:56 2018] POST /admin/login/?next=/admin/ => generated 1783 bytes in 47 msecs (HTTP/1.1 200) 7 headers in 381 bytes (1 switches on core 1)
[pid: 5899|app: 0|req: 166/871] 113.88.65.32 () {54 vars in 1077 bytes} [Mon Aug 13 14:43:08 2018] POST /admin/login/?next=/admin/ => generated 0 bytes in 959 msecs (HTTP/1.1 302) 9 headers in 531 bytes (1 switches on core 0)
[pid: 5899|app: 0|req: 167/872] 113.88.65.32 () {48 vars in 925 bytes} [Mon Aug 13 14:43:10 2018] GET /admin/ => generated 4814 bytes in 71 msecs (HTTP/1.1 200) 6 headers in 227 bytes (1 switches on core 1)
[pid: 5899|app: 0|req: 168/873] 113.88.65.32 () {46 vars in 895 bytes} [Mon Aug 13 14:43:13 2018] GET /admin/blog/post/ => generated 6621 bytes in 43 msecs (HTTP/1.1 200) 7 headers in 381 bytes (1 switches on core 0)
[pid: 5899|app: 0|req: 169/874] 113.88.65.32 () {44 vars in 782 bytes} [Mon Aug 13 14:43:14 2018] GET /admin/jsi18n/ => generated 7682 bytes in 5 msecs (HTTP/1.1 200) 4 headers in 115 bytes (1 switches on core 1)
[pid: 28461|app: 0|req: 392/875] 113.88.65.32 () {46 vars in 923 bytes} [Mon Aug 13 14:43:22 2018] GET /admin/blog/post/1/change/ => generated 11078 bytes in 70 msecs (HTTP/1.1 200) 7 headers in 382 bytes (1 switches on core 0)
[pid: 5899|app: 0|req: 170/876] 113.88.65.32 () {44 vars in 791 bytes} [Mon Aug 13 14:43:22 2018] GET /admin/jsi18n/ => generated 7682 bytes in 6 msecs (HTTP/1.1 200) 4 headers in 115 bytes (1 switches on core 0)
[pid: 28461|app: 0|req: 393/877] 113.88.65.32 () {46 vars in 895 bytes} [Mon Aug 13 14:43:26 2018] GET /admin/blog/post/ => generated 6621 bytes in 35 msecs (HTTP/1.1 200) 7 headers in 381 bytes (1 switches on core 1)
[pid: 5899|app: 0|req: 171/878] 113.88.65.32 () {46 vars in 913 bytes} [Mon Aug 13 14:43:28 2018] GET /admin/blog/post/add/ => generated 10452 bytes in 80 msecs (HTTP/1.1 200) 7 headers in 382 bytes (1 switches on core 1)
[pid: 5899|app: 0|req: 172/879] 113.88.65.32 () {44 vars in 786 bytes} [Mon Aug 13 14:43:28 2018] GET /admin/jsi18n/ => generated 7682 bytes in 7 msecs (HTTP/1.1 200) 4 headers in 115 bytes (1 switches on core 0)
[pid: 28461|app: 0|req: 394/880] 113.88.65.32 () {44 vars in 813 bytes} [Mon Aug 13 14:44:28 2018] GET / => generated 11030 bytes in 24 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 0)
[pid: 5899|app: 0|req: 173/881] 113.88.65.32 () {46 vars in 968 bytes} [Mon Aug 13 14:44:40 2018] GET /admin/blog/category/add/?_to_field=id&_popup=1 => generated 2889 bytes in 22 msecs (HTTP/1.1 200) 7 headers in 381 bytes (1 switches on core 0)
[pid: 5899|app: 0|req: 174/882] 113.88.65.32 () {44 vars in 812 bytes} [Mon Aug 13 14:44:40 2018] GET /admin/jsi18n/ => generated 7682 bytes in 4 msecs (HTTP/1.1 200) 4 headers in 115 bytes (1 switches on core 1)
[pid: 19403|app: 0|req: 173/883] 113.88.65.32 () {54 vars in 1254 bytes} [Mon Aug 13 14:44:44 2018] POST /admin/blog/category/add/?_to_field=id&_popup=1 => generated 376 bytes in 11 msecs (HTTP/1.1 200) 6 headers in 226 bytes (1 switches on core 1)
[pid: 28461|app: 0|req: 395/884] 113.88.65.32 () {46 vars in 958 bytes} [Mon Aug 13 14:44:49 2018] GET /admin/blog/tag/add/?_to_field=id&_popup=1 => generated 2864 bytes in 24 msecs (HTTP/1.1 200) 7 headers in 381 bytes (1 switches on core 1)
[pid: 5899|app: 0|req: 175/885] 113.88.65.32 () {44 vars in 807 bytes} [Mon Aug 13 14:44:50 2018] GET /admin/jsi18n/ => generated 7682 bytes in 4 msecs (HTTP/1.1 200) 4 headers in 115 bytes (1 switches on core 1)
[pid: 19403|app: 0|req: 174/886] 113.88.65.32 () {54 vars in 1239 bytes} [Mon Aug 13 14:44:54 2018] POST /admin/blog/tag/add/?_to_field=id&_popup=1 => generated 367 bytes in 12 msecs (HTTP/1.1 200) 6 headers in 226 bytes (1 switches on core 0)
[pid: 28461|app: 0|req: 396/887] 113.88.65.32 () {54 vars in 1179 bytes} [Mon Aug 13 14:45:17 2018] POST /admin/blog/post/add/ => generated 0 bytes in 29 msecs (HTTP/1.1 302) 8 headers in 595 bytes (1 switches on core 0)
[pid: 5899|app: 0|req: 176/888] 113.88.65.32 () {48 vars in 1252 bytes} [Mon Aug 13 14:45:17 2018] GET /admin/blog/post/add/ => generated 10738 bytes in 58 msecs (HTTP/1.1 200) 8 headers in 466 bytes (1 switches on core 1)
[pid: 5899|app: 0|req: 177/889] 113.88.65.32 () {44 vars in 786 bytes} [Mon Aug 13 14:45:18 2018] GET /admin/jsi18n/ => generated 7682 bytes in 4 msecs (HTTP/1.1 200) 4 headers in 115 bytes (1 switches on core 0)
[pid: 19403|app: 0|req: 175/890] 113.88.65.32 () {46 vars in 844 bytes} [Mon Aug 13 14:45:21 2018] GET / => generated 11494 bytes in 29 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 1)
```python
def say_hello():
    pass

```
------------------------------------------------------------------------------------------------------------------------
<div class="codehilite"><pre><span></span><span class="k">def</span> <span class="nf">say_hello</span><span class="p">():</span>
    <span class="k">pass</span>
</pre></div>
<div class="toc">
<ul></ul>
</div>

Building prefix dict from the default dictionary ...
Loading model from cache /tmp/jieba.cache
Loading model cost 0.709 seconds.
Prefix dict has been built succesfully.
[pid: 5899|app: 0|req: 178/891] 113.88.65.32 () {46 vars in 871 bytes} [Mon Aug 13 14:45:26 2018] GET /post/5/ => generated 11542 bytes in 805 msecs (HTTP/1.1 200) 5 headers in 279 bytes (1 switches on core 0)
[pid: 5899|app: 0|req: 179/892] 113.88.65.32 () {46 vars in 933 bytes} [Mon Aug 13 14:46:15 2018] GET /admin/blog/post/1/change/ => generated 11151 bytes in 55 msecs (HTTP/1.1 200) 7 headers in 382 bytes (1 switches on core 1)
[pid: 5899|app: 0|req: 180/893] 113.88.65.32 () {44 vars in 823 bytes} [Mon Aug 13 14:46:24 2018] GET / => generated 11494 bytes in 26 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 0)
111
------------------------------------------------------------------------------------------------------------------------
<p>111</p>
<div class="toc">
<ul></ul>
</div>

[pid: 5899|app: 0|req: 181/894] 113.88.65.32 () {46 vars in 881 bytes} [Mon Aug 13 14:46:27 2018] GET /post/4/ => generated 11283 bytes in 44 msecs (HTTP/1.1 200) 5 headers in 279 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 5899|app: 0|req: 182/895] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug 13 15:39:55 2018] GET / => generated 11494 bytes in 57 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 5899|app: 0|req: 183/896] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug 13 16:39:54 2018] GET / => generated 11494 bytes in 40 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
[pid: 24647|app: 0|req: 130/897] 66.102.7.61 () {42 vars in 715 bytes} [Mon Aug 13 17:30:44 2018] GET /admin/ => generated 0 bytes in 4 msecs (HTTP/1.1 302) 7 headers in 265 bytes (1 switches on core 0)
[pid: 5899|app: 0|req: 184/898] 66.102.7.59 () {42 vars in 752 bytes} [Mon Aug 13 17:30:45 2018] GET /admin/login/?next=/admin/ => generated 1652 bytes in 17 msecs (HTTP/1.1 200) 7 headers in 381 bytes (1 switches on core 1)
[pid: 5899|app: 0|req: 185/899] 66.102.7.61 () {42 vars in 715 bytes} [Mon Aug 13 17:30:45 2018] GET /admin/ => generated 0 bytes in 1 msecs (HTTP/1.1 302) 7 headers in 265 bytes (1 switches on core 0)
[pid: 19403|app: 0|req: 176/900] 66.102.7.57 () {42 vars in 752 bytes} [Mon Aug 13 17:30:45 2018] GET /admin/login/?next=/admin/ => generated 1652 bytes in 17 msecs (HTTP/1.1 200) 7 headers in 381 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 5899|app: 0|req: 186/901] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug 13 17:40:00 2018] GET / => generated 11494 bytes in 50 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 5899|app: 0|req: 187/902] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug 13 18:39:56 2018] GET / => generated 11494 bytes in 45 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 5899|app: 0|req: 188/903] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug 13 19:39:59 2018] GET / => generated 11494 bytes in 79 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
DAMN ! worker 4 (pid: 24647) died, killed by signal 9 :( trying respawn ...
Respawned uWSGI worker 4 (new pid: 8843)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 19403|app: 0|req: 177/904] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug 13 20:39:54 2018] GET / => generated 11494 bytes in 25 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 8843|app: 0|req: 131/905] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug 13 21:39:53 2018] GET / => generated 11494 bytes in 1732 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 8843|app: 0|req: 132/906] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug 13 22:39:54 2018] GET / => generated 11494 bytes in 25 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 8843|app: 0|req: 133/907] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug 13 23:40:00 2018] GET / => generated 11494 bytes in 27 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 8843|app: 0|req: 134/908] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug 14 00:39:52 2018] GET / => generated 11494 bytes in 26 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 397/909] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug 14 01:39:51 2018] GET / => generated 11494 bytes in 35 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 8843|app: 0|req: 135/910] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug 14 02:39:53 2018] GET / => generated 11494 bytes in 24 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
[pid: 8843|app: 0|req: 136/911] 199.102.186.194 () {26 vars in 275 bytes} [Tue Aug 14 02:58:07 2018] GET / => generated 11494 bytes in 37 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 19403|app: 0|req: 178/912] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug 14 03:39:54 2018] GET / => generated 11494 bytes in 46 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 28461|app: 0|req: 398/913] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug 14 04:39:52 2018] GET / => generated 11494 bytes in 54 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 5899|app: 0|req: 189/914] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug 14 05:39:53 2018] GET / => generated 11494 bytes in 64 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 8843|app: 0|req: 137/915] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug 14 06:39:51 2018] GET / => generated 11494 bytes in 33 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 8843|app: 0|req: 138/916] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug 14 07:39:51 2018] GET / => generated 11494 bytes in 50 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
```python
def say_hello():
    pass

```
------------------------------------------------------------------------------------------------------------------------
<div class="codehilite"><pre><span></span><span class="k">def</span> <span class="nf">say_hello</span><span class="p">():</span>
    <span class="k">pass</span>
</pre></div>
<div class="toc">
<ul></ul>
</div>

Building prefix dict from the default dictionary ...
Loading model from cache /tmp/jieba.cache
Loading model cost 0.839 seconds.
Prefix dict has been built succesfully.
[pid: 8843|app: 0|req: 139/917] 163.125.177.168 () {46 vars in 883 bytes} [Tue Aug 14 08:17:52 2018] GET /post/5/ => generated 11542 bytes in 996 msecs (HTTP/1.1 200) 5 headers in 279 bytes (1 switches on core 0)
Not Found: /favicon.ico
[pid: 8843|app: 0|req: 140/918] 163.125.177.168 () {44 vars in 817 bytes} [Tue Aug 14 08:17:53 2018] GET /favicon.ico => generated 3375 bytes in 3 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 1)
DAMN ! worker 1 (pid: 28461) died, killed by signal 9 :( trying respawn ...
Respawned uWSGI worker 1 (new pid: 15682)
```python
def say_hello():
    pass

```
------------------------------------------------------------------------------------------------------------------------
<div class="codehilite"><pre><span></span><span class="k">def</span> <span class="nf">say_hello</span><span class="p">():</span>
    <span class="k">pass</span>
</pre></div>
<div class="toc">
<ul></ul>
</div>

[pid: 19403|app: 0|req: 179/919] 163.125.177.168 () {46 vars in 883 bytes} [Tue Aug 14 08:17:57 2018] GET /post/5/ => generated 11542 bytes in 388 msecs (HTTP/1.1 200) 5 headers in 279 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 15682|app: 0|req: 399/920] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug 14 08:39:52 2018] GET / => generated 11494 bytes in 1123 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
```python
def say_hello():
    pass

```
------------------------------------------------------------------------------------------------------------------------
<div class="codehilite"><pre><span></span><span class="k">def</span> <span class="nf">say_hello</span><span class="p">():</span>
    <span class="k">pass</span>
</pre></div>
<div class="toc">
<ul></ul>
</div>

Building prefix dict from the default dictionary ...
Loading model from cache /tmp/jieba.cache
Loading model cost 0.800 seconds.
Prefix dict has been built succesfully.
[pid: 15682|app: 0|req: 400/921] 113.88.67.15 () {46 vars in 881 bytes} [Tue Aug 14 08:57:38 2018] GET /post/5/ => generated 11542 bytes in 921 msecs (HTTP/1.1 200) 5 headers in 279 bytes (1 switches on core 1)
```python
def say_hello():
    pass

```
------------------------------------------------------------------------------------------------------------------------
<div class="codehilite"><pre><span></span><span class="k">def</span> <span class="nf">say_hello</span><span class="p">():</span>
    <span class="k">pass</span>
</pre></div>
<div class="toc">
<ul></ul>
</div>

[pid: 8843|app: 0|req: 141/922] 113.88.67.15 () {46 vars in 881 bytes} [Tue Aug 14 09:09:58 2018] GET /post/5/ => generated 11542 bytes in 55 msecs (HTTP/1.1 200) 5 headers in 279 bytes (1 switches on core 0)
[pid: 19403|app: 0|req: 180/923] 113.88.67.15 () {46 vars in 854 bytes} [Tue Aug 14 09:21:43 2018] GET / => generated 11494 bytes in 39 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 1)
111
------------------------------------------------------------------------------------------------------------------------
<p>111</p>
<div class="toc">
<ul></ul>
</div>

[pid: 15682|app: 0|req: 401/924] 113.88.67.15 () {46 vars in 881 bytes} [Tue Aug 14 09:21:44 2018] GET /post/4/ => generated 11283 bytes in 49 msecs (HTTP/1.1 200) 5 headers in 279 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 8843|app: 0|req: 142/925] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug 14 09:39:53 2018] GET / => generated 11494 bytes in 35 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 15682|app: 0|req: 402/926] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug 14 10:39:51 2018] GET / => generated 11494 bytes in 26 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 8843|app: 0|req: 143/927] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug 14 11:39:53 2018] GET / => generated 11494 bytes in 26 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 19403|app: 0|req: 181/928] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug 14 12:39:54 2018] GET / => generated 11494 bytes in 27 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
```python
def say_hello():
    pass

```
------------------------------------------------------------------------------------------------------------------------
<div class="codehilite"><pre><span></span><span class="k">def</span> <span class="nf">say_hello</span><span class="p">():</span>
    <span class="k">pass</span>
</pre></div>
<div class="toc">
<ul></ul>
</div>

[pid: 15682|app: 0|req: 403/929] 113.88.67.15 () {46 vars in 881 bytes} [Tue Aug 14 13:22:48 2018] GET /post/5/ => generated 11542 bytes in 90 msecs (HTTP/1.1 200) 5 headers in 279 bytes (1 switches on core 0)
[pid: 15682|app: 0|req: 404/930] 113.88.67.15 () {46 vars in 904 bytes} [Tue Aug 14 13:22:50 2018] GET /archive/2018/8/ => generated 8191 bytes in 23 msecs (HTTP/1.1 200) 3 headers in 110 bytes (1 switches on core 1)
[pid: 8843|app: 0|req: 144/931] 113.88.67.15 () {46 vars in 912 bytes} [Tue Aug 14 13:22:53 2018] GET /archive/2018/7/ => generated 8191 bytes in 20 msecs (HTTP/1.1 200) 3 headers in 110 bytes (1 switches on core 1)
[pid: 15682|app: 0|req: 405/932] 113.88.67.15 () {46 vars in 912 bytes} [Tue Aug 14 13:22:55 2018] GET /archive/2018/7/ => generated 8191 bytes in 14 msecs (HTTP/1.1 200) 3 headers in 110 bytes (1 switches on core 0)
[pid: 8843|app: 0|req: 145/933] 113.88.67.15 () {46 vars in 882 bytes} [Tue Aug 14 13:22:57 2018] GET / => generated 11494 bytes in 40 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 0)
[pid: 15682|app: 0|req: 406/934] 113.88.67.15 () {46 vars in 897 bytes} [Tue Aug 14 13:22:59 2018] GET /archive/2018/8/ => generated 8191 bytes in 18 msecs (HTTP/1.1 200) 3 headers in 110 bytes (1 switches on core 1)
[pid: 8843|app: 0|req: 146/935] 113.88.67.15 () {46 vars in 882 bytes} [Tue Aug 14 13:23:01 2018] GET / => generated 11494 bytes in 48 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 1)
[pid: 15682|app: 0|req: 407/936] 113.88.67.15 () {46 vars in 897 bytes} [Tue Aug 14 13:23:03 2018] GET /archive/2018/7/ => generated 8191 bytes in 19 msecs (HTTP/1.1 200) 3 headers in 110 bytes (1 switches on core 0)
[pid: 8843|app: 0|req: 147/937] 113.88.67.15 () {46 vars in 882 bytes} [Tue Aug 14 13:23:05 2018] GET / => generated 11494 bytes in 24 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 0)
[pid: 15682|app: 0|req: 408/938] 113.88.67.15 () {46 vars in 889 bytes} [Tue Aug 14 13:23:18 2018] GET /category/5/ => generated 9219 bytes in 18 msecs (HTTP/1.1 200) 3 headers in 110 bytes (1 switches on core 1)
[pid: 15682|app: 0|req: 409/939] 113.88.67.15 () {46 vars in 879 bytes} [Tue Aug 14 13:23:22 2018] GET /tag/1/ => generated 11323 bytes in 24 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 0)
# 号
# 号
afadfjl

```python
def say_hello():
    pass
```


adf
adfdfadfdsafaf

adfad

adf
adf
adf
adfadf
adfadfadfad


adfadf
a
# hello
------------------------------------------------------------------------------------------------------------------------
<h1 id="号">号</h1>
<h1 id="号_1">号</h1>
<p>afadfjl</p>
<div class="codehilite"><pre><span></span><span class="k">def</span> <span class="nf">say_hello</span><span class="p">():</span>
    <span class="k">pass</span>
</pre></div>


<p>adf
adfdfadfdsafaf</p>
<p>adfad</p>
<p>adf
adf
adf
adfadf
adfadfadfad</p>
<p>adfadf
a</p>
<h1 id="hello">hello</h1>
<div class="toc">
<ul>
<li><a href="#号">号</a></li>
<li><a href="#号_1">号</a></li>
<li><a href="#hello">hello</a></li>
</ul>
</div>

[pid: 15682|app: 0|req: 410/940] 113.88.67.15 () {46 vars in 887 bytes} [Tue Aug 14 13:23:27 2018] GET /post/2/ => generated 11743 bytes in 347 msecs (HTTP/1.1 200) 5 headers in 279 bytes (1 switches on core 1)
<p>[TOC]</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">def Hello():
    pass</pre>
<p>&nbsp;</p>
------------------------------------------------------------------------------------------------------------------------
<p>[TOC]</p>

<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">def Hello():
    pass</pre>

<p>&nbsp;</p>
<div class="toc">
<ul></ul>
</div>

[pid: 15682|app: 0|req: 411/941] 113.88.67.15 () {46 vars in 887 bytes} [Tue Aug 14 13:23:32 2018] GET /post/1/ => generated 11420 bytes in 42 msecs (HTTP/1.1 200) 5 headers in 279 bytes (1 switches on core 0)
```python
def say_hello():
    pass

```
------------------------------------------------------------------------------------------------------------------------
<div class="codehilite"><pre><span></span><span class="k">def</span> <span class="nf">say_hello</span><span class="p">():</span>
    <span class="k">pass</span>
</pre></div>
<div class="toc">
<ul></ul>
</div>

[pid: 15682|app: 0|req: 412/942] 113.88.67.15 () {46 vars in 887 bytes} [Tue Aug 14 13:23:39 2018] GET /post/5/ => generated 11542 bytes in 49 msecs (HTTP/1.1 200) 5 headers in 279 bytes (1 switches on core 1)
[pid: 15682|app: 0|req: 413/943] 113.88.67.15 () {46 vars in 873 bytes} [Tue Aug 14 13:23:45 2018] GET / => generated 11494 bytes in 25 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 0)
[pid: 15682|app: 0|req: 414/944] 113.88.67.15 () {46 vars in 897 bytes} [Tue Aug 14 13:31:59 2018] GET /archive/2018/8/ => generated 8191 bytes in 22 msecs (HTTP/1.1 200) 3 headers in 110 bytes (1 switches on core 1)
[pid: 15682|app: 0|req: 415/945] 113.88.67.15 () {46 vars in 912 bytes} [Tue Aug 14 13:32:02 2018] GET /archive/2018/8/ => generated 8191 bytes in 37 msecs (HTTP/1.1 200) 3 headers in 110 bytes (1 switches on core 0)
[pid: 19403|app: 0|req: 182/946] 113.88.67.15 () {46 vars in 912 bytes} [Tue Aug 14 13:32:02 2018] GET /archive/2018/8/ => generated 8191 bytes in 18 msecs (HTTP/1.1 200) 3 headers in 110 bytes (1 switches on core 1)
[pid: 15682|app: 0|req: 416/947] 113.88.67.15 () {46 vars in 912 bytes} [Tue Aug 14 13:32:04 2018] GET /archive/2018/7/ => generated 8191 bytes in 15 msecs (HTTP/1.1 200) 3 headers in 110 bytes (1 switches on core 1)
[pid: 8843|app: 0|req: 148/948] 113.88.67.15 () {46 vars in 912 bytes} [Tue Aug 14 13:32:05 2018] GET /archive/2018/8/ => generated 8191 bytes in 15 msecs (HTTP/1.1 200) 3 headers in 110 bytes (1 switches on core 1)
[pid: 8843|app: 0|req: 149/949] 113.88.67.15 () {46 vars in 912 bytes} [Tue Aug 14 13:32:06 2018] GET /archive/2018/8/ => generated 8191 bytes in 19 msecs (HTTP/1.1 200) 3 headers in 110 bytes (1 switches on core 0)
[pid: 15682|app: 0|req: 417/950] 113.88.67.15 () {46 vars in 912 bytes} [Tue Aug 14 13:32:07 2018] GET /archive/2018/8/ => generated 8191 bytes in 16 msecs (HTTP/1.1 200) 3 headers in 110 bytes (1 switches on core 0)
DAMN ! worker 3 (pid: 5899) died, killed by signal 9 :( trying respawn ...
Respawned uWSGI worker 3 (new pid: 19696)
*** Starting uWSGI 2.0.17 (64bit) on [Tue Aug 14 13:39:24 2018] ***
compiled with version: 4.8.2 20131212 (Red Hat 4.8.2-8) on 09 April 2018 06:14:45
os: Linux-2.6.32-042stab127.2 #1 SMP Thu Jan 4 16:41:44 MSK 2018
nodename: localhost.localdomain
machine: x86_64
clock source: unix
pcre jit disabled
detected number of CPU cores: 1
current working directory: /usr/Even/projects/blogproject
writing pidfile to uwsgi.pid
detected binary path: /usr/Even/.virtualenvs/django/bin/uwsgi
chdir() to /usr/Even/projects/blogproject
your processes number limit is 1024
your memory page size is 4096 bytes
detected max file descriptor number: 1024
lock engine: pthread robust mutexes
thunder lock: disabled (you can enable it with --thunder-lock)
probably another instance of uWSGI is running on the same address (45.62.126.57:8080).
bind(): Address already in use [core/socket.c line 769]
[pid: 15682|app: 0|req: 418/951] 113.88.67.15 () {48 vars in 943 bytes} [Tue Aug 14 13:39:34 2018] GET /archive/2018/8/ => generated 8191 bytes in 16 msecs (HTTP/1.1 200) 3 headers in 110 bytes (1 switches on core 1)
[pid: 19696|app: 0|req: 190/952] 113.88.67.15 () {46 vars in 912 bytes} [Tue Aug 14 13:39:36 2018] GET /archive/2018/8/ => generated 8191 bytes in 963 msecs (HTTP/1.1 200) 3 headers in 110 bytes (1 switches on core 0)
[pid: 19696|app: 0|req: 191/953] 113.88.67.15 () {46 vars in 912 bytes} [Tue Aug 14 13:39:39 2018] GET /archive/2018/7/ => generated 8191 bytes in 15 msecs (HTTP/1.1 200) 3 headers in 110 bytes (1 switches on core 1)
[pid: 15682|app: 0|req: 419/954] 113.88.67.15 () {46 vars in 882 bytes} [Tue Aug 14 13:39:41 2018] GET / => generated 11494 bytes in 25 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 15682|app: 0|req: 420/955] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug 14 13:39:52 2018] GET / => generated 11494 bytes in 25 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
[pid: 19696|app: 0|req: 192/956] 113.88.67.15 () {46 vars in 897 bytes} [Tue Aug 14 13:40:00 2018] GET /archive/2018/8/ => generated 8191 bytes in 13 msecs (HTTP/1.1 200) 3 headers in 110 bytes (1 switches on core 0)
[pid: 19696|app: 0|req: 193/957] 113.88.67.15 () {46 vars in 912 bytes} [Tue Aug 14 13:40:01 2018] GET /archive/2018/7/ => generated 8191 bytes in 14 msecs (HTTP/1.1 200) 3 headers in 110 bytes (1 switches on core 1)
[pid: 15682|app: 0|req: 421/958] 113.88.67.15 () {46 vars in 912 bytes} [Tue Aug 14 13:40:02 2018] GET /archive/2018/8/ => generated 8191 bytes in 18 msecs (HTTP/1.1 200) 3 headers in 110 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
[pid: 19696|app: 0|req: 194/959] 113.88.67.15 () {46 vars in 884 bytes} [Tue Aug 14 13:43:29 2018] GET /archive/2018/7/ => generated 8191 bytes in 16 msecs (HTTP/1.1 200) 3 headers in 110 bytes (1 switches on core 0)
DAMN ! worker 4 (pid: 8843) died, killed by signal 9 :( trying respawn ...
Respawned uWSGI worker 4 (new pid: 19867)
DAMN ! worker 1 (pid: 15682) died, killed by signal 9 :( trying respawn ...
Respawned uWSGI worker 1 (new pid: 19918)
DAMN ! worker 2 (pid: 19403) died, killed by signal 9 :( trying respawn ...
Respawned uWSGI worker 2 (new pid: 19966)
DAMN ! worker 3 (pid: 19696) died, killed by signal 9 :( trying respawn ...
Respawned uWSGI worker 3 (new pid: 19990)
DAMN ! worker 4 (pid: 19867) died, killed by signal 9 :( trying respawn ...
Respawned uWSGI worker 4 (new pid: 20014)
DAMN ! worker 1 (pid: 19918) died, killed by signal 9 :( trying respawn ...
Respawned uWSGI worker 1 (new pid: 20038)
Tue Aug 14 13:44:42 2018 - uWSGI worker 2 screams: UAAAAAAH my master disconnected: i will kill myself !!!
Tue Aug 14 13:44:42 2018 - uWSGI worker 3 screams: UAAAAAAH my master disconnected: i will kill myself !!!
Tue Aug 14 13:44:42 2018 - uWSGI worker 4 screams: UAAAAAAH my master disconnected: i will kill myself !!!
Tue Aug 14 13:44:42 2018 - uWSGI worker 3 screams: UAAAAAAH my master disconnected: i will kill myself !!!
Tue Aug 14 13:44:42 2018 - uWSGI worker 4 screams: UAAAAAAH my master disconnected: i will kill myself !!!
Tue Aug 14 13:44:42 2018 - uWSGI worker 1 screams: UAAAAAAH my master disconnected: i will kill myself !!!
Tue Aug 14 13:44:42 2018 - uWSGI worker 2 screams: UAAAAAAH my master disconnected: i will kill myself !!!
Tue Aug 14 13:44:42 2018 - uWSGI worker 1 screams: UAAAAAAH my master disconnected: i will kill myself !!!
*** Starting uWSGI 2.0.17 (64bit) on [Tue Aug 14 13:44:56 2018] ***
compiled with version: 4.8.2 20131212 (Red Hat 4.8.2-8) on 09 April 2018 06:14:45
os: Linux-2.6.32-042stab127.2 #1 SMP Thu Jan 4 16:41:44 MSK 2018
nodename: localhost.localdomain
machine: x86_64
clock source: unix
pcre jit disabled
detected number of CPU cores: 1
current working directory: /usr/Even/projects/blogproject
writing pidfile to uwsgi.pid
detected binary path: /usr/Even/.virtualenvs/django/bin/uwsgi
chdir() to /usr/Even/projects/blogproject
your processes number limit is 1024
your memory page size is 4096 bytes
detected max file descriptor number: 1024
lock engine: pthread robust mutexes
thunder lock: disabled (you can enable it with --thunder-lock)
uwsgi socket 0 bound to TCP address 45.62.126.57:8080 fd 3
Python version: 3.6.1 (default, Apr 14 2017, 22:28:18)  [GCC 4.4.7 20120313 (Red Hat 4.4.7-17)]
Python main interpreter initialized at 0x2011290
python threads support enabled
your server socket listen backlog is limited to 100 connections
your mercy for graceful operations on workers is 60 seconds
mapped 416880 bytes (407 KB) for 8 cores
*** Operational MODE: preforking+threaded ***
WSGI app 0 (mountpoint='') ready in 1 seconds on interpreter 0x2011290 pid: 20090 (default app)
*** uWSGI is running in multiple interpreter mode ***
spawned uWSGI master process (pid: 20090)
spawned uWSGI worker 1 (pid: 20112, cores: 2)
spawned uWSGI worker 2 (pid: 20113, cores: 2)
spawned uWSGI worker 3 (pid: 20114, cores: 2)
spawned uWSGI worker 4 (pid: 20115, cores: 2)
/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/fields/__init__.py:1393: RuntimeWarning: DateTimeField Post.create_time received a naive datetime (2018-07-01 00:00:00) while time zone support is active.
  RuntimeWarning)
/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/fields/__init__.py:1393: RuntimeWarning: DateTimeField Post.create_time received a naive datetime (2018-08-01 00:00:00) while time zone support is active.
  RuntimeWarning)
[pid: 20112|app: 0|req: 1/1] 113.88.67.15 () {46 vars in 884 bytes} [Tue Aug 14 13:45:02 2018] GET /archive/2018/7/ => generated 10227 bytes in 912 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 0)
/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/db/models/fields/__init__.py:1393: RuntimeWarning: DateTimeField Post.create_time received a naive datetime (2018-09-01 00:00:00) while time zone support is active.
  RuntimeWarning)
[pid: 20112|app: 0|req: 2/2] 113.88.67.15 () {46 vars in 912 bytes} [Tue Aug 14 13:45:08 2018] GET /archive/2018/8/ => generated 11278 bytes in 33 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 1)
[pid: 20112|app: 0|req: 3/3] 113.88.67.15 () {46 vars in 912 bytes} [Tue Aug 14 13:45:11 2018] GET /archive/2018/7/ => generated 10227 bytes in 19 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 0)
[pid: 20112|app: 0|req: 4/4] 113.88.67.15 () {46 vars in 912 bytes} [Tue Aug 14 13:45:52 2018] GET /archive/2018/8/ => generated 11278 bytes in 23 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 1)
111
------------------------------------------------------------------------------------------------------------------------
<p>111</p>
<div class="toc">
<ul></ul>
</div>

Building prefix dict from the default dictionary ...
Loading model from cache /tmp/jieba.cache
Loading model cost 0.880 seconds.
Prefix dict has been built succesfully.
[pid: 20112|app: 0|req: 5/5] 113.88.67.15 () {46 vars in 896 bytes} [Tue Aug 14 13:46:10 2018] GET /post/4/ => generated 11283 bytes in 958 msecs (HTTP/1.1 200) 5 headers in 279 bytes (1 switches on core 0)
```python
def say_hello():
    pass

```
------------------------------------------------------------------------------------------------------------------------
<div class="codehilite"><pre><span></span><span class="k">def</span> <span class="nf">say_hello</span><span class="p">():</span>
    <span class="k">pass</span>
</pre></div>
<div class="toc">
<ul></ul>
</div>

[pid: 20112|app: 0|req: 6/6] 113.88.67.15 () {46 vars in 896 bytes} [Tue Aug 14 13:46:16 2018] GET /post/5/ => generated 11542 bytes in 76 msecs (HTTP/1.1 200) 5 headers in 279 bytes (1 switches on core 1)
[pid: 20112|app: 0|req: 7/7] 113.88.67.15 () {46 vars in 874 bytes} [Tue Aug 14 13:46:30 2018] GET / => generated 11494 bytes in 28 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 0)
```python
def say_hello():
    pass

```
------------------------------------------------------------------------------------------------------------------------
<div class="codehilite"><pre><span></span><span class="k">def</span> <span class="nf">say_hello</span><span class="p">():</span>
    <span class="k">pass</span>
</pre></div>
<div class="toc">
<ul></ul>
</div>

[pid: 20112|app: 0|req: 8/8] 113.88.67.15 () {46 vars in 881 bytes} [Tue Aug 14 13:46:35 2018] GET /post/5/ => generated 11542 bytes in 284 msecs (HTTP/1.1 200) 5 headers in 279 bytes (1 switches on core 1)
[pid: 20112|app: 0|req: 9/9] 62.4.14.206 () {34 vars in 507 bytes} [Tue Aug 14 13:46:52 2018] GET / => generated 11494 bytes in 24 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 10/10] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug 14 14:39:53 2018] GET / => generated 11494 bytes in 27 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 11/11] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug 14 15:40:00 2018] GET / => generated 11494 bytes in 27 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 12/12] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug 14 16:40:05 2018] GET / => generated 11494 bytes in 26 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 13/13] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug 14 17:40:02 2018] GET / => generated 11494 bytes in 25 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20115|app: 0|req: 1/14] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug 14 18:40:02 2018] GET / => generated 11494 bytes in 997 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 14/15] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug 14 19:40:07 2018] GET / => generated 11494 bytes in 66 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 15/16] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug 14 20:40:01 2018] GET / => generated 11494 bytes in 41 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
Not Found: /favicon.ico
[pid: 20112|app: 0|req: 16/17] 66.102.6.193 () {38 vars in 591 bytes} [Tue Aug 14 21:38:35 2018] GET /favicon.ico => generated 3375 bytes in 6 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 1/18] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug 14 21:39:59 2018] GET / => generated 11494 bytes in 956 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 17/19] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug 14 22:40:00 2018] GET / => generated 11494 bytes in 32 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
[pid: 20112|app: 0|req: 18/20] 198.108.66.32 () {34 vars in 389 bytes} [Tue Aug 14 23:02:01 2018] GET / => generated 11494 bytes in 33 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 19/21] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug 14 23:40:05 2018] GET / => generated 11494 bytes in 47 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20114|app: 0|req: 1/22] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug 15 00:39:58 2018] GET / => generated 11494 bytes in 1082 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 20/23] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug 15 01:39:58 2018] GET / => generated 11494 bytes in 27 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 21/24] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug 15 02:39:59 2018] GET / => generated 11494 bytes in 24 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 2/25] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug 15 03:39:58 2018] GET / => generated 11494 bytes in 30 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
[pid: 20113|app: 0|req: 3/26] 168.1.128.62 () {30 vars in 396 bytes} [Wed Aug 15 04:10:38 2018] GET / => generated 11494 bytes in 57 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 22/27] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug 15 04:40:01 2018] GET / => generated 11494 bytes in 65 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 4/28] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug 15 05:39:58 2018] GET / => generated 11494 bytes in 24 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20115|app: 0|req: 2/29] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug 15 06:39:59 2018] GET / => generated 11494 bytes in 53 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
[pid: 20114|app: 0|req: 2/30] 66.102.6.193 () {38 vars in 637 bytes} [Wed Aug 15 07:11:16 2018] GET /admin/ => generated 0 bytes in 16 msecs (HTTP/1.1 302) 7 headers in 265 bytes (1 switches on core 1)
[pid: 20112|app: 0|req: 23/31] 66.102.6.197 () {38 vars in 674 bytes} [Wed Aug 15 07:11:16 2018] GET /admin/login/?next=/admin/ => generated 1652 bytes in 64 msecs (HTTP/1.1 200) 7 headers in 381 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20114|app: 0|req: 3/32] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug 15 07:39:57 2018] GET / => generated 11494 bytes in 57 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 24/33] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug 15 08:39:55 2018] GET / => generated 11494 bytes in 31 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20115|app: 0|req: 3/34] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug 15 09:39:59 2018] GET / => generated 11494 bytes in 45 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20115|app: 0|req: 4/35] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug 15 10:40:02 2018] GET / => generated 11494 bytes in 50 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 25/36] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug 15 11:39:54 2018] GET / => generated 11494 bytes in 30 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20114|app: 0|req: 4/37] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug 15 12:39:55 2018] GET / => generated 11494 bytes in 54 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 5/38] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug 15 13:40:00 2018] GET / => generated 11494 bytes in 28 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20114|app: 0|req: 5/39] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug 15 14:39:56 2018] GET / => generated 11494 bytes in 39 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
[pid: 20112|app: 0|req: 26/40] 45.114.85.222 () {26 vars in 273 bytes} [Wed Aug 15 14:52:34 2018] GET / => generated 11494 bytes in 30 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 6/41] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug 15 15:39:57 2018] GET / => generated 11494 bytes in 55 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 7937 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 7/42] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug 15 16:39:58 2018] GET / => generated 11494 bytes in 26 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20114|app: 0|req: 6/43] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug 15 17:39:59 2018] GET / => generated 11494 bytes in 58 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
Not Found: /manager/html
[pid: 20113|app: 0|req: 8/44] 211.54.55.7 () {36 vars in 510 bytes} [Wed Aug 15 18:35:38 2018] GET /manager/html => generated 3375 bytes in 7 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 27/45] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug 15 18:40:00 2018] GET / => generated 11494 bytes in 57 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20114|app: 0|req: 7/46] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug 15 19:39:57 2018] GET / => generated 11494 bytes in 47 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
[pid: 20112|app: 0|req: 28/47] 217.156.106.30 () {26 vars in 274 bytes} [Wed Aug 15 19:44:50 2018] GET / => generated 11494 bytes in 38 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 29/48] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug 15 20:39:57 2018] GET / => generated 11494 bytes in 25 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20115|app: 0|req: 5/49] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug 15 21:39:57 2018] GET / => generated 11494 bytes in 36 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
[pid: 20115|app: 0|req: 6/50] 58.182.85.222 () {26 vars in 273 bytes} [Wed Aug 15 22:23:12 2018] GET / => generated 11494 bytes in 30 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20114|app: 0|req: 8/51] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug 15 22:39:58 2018] GET / => generated 11494 bytes in 23 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 9/52] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug 15 23:39:55 2018] GET / => generated 11494 bytes in 24 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
[pid: 20112|app: 0|req: 30/53] 198.108.66.192 () {34 vars in 389 bytes} [Wed Aug 15 23:45:56 2018] GET / => generated 11494 bytes in 26 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 31/54] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug 16 00:39:55 2018] GET / => generated 11494 bytes in 31 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 10/55] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug 16 01:39:55 2018] GET / => generated 11494 bytes in 25 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 11/56] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug 16 02:39:56 2018] GET / => generated 11494 bytes in 23 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 32/57] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug 16 03:39:58 2018] GET / => generated 11494 bytes in 25 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
[pid: 20112|app: 0|req: 33/58] 139.162.83.10 () {34 vars in 385 bytes} [Thu Aug 16 04:37:55 2018] GET / => generated 11494 bytes in 42 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 34/59] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug 16 04:39:59 2018] GET / => generated 11494 bytes in 25 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20114|app: 0|req: 9/60] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug 16 05:39:58 2018] GET / => generated 11494 bytes in 59 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
Not Found: /manager/html
[pid: 20115|app: 0|req: 7/61] 211.54.55.7 () {36 vars in 510 bytes} [Thu Aug 16 06:14:29 2018] GET /manager/html => generated 3375 bytes in 4 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 35/62] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug 16 06:39:57 2018] GET / => generated 11494 bytes in 30 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 36/63] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug 16 07:39:55 2018] GET / => generated 11494 bytes in 68 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20114|app: 0|req: 10/64] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug 16 08:39:58 2018] GET / => generated 11494 bytes in 33 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
[pid: 20112|app: 0|req: 37/65] 66.102.6.197 () {38 vars in 637 bytes} [Thu Aug 16 08:55:19 2018] GET /admin/ => generated 0 bytes in 2 msecs (HTTP/1.1 302) 7 headers in 265 bytes (1 switches on core 0)
[pid: 20112|app: 0|req: 38/66] 66.102.6.193 () {38 vars in 674 bytes} [Thu Aug 16 08:55:19 2018] GET /admin/login/?next=/admin/ => generated 1652 bytes in 20 msecs (HTTP/1.1 200) 7 headers in 381 bytes (1 switches on core 1)
Not Found: /favicon.ico
[pid: 20112|app: 0|req: 39/67] 66.102.6.197 () {38 vars in 591 bytes} [Thu Aug 16 08:55:19 2018] GET /favicon.ico => generated 3375 bytes in 3 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 0)
[pid: 20112|app: 0|req: 40/68] 198.108.66.192 () {34 vars in 390 bytes} [Thu Aug 16 09:15:25 2018] GET / => generated 11494 bytes in 23 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 41/69] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug 16 09:39:57 2018] GET / => generated 11494 bytes in 25 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
[pid: 20112|app: 0|req: 42/70] 74.119.249.82 () {26 vars in 273 bytes} [Thu Aug 16 09:54:40 2018] GET / => generated 11494 bytes in 37 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 43/71] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug 16 10:39:54 2018] GET / => generated 11494 bytes in 24 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 44/72] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug 16 11:39:55 2018] GET / => generated 11494 bytes in 22 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 12/73] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug 16 12:39:57 2018] GET / => generated 11494 bytes in 31 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20115|app: 0|req: 8/74] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug 16 13:39:57 2018] GET / => generated 11494 bytes in 46 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 45/75] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug 16 14:39:54 2018] GET / => generated 11494 bytes in 29 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 46/76] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug 16 15:39:58 2018] GET / => generated 11494 bytes in 44 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 47/77] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug 16 16:39:56 2018] GET / => generated 11494 bytes in 32 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 48/78] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug 16 17:39:56 2018] GET / => generated 11494 bytes in 57 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 49/79] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug 16 18:39:55 2018] GET / => generated 11494 bytes in 22 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 50/80] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug 16 19:39:55 2018] GET / => generated 11494 bytes in 23 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 51/81] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug 16 20:39:56 2018] GET / => generated 11494 bytes in 26 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 52/82] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug 16 21:39:53 2018] GET / => generated 11494 bytes in 23 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 53/83] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug 16 22:39:57 2018] GET / => generated 11494 bytes in 23 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20115|app: 0|req: 9/84] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug 16 23:39:52 2018] GET / => generated 11494 bytes in 29 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
[pid: 20115|app: 0|req: 10/85] 84.131.25.133 () {26 vars in 273 bytes} [Fri Aug 17 00:31:23 2018] GET / => generated 11494 bytes in 22 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 54/86] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 17 00:39:56 2018] GET / => generated 11494 bytes in 23 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20114|app: 0|req: 11/87] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 17 01:39:53 2018] GET / => generated 11494 bytes in 31 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 55/88] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 17 02:39:54 2018] GET / => generated 11494 bytes in 55 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20114|app: 0|req: 12/89] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 17 03:39:54 2018] GET / => generated 11494 bytes in 24 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 13/90] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 17 04:39:54 2018] GET / => generated 11494 bytes in 24 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 14/91] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 17 05:39:51 2018] GET / => generated 11494 bytes in 22 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20114|app: 0|req: 13/92] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 17 06:39:52 2018] GET / => generated 11494 bytes in 26 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20114|app: 0|req: 14/93] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 17 07:39:52 2018] GET / => generated 11494 bytes in 25 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 56/94] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 17 08:39:52 2018] GET / => generated 11494 bytes in 62 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 57/95] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 17 09:39:47 2018] GET / => generated 11494 bytes in 36 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
[pid: 20112|app: 0|req: 58/96] 113.88.65.224 () {44 vars in 814 bytes} [Fri Aug 17 10:10:39 2018] GET / => generated 11494 bytes in 26 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 1)
Not Found: /favicon.ico
[pid: 20112|app: 0|req: 59/97] 113.88.65.224 () {44 vars in 800 bytes} [Fri Aug 17 10:29:54 2018] GET /favicon.ico => generated 3375 bytes in 3 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 0)
[pid: 20112|app: 0|req: 60/98] 113.88.65.224 () {46 vars in 919 bytes} [Fri Aug 17 10:30:10 2018] GET /admin/blog/post/add/ => generated 10525 bytes in 110 msecs (HTTP/1.1 200) 7 headers in 382 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 15/99] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 17 10:39:50 2018] GET / => generated 11494 bytes in 25 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 61/100] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 17 11:39:49 2018] GET / => generated 11494 bytes in 25 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20114|app: 0|req: 15/101] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 17 12:39:53 2018] GET / => generated 11494 bytes in 24 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20114|app: 0|req: 16/102] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 17 13:39:50 2018] GET / => generated 11494 bytes in 32 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
[pid: 20115|app: 0|req: 11/103] 37.128.150.248 () {34 vars in 396 bytes} [Fri Aug 17 14:09:09 2018] GET / => generated 11494 bytes in 27 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 1)
Not Found: /phpmyadmin
[pid: 20112|app: 0|req: 62/104] 37.128.150.248 () {34 vars in 416 bytes} [Fri Aug 17 14:09:09 2018] GET /phpmyadmin => generated 3369 bytes in 8 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 0)
[pid: 20114|app: 0|req: 17/105] 37.128.150.248 () {34 vars in 396 bytes} [Fri Aug 17 14:09:10 2018] GET / => generated 11494 bytes in 26 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 0)
Not Found: /pma
[pid: 20112|app: 0|req: 63/106] 37.128.150.248 () {34 vars in 402 bytes} [Fri Aug 17 14:09:10 2018] GET /pma => generated 3348 bytes in 5 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20115|app: 0|req: 12/107] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 17 14:39:51 2018] GET / => generated 11494 bytes in 31 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20114|app: 0|req: 18/108] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 17 15:39:52 2018] GET / => generated 11494 bytes in 54 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
[pid: 20112|app: 0|req: 64/109] 169.54.244.93 () {30 vars in 397 bytes} [Fri Aug 17 16:04:40 2018] GET / => generated 11494 bytes in 24 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 65/110] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 17 16:39:51 2018] GET / => generated 11494 bytes in 27 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 66/111] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 17 17:39:49 2018] GET / => generated 11494 bytes in 26 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20114|app: 0|req: 19/112] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 17 18:39:49 2018] GET / => generated 11494 bytes in 34 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 16/113] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 17 19:39:50 2018] GET / => generated 11494 bytes in 31 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20115|app: 0|req: 13/114] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 17 20:39:53 2018] GET / => generated 11494 bytes in 26 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 17/115] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 17 21:39:48 2018] GET / => generated 11494 bytes in 26 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 67/116] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 17 22:39:52 2018] GET / => generated 11494 bytes in 24 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 68/117] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 17 23:39:56 2018] GET / => generated 11494 bytes in 25 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 69/118] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug 18 00:39:52 2018] GET / => generated 11494 bytes in 25 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 18/119] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug 18 01:39:48 2018] GET / => generated 11494 bytes in 26 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 70/120] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug 18 02:39:55 2018] GET / => generated 11494 bytes in 23 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 19/121] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug 18 03:39:48 2018] GET / => generated 11494 bytes in 62 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20114|app: 0|req: 20/122] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug 18 04:39:50 2018] GET / => generated 11494 bytes in 25 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 71/123] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug 18 05:39:49 2018] GET / => generated 11494 bytes in 51 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20114|app: 0|req: 21/124] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug 18 06:39:48 2018] GET / => generated 11494 bytes in 26 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 20/125] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug 18 07:39:49 2018] GET / => generated 11494 bytes in 46 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 72/126] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug 18 08:39:49 2018] GET / => generated 11494 bytes in 25 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 73/127] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug 18 09:39:50 2018] GET / => generated 11494 bytes in 27 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 74/128] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug 18 10:39:48 2018] GET / => generated 11494 bytes in 25 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 75/129] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug 18 11:39:52 2018] GET / => generated 11494 bytes in 25 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 76/130] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug 18 12:39:53 2018] GET / => generated 11494 bytes in 25 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
[pid: 20112|app: 0|req: 77/131] 61.238.44.178 () {26 vars in 273 bytes} [Sat Aug 18 12:52:05 2018] GET / => generated 11494 bytes in 40 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 21/132] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug 18 13:39:48 2018] GET / => generated 11494 bytes in 27 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
[pid: 20112|app: 0|req: 78/133] 198.108.67.16 () {34 vars in 389 bytes} [Sat Aug 18 13:47:52 2018] GET / => generated 11494 bytes in 34 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 79/134] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug 18 14:39:56 2018] GET / => generated 11494 bytes in 23 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
[pid: 20112|app: 0|req: 80/135] 139.162.83.10 () {34 vars in 385 bytes} [Sat Aug 18 14:39:58 2018] GET / => generated 11494 bytes in 29 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 81/136] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug 18 15:39:57 2018] GET / => generated 11494 bytes in 59 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 82/137] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug 18 16:39:56 2018] GET / => generated 11494 bytes in 26 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 83/138] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug 18 17:39:57 2018] GET / => generated 11494 bytes in 27 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 22/139] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug 18 18:39:59 2018] GET / => generated 11494 bytes in 52 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 84/140] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug 18 19:39:55 2018] GET / => generated 11494 bytes in 46 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 85/141] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug 18 20:39:59 2018] GET / => generated 11494 bytes in 22 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 86/142] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug 18 21:40:01 2018] GET / => generated 11494 bytes in 39 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
[pid: 20115|app: 0|req: 14/143] 66.102.6.195 () {38 vars in 637 bytes} [Sat Aug 18 22:25:39 2018] GET /admin/ => generated 0 bytes in 17 msecs (HTTP/1.1 302) 7 headers in 265 bytes (1 switches on core 1)
[pid: 20112|app: 0|req: 87/144] 66.102.6.195 () {38 vars in 674 bytes} [Sat Aug 18 22:25:39 2018] GET /admin/login/?next=/admin/ => generated 1652 bytes in 18 msecs (HTTP/1.1 200) 7 headers in 381 bytes (1 switches on core 0)
Not Found: /favicon.ico
[pid: 20112|app: 0|req: 88/145] 66.102.6.193 () {38 vars in 591 bytes} [Sat Aug 18 22:25:39 2018] GET /favicon.ico => generated 3375 bytes in 2 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20114|app: 0|req: 22/146] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug 18 22:39:58 2018] GET / => generated 11494 bytes in 31 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
[pid: 20114|app: 0|req: 23/147] 96.30.237.131 () {26 vars in 273 bytes} [Sat Aug 18 23:00:23 2018] GET / => generated 11494 bytes in 25 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 89/148] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug 18 23:39:57 2018] GET / => generated 11494 bytes in 32 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 23/149] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug 19 00:39:54 2018] GET / => generated 11494 bytes in 27 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 90/150] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug 19 01:39:55 2018] GET / => generated 11494 bytes in 31 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 91/151] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug 19 02:39:59 2018] GET / => generated 11494 bytes in 23 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 92/152] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug 19 03:39:55 2018] GET / => generated 11494 bytes in 30 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 93/153] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug 19 04:39:55 2018] GET / => generated 11494 bytes in 35 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 94/154] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug 19 05:39:53 2018] GET / => generated 11494 bytes in 64 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 95/155] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug 19 06:39:54 2018] GET / => generated 11494 bytes in 49 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 24/156] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug 19 07:39:55 2018] GET / => generated 11494 bytes in 40 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
[pid: 20113|app: 0|req: 25/157] 36.81.107.3 () {26 vars in 271 bytes} [Sun Aug 19 08:36:51 2018] GET / => generated 11494 bytes in 60 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 96/158] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug 19 08:39:54 2018] GET / => generated 11494 bytes in 55 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
[pid: 20112|app: 0|req: 97/159] 222.164.166.187 () {26 vars in 275 bytes} [Sun Aug 19 09:15:48 2018] GET / => generated 11494 bytes in 53 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 98/160] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug 19 09:39:55 2018] GET / => generated 11494 bytes in 30 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 99/161] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug 19 10:39:54 2018] GET / => generated 11494 bytes in 35 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20115|app: 0|req: 15/162] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug 19 11:39:53 2018] GET / => generated 11494 bytes in 28 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 26/163] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug 19 12:40:00 2018] GET / => generated 11494 bytes in 32 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 27/164] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug 19 13:39:55 2018] GET / => generated 11494 bytes in 26 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 28/165] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug 19 14:39:55 2018] GET / => generated 11494 bytes in 36 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20114|app: 0|req: 24/166] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug 19 15:39:58 2018] GET / => generated 11494 bytes in 57 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 29/167] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug 19 16:39:54 2018] GET / => generated 11494 bytes in 26 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20114|app: 0|req: 25/168] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug 19 17:39:55 2018] GET / => generated 11494 bytes in 58 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 30/169] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug 19 18:39:57 2018] GET / => generated 11494 bytes in 52 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 31/170] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug 19 19:39:54 2018] GET / => generated 11494 bytes in 51 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 100/171] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug 19 20:39:53 2018] GET / => generated 11494 bytes in 28 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
[pid: 20115|app: 0|req: 16/172] 95.235.74.86 () {26 vars in 272 bytes} [Sun Aug 19 20:56:32 2018] GET / => generated 11494 bytes in 34 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 101/173] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug 19 21:39:58 2018] GET / => generated 11494 bytes in 25 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 102/174] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug 19 22:39:54 2018] GET / => generated 11494 bytes in 26 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 103/175] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug 19 23:39:57 2018] GET / => generated 11494 bytes in 26 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
[pid: 20112|app: 0|req: 104/176] 141.212.122.64 () {34 vars in 390 bytes} [Sun Aug 19 23:55:16 2018] GET / => generated 11494 bytes in 27 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 32/177] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug 20 00:39:53 2018] GET / => generated 11494 bytes in 26 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
[pid: 20112|app: 0|req: 105/178] 198.108.66.64 () {34 vars in 389 bytes} [Mon Aug 20 01:25:03 2018] GET / => generated 11494 bytes in 24 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 106/179] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug 20 01:39:53 2018] GET / => generated 11494 bytes in 25 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 107/180] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug 20 02:39:55 2018] GET / => generated 11494 bytes in 27 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 108/181] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug 20 03:39:59 2018] GET / => generated 11494 bytes in 38 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20115|app: 0|req: 17/182] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug 20 04:39:54 2018] GET / => generated 11494 bytes in 25 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 109/183] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug 20 05:39:55 2018] GET / => generated 11494 bytes in 59 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 33/184] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug 20 06:39:53 2018] GET / => generated 11494 bytes in 31 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 110/185] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug 20 07:39:52 2018] GET / => generated 11494 bytes in 31 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 34/186] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug 20 08:39:52 2018] GET / => generated 11494 bytes in 31 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20114|app: 0|req: 26/187] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug 20 09:39:55 2018] GET / => generated 11494 bytes in 46 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
[pid: 20112|app: 0|req: 111/188] 66.102.6.193 () {38 vars in 637 bytes} [Mon Aug 20 09:41:55 2018] GET /admin/ => generated 0 bytes in 1 msecs (HTTP/1.1 302) 7 headers in 265 bytes (1 switches on core 1)
[pid: 20113|app: 0|req: 35/189] 66.102.6.197 () {38 vars in 674 bytes} [Mon Aug 20 09:41:55 2018] GET /admin/login/?next=/admin/ => generated 1652 bytes in 56 msecs (HTTP/1.1 200) 7 headers in 381 bytes (1 switches on core 0)
Not Found: /favicon.ico
[pid: 20112|app: 0|req: 112/190] 66.102.6.195 () {38 vars in 591 bytes} [Mon Aug 20 09:41:56 2018] GET /favicon.ico => generated 3375 bytes in 3 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 113/191] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug 20 10:39:53 2018] GET / => generated 11494 bytes in 27 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 114/192] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug 20 11:39:53 2018] GET / => generated 11494 bytes in 27 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
[pid: 20112|app: 0|req: 115/193] 36.74.215.121 () {26 vars in 273 bytes} [Mon Aug 20 11:57:48 2018] GET / => generated 11494 bytes in 32 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 36/194] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug 20 12:39:53 2018] GET / => generated 11494 bytes in 31 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
[pid: 20112|app: 0|req: 116/195] 103.236.135.99 () {26 vars in 274 bytes} [Mon Aug 20 12:59:30 2018] GET / => generated 11494 bytes in 29 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 117/196] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug 20 13:39:52 2018] GET / => generated 11494 bytes in 25 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 118/197] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug 20 14:39:52 2018] GET / => generated 11494 bytes in 29 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 37/198] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug 20 15:40:00 2018] GET / => generated 11494 bytes in 47 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 119/199] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug 20 16:39:59 2018] GET / => generated 11494 bytes in 41 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
[pid: 20112|app: 0|req: 120/200] 193.110.78.28 () {26 vars in 273 bytes} [Mon Aug 20 16:40:21 2018] GET / => generated 11494 bytes in 26 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 121/201] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug 20 17:39:57 2018] GET / => generated 11494 bytes in 36 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 122/202] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug 20 18:39:53 2018] GET / => generated 11494 bytes in 28 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 123/203] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug 20 19:39:57 2018] GET / => generated 11494 bytes in 25 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 124/204] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug 20 20:39:56 2018] GET / => generated 11494 bytes in 31 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 38/205] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug 20 21:39:54 2018] GET / => generated 11494 bytes in 43 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21327 (max 4096)...skip
invalid request block size: 21327 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20115|app: 0|req: 18/206] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug 20 22:39:57 2018] GET / => generated 11494 bytes in 26 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 125/207] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug 20 23:39:53 2018] GET / => generated 11494 bytes in 24 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20115|app: 0|req: 19/208] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug 21 00:39:59 2018] GET / => generated 11494 bytes in 26 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 39/209] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug 21 01:40:00 2018] GET / => generated 11494 bytes in 24 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20115|app: 0|req: 20/210] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug 21 02:39:57 2018] GET / => generated 11494 bytes in 25 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 126/211] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug 21 03:39:58 2018] GET / => generated 11494 bytes in 76 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 127/212] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug 21 04:39:59 2018] GET / => generated 11494 bytes in 70 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 40/213] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug 21 05:39:55 2018] GET / => generated 11494 bytes in 46 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 41/214] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug 21 06:39:55 2018] GET / => generated 11494 bytes in 50 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20115|app: 0|req: 21/215] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug 21 07:39:56 2018] GET / => generated 11494 bytes in 49 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 128/216] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug 21 08:39:58 2018] GET / => generated 11494 bytes in 39 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 129/217] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug 21 09:38:36 2018] GET / => generated 11494 bytes in 25 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
[pid: 20112|app: 0|req: 130/218] 139.162.83.10 () {34 vars in 385 bytes} [Tue Aug 21 10:27:11 2018] GET / => generated 11494 bytes in 30 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 131/219] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug 21 10:38:33 2018] GET / => generated 11494 bytes in 26 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 132/220] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug 21 11:38:33 2018] GET / => generated 11494 bytes in 40 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20115|app: 0|req: 22/221] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug 21 12:38:34 2018] GET / => generated 11494 bytes in 47 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 42/222] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug 21 13:38:34 2018] GET / => generated 11494 bytes in 45 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20114|app: 0|req: 27/223] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug 21 14:38:41 2018] GET / => generated 11494 bytes in 25 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20115|app: 0|req: 23/224] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug 21 15:38:36 2018] GET / => generated 11494 bytes in 55 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20114|app: 0|req: 28/225] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug 21 16:38:37 2018] GET / => generated 11494 bytes in 26 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20114|app: 0|req: 29/226] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug 21 17:38:39 2018] GET / => generated 11494 bytes in 28 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 133/227] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug 21 18:38:36 2018] GET / => generated 11494 bytes in 56 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 134/228] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug 21 19:38:42 2018] GET / => generated 11494 bytes in 30 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
[pid: 20112|app: 0|req: 135/229] 197.156.96.233 () {34 vars in 396 bytes} [Tue Aug 21 19:48:26 2018] GET / => generated 11494 bytes in 27 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 1)
Not Found: /phpmyadmin
[pid: 20112|app: 0|req: 136/230] 197.156.96.233 () {34 vars in 416 bytes} [Tue Aug 21 19:48:48 2018] GET /phpmyadmin => generated 3369 bytes in 6 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 0)
[pid: 20113|app: 0|req: 43/231] 197.156.96.233 () {34 vars in 396 bytes} [Tue Aug 21 19:48:52 2018] GET / => generated 11494 bytes in 29 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 0)
Not Found: /pma
[pid: 20112|app: 0|req: 137/232] 197.156.96.233 () {34 vars in 402 bytes} [Tue Aug 21 19:49:33 2018] GET /pma => generated 3348 bytes in 4 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 138/233] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug 21 20:38:35 2018] GET / => generated 11494 bytes in 39 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 139/234] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug 21 21:38:44 2018] GET / => generated 11494 bytes in 30 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
[pid: 20112|app: 0|req: 140/235] 66.102.6.193 () {38 vars in 637 bytes} [Tue Aug 21 22:17:30 2018] GET /admin/ => generated 0 bytes in 1 msecs (HTTP/1.1 302) 7 headers in 265 bytes (1 switches on core 1)
[pid: 20115|app: 0|req: 24/236] 66.102.6.195 () {38 vars in 674 bytes} [Tue Aug 21 22:17:30 2018] GET /admin/login/?next=/admin/ => generated 1652 bytes in 20 msecs (HTTP/1.1 200) 7 headers in 381 bytes (1 switches on core 0)
Not Found: /favicon.ico
[pid: 20112|app: 0|req: 141/237] 66.102.6.193 () {38 vars in 591 bytes} [Tue Aug 21 22:17:30 2018] GET /favicon.ico => generated 3375 bytes in 4 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 142/238] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug 21 22:38:42 2018] GET / => generated 11494 bytes in 34 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 44/239] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug 21 23:38:38 2018] GET / => generated 11494 bytes in 30 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 143/240] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug 22 00:38:36 2018] GET / => generated 11494 bytes in 25 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 45/241] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug 22 01:38:38 2018] GET / => generated 11494 bytes in 25 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 144/242] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug 22 02:38:38 2018] GET / => generated 11494 bytes in 24 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 25345 (max 4096)...skip
invalid request block size: 20047 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 46/243] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug 22 03:38:37 2018] GET / => generated 11494 bytes in 38 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 47/244] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug 22 04:38:34 2018] GET / => generated 11494 bytes in 59 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 145/245] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug 22 05:38:33 2018] GET / => generated 11494 bytes in 60 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 48/246] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug 22 06:38:33 2018] GET / => generated 11494 bytes in 46 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 49/247] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug 22 07:38:33 2018] GET / => generated 11494 bytes in 24 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
[pid: 20114|app: 0|req: 30/248] 168.1.128.51 () {30 vars in 396 bytes} [Wed Aug 22 08:32:59 2018] GET / => generated 11494 bytes in 37 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 146/249] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug 22 08:38:33 2018] GET / => generated 11494 bytes in 29 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 50/250] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug 22 09:38:34 2018] GET / => generated 11494 bytes in 46 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 147/251] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug 22 10:38:34 2018] GET / => generated 11494 bytes in 24 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 148/252] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug 22 11:38:30 2018] GET / => generated 11494 bytes in 30 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 149/253] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug 22 12:38:27 2018] GET / => generated 11494 bytes in 26 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 150/254] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug 22 13:38:35 2018] GET / => generated 11494 bytes in 43 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
[pid: 20112|app: 0|req: 151/255] 180.249.133.168 () {26 vars in 275 bytes} [Wed Aug 22 13:52:45 2018] GET / => generated 11494 bytes in 27 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 152/256] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug 22 14:38:32 2018] GET / => generated 11494 bytes in 35 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
[pid: 20112|app: 0|req: 153/257] 180.249.133.168 () {26 vars in 275 bytes} [Wed Aug 22 14:49:40 2018] GET / => generated 11494 bytes in 22 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
[pid: 20112|app: 0|req: 154/258] 180.249.133.168 () {26 vars in 275 bytes} [Wed Aug 22 14:49:42 2018] GET / => generated 11494 bytes in 24 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 16709 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 155/259] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug 22 15:38:34 2018] GET / => generated 11494 bytes in 42 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 156/260] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug 22 16:38:33 2018] GET / => generated 11494 bytes in 24 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 157/261] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug 22 17:38:29 2018] GET / => generated 11494 bytes in 58 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 158/262] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug 22 18:38:31 2018] GET / => generated 11494 bytes in 38 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20115|app: 0|req: 25/263] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug 22 19:38:30 2018] GET / => generated 11494 bytes in 52 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
[pid: 20113|app: 0|req: 51/264] 94.249.216.197 () {26 vars in 274 bytes} [Wed Aug 22 20:28:09 2018] GET / => generated 11494 bytes in 30 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 159/265] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug 22 20:38:30 2018] GET / => generated 11494 bytes in 47 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 160/266] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug 22 21:38:29 2018] GET / => generated 11494 bytes in 25 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 161/267] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug 22 22:38:33 2018] GET / => generated 11494 bytes in 25 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 162/268] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug 22 23:38:36 2018] GET / => generated 11494 bytes in 23 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 163/269] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug 23 00:38:30 2018] GET / => generated 11494 bytes in 25 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20115|app: 0|req: 26/270] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug 23 01:38:30 2018] GET / => generated 11494 bytes in 22 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 52/271] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug 23 02:38:31 2018] GET / => generated 11494 bytes in 27 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 164/272] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug 23 03:38:30 2018] GET / => generated 11494 bytes in 41 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 53/273] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug 23 04:38:32 2018] GET / => generated 11494 bytes in 30 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 165/274] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug 23 05:38:29 2018] GET / => generated 11494 bytes in 27 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 166/275] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug 23 06:38:30 2018] GET / => generated 11494 bytes in 51 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20114|app: 0|req: 31/276] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug 23 07:38:31 2018] GET / => generated 11494 bytes in 54 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 167/277] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug 23 08:38:31 2018] GET / => generated 11494 bytes in 78 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
[pid: 20112|app: 0|req: 168/278] 66.102.6.193 () {38 vars in 637 bytes} [Thu Aug 23 08:45:55 2018] GET /admin/ => generated 0 bytes in 2 msecs (HTTP/1.1 302) 7 headers in 265 bytes (1 switches on core 1)
[pid: 20114|app: 0|req: 32/279] 66.102.6.195 () {38 vars in 674 bytes} [Thu Aug 23 08:45:55 2018] GET /admin/login/?next=/admin/ => generated 1652 bytes in 43 msecs (HTTP/1.1 200) 7 headers in 381 bytes (1 switches on core 0)
Not Found: /favicon.ico
[pid: 20114|app: 0|req: 33/280] 66.102.6.195 () {38 vars in 591 bytes} [Thu Aug 23 08:45:55 2018] GET /favicon.ico => generated 3375 bytes in 6 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
[pid: 20112|app: 0|req: 169/281] 125.212.217.214 () {34 vars in 529 bytes} [Thu Aug 23 09:00:17 2018] GET / => generated 11494 bytes in 50 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 0)
Not Found: /favicon.ico
[pid: 20112|app: 0|req: 170/282] 125.212.217.214 () {36 vars in 452 bytes} [Thu Aug 23 09:00:18 2018] GET /favicon.ico => generated 3372 bytes in 3 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 171/283] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug 23 09:38:30 2018] GET / => generated 11494 bytes in 28 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 172/284] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug 23 10:38:30 2018] GET / => generated 11494 bytes in 25 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 173/285] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug 23 11:38:30 2018] GET / => generated 11494 bytes in 44 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 54/286] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug 23 12:38:30 2018] GET / => generated 11494 bytes in 29 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 174/287] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug 23 13:38:29 2018] GET / => generated 11494 bytes in 35 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 175/288] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug 23 14:38:31 2018] GET / => generated 11494 bytes in 25 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 176/289] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug 23 15:38:31 2018] GET / => generated 11494 bytes in 59 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 177/290] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug 23 16:38:18 2018] GET / => generated 11494 bytes in 34 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 178/291] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug 23 17:38:17 2018] GET / => generated 11494 bytes in 46 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20115|app: 0|req: 27/292] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug 23 18:38:17 2018] GET / => generated 11494 bytes in 51 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 55/293] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug 23 19:38:17 2018] GET / => generated 11494 bytes in 65 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 56/294] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug 23 20:38:16 2018] GET / => generated 11494 bytes in 35 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 179/295] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug 23 21:38:18 2018] GET / => generated 11494 bytes in 23 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 180/296] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug 23 22:38:13 2018] GET / => generated 11494 bytes in 44 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 181/297] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug 23 23:38:15 2018] GET / => generated 11494 bytes in 22 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20115|app: 0|req: 28/298] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 24 00:38:15 2018] GET / => generated 11494 bytes in 24 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20114|app: 0|req: 34/299] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 24 01:38:14 2018] GET / => generated 11494 bytes in 25 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 182/300] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 24 02:38:13 2018] GET / => generated 11494 bytes in 26 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 183/301] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 24 03:38:17 2018] GET / => generated 11494 bytes in 41 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 184/302] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 24 04:38:14 2018] GET / => generated 11494 bytes in 29 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
[pid: 20112|app: 0|req: 185/303] 103.80.133.34 () {34 vars in 395 bytes} [Fri Aug 24 05:05:06 2018] GET / => generated 11494 bytes in 25 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 0)
Not Found: /phpmyadmin
[pid: 20112|app: 0|req: 186/304] 103.80.133.34 () {34 vars in 415 bytes} [Fri Aug 24 05:05:07 2018] GET /phpmyadmin => generated 3369 bytes in 4 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 1)
[pid: 20113|app: 0|req: 57/305] 103.80.133.34 () {34 vars in 395 bytes} [Fri Aug 24 05:05:08 2018] GET / => generated 11494 bytes in 22 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 0)
Not Found: /pma
[pid: 20113|app: 0|req: 58/306] 103.80.133.34 () {34 vars in 401 bytes} [Fri Aug 24 05:05:10 2018] GET /pma => generated 3348 bytes in 3 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20114|app: 0|req: 35/307] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 24 05:38:15 2018] GET / => generated 11494 bytes in 26 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 187/308] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 24 06:38:15 2018] GET / => generated 11494 bytes in 22 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 188/309] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 24 07:38:14 2018] GET / => generated 11494 bytes in 53 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20114|app: 0|req: 36/310] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 24 08:38:16 2018] GET / => generated 11494 bytes in 47 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 189/311] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 24 09:38:17 2018] GET / => generated 11494 bytes in 60 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20115|app: 0|req: 29/312] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 24 10:38:14 2018] GET / => generated 11494 bytes in 35 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20115|app: 0|req: 30/313] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 24 11:38:16 2018] GET / => generated 11494 bytes in 30 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 190/314] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 24 12:38:17 2018] GET / => generated 11494 bytes in 29 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 191/315] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 24 13:38:15 2018] GET / => generated 11494 bytes in 31 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
[pid: 20112|app: 0|req: 192/316] 52.53.217.189 () {34 vars in 495 bytes} [Fri Aug 24 13:54:30 2018] GET / => generated 11494 bytes in 26 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 193/317] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 24 14:38:15 2018] GET / => generated 11494 bytes in 35 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 194/318] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 24 15:38:14 2018] GET / => generated 11494 bytes in 22 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20114|app: 0|req: 37/319] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 24 16:38:15 2018] GET / => generated 11494 bytes in 34 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 195/320] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 24 17:38:13 2018] GET / => generated 11494 bytes in 43 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20115|app: 0|req: 31/321] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 24 18:38:16 2018] GET / => generated 11494 bytes in 41 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20114|app: 0|req: 38/322] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 24 19:38:15 2018] GET / => generated 11494 bytes in 32 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 196/323] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 24 20:38:18 2018] GET / => generated 11494 bytes in 23 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 59/324] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 24 21:38:16 2018] GET / => generated 11494 bytes in 25 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 197/325] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 24 22:38:18 2018] GET / => generated 11494 bytes in 27 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20115|app: 0|req: 32/326] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 24 23:38:17 2018] GET / => generated 11494 bytes in 32 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 198/327] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug 25 00:38:15 2018] GET / => generated 11494 bytes in 25 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 199/328] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug 25 01:38:13 2018] GET / => generated 11494 bytes in 59 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
[pid: 20112|app: 0|req: 200/329] 139.162.83.10 () {34 vars in 385 bytes} [Sat Aug 25 01:50:07 2018] GET / => generated 11494 bytes in 22 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20115|app: 0|req: 33/330] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug 25 02:38:20 2018] GET / => generated 11494 bytes in 21 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 201/331] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug 25 03:38:16 2018] GET / => generated 11494 bytes in 54 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 202/332] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug 25 04:38:17 2018] GET / => generated 11494 bytes in 22 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20115|app: 0|req: 34/333] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug 25 05:38:14 2018] GET / => generated 11494 bytes in 28 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20114|app: 0|req: 39/334] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug 25 06:38:16 2018] GET / => generated 11494 bytes in 27 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 203/335] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug 25 07:38:15 2018] GET / => generated 11494 bytes in 79 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
[pid: 20113|app: 0|req: 60/336] 209.17.96.210 () {30 vars in 411 bytes} [Sat Aug 25 08:34:40 2018] GET / => generated 11494 bytes in 26 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20114|app: 0|req: 40/337] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug 25 08:38:14 2018] GET / => generated 11494 bytes in 25 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 61/338] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug 25 09:38:13 2018] GET / => generated 11494 bytes in 60 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20115|app: 0|req: 35/339] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug 25 10:38:14 2018] GET / => generated 11494 bytes in 37 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 204/340] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug 25 11:38:14 2018] GET / => generated 11494 bytes in 37 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 205/341] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug 25 12:38:16 2018] GET / => generated 11494 bytes in 52 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 206/342] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug 25 13:38:15 2018] GET / => generated 11494 bytes in 86 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 207/343] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug 25 14:38:13 2018] GET / => generated 11494 bytes in 29 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20115|app: 0|req: 36/344] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug 25 15:38:16 2018] GET / => generated 11494 bytes in 60 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 62/345] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug 25 16:38:16 2018] GET / => generated 11494 bytes in 49 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20114|app: 0|req: 41/346] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug 25 17:38:13 2018] GET / => generated 11494 bytes in 27 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 208/347] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug 25 18:38:17 2018] GET / => generated 11494 bytes in 54 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20114|app: 0|req: 42/348] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug 25 19:38:14 2018] GET / => generated 11494 bytes in 27 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20115|app: 0|req: 37/349] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug 25 20:38:12 2018] GET / => generated 11494 bytes in 32 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 63/350] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug 25 21:38:14 2018] GET / => generated 11494 bytes in 23 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 209/351] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug 25 22:38:14 2018] GET / => generated 11494 bytes in 45 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 210/352] 198.35.46.201 () {28 vars in 312 bytes} [Sat Aug 25 23:38:15 2018] GET / => generated 11494 bytes in 30 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 211/353] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug 26 00:38:14 2018] GET / => generated 11494 bytes in 26 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20115|app: 0|req: 38/354] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug 26 01:38:10 2018] GET / => generated 11494 bytes in 32 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20114|app: 0|req: 43/355] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug 26 02:38:10 2018] GET / => generated 11494 bytes in 23 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20114|app: 0|req: 44/356] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug 26 03:38:16 2018] GET / => generated 11494 bytes in 50 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20115|app: 0|req: 39/357] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug 26 04:38:13 2018] GET / => generated 11494 bytes in 24 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
[pid: 20112|app: 0|req: 212/358] 95.251.137.16 () {26 vars in 273 bytes} [Sun Aug 26 05:31:03 2018] GET / => generated 11494 bytes in 27 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20114|app: 0|req: 45/359] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug 26 05:38:10 2018] GET / => generated 11494 bytes in 34 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20115|app: 0|req: 40/360] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug 26 06:38:10 2018] GET / => generated 11494 bytes in 53 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 64/361] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug 26 07:38:11 2018] GET / => generated 11494 bytes in 58 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 65/362] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug 26 08:38:10 2018] GET / => generated 11494 bytes in 54 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 213/363] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug 26 09:38:11 2018] GET / => generated 11494 bytes in 25 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20115|app: 0|req: 41/364] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug 26 10:38:09 2018] GET / => generated 11494 bytes in 59 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 214/365] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug 26 11:38:11 2018] GET / => generated 11494 bytes in 50 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 215/366] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug 26 12:38:14 2018] GET / => generated 11494 bytes in 21 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 216/367] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug 26 13:38:19 2018] GET / => generated 11494 bytes in 29 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 217/368] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug 26 14:38:16 2018] GET / => generated 11494 bytes in 23 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 218/369] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug 26 15:38:19 2018] GET / => generated 11494 bytes in 26 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 219/370] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug 26 16:38:20 2018] GET / => generated 11494 bytes in 25 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
[pid: 20112|app: 0|req: 220/371] 198.108.66.224 () {34 vars in 390 bytes} [Sun Aug 26 16:51:41 2018] GET / => generated 11494 bytes in 29 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 1)
[pid: 20112|app: 0|req: 221/372] 113.88.67.138 () {42 vars in 705 bytes} [Sun Aug 26 17:02:42 2018] GET / => generated 11494 bytes in 24 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 0)
Not Found: /favicon.ico
[pid: 20112|app: 0|req: 222/373] 113.88.67.138 () {40 vars in 652 bytes} [Sun Aug 26 17:02:45 2018] GET /favicon.ico => generated 3375 bytes in 8 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 1)
Not Found: /full-width.html
[pid: 20114|app: 0|req: 46/374] 113.88.67.138 () {42 vars in 741 bytes} [Sun Aug 26 17:02:48 2018] GET /full-width.html => generated 3387 bytes in 5 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 0)
Not Found: /index.html
[pid: 20114|app: 0|req: 47/375] 113.88.67.138 () {42 vars in 731 bytes} [Sun Aug 26 17:02:54 2018] GET /index.html => generated 3372 bytes in 3 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 1)
Not Found: /index.html
[pid: 20114|app: 0|req: 48/376] 220.181.132.195 () {40 vars in 671 bytes} [Sun Aug 26 17:33:58 2018] GET /index.html => generated 3372 bytes in 5 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 1)
Not Found: /index.html
[pid: 20112|app: 0|req: 223/377] 171.13.14.148 () {44 vars in 731 bytes} [Sun Aug 26 17:34:01 2018] GET /index.html => generated 3372 bytes in 3 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 0)
Not Found: /index.html
[pid: 20114|app: 0|req: 49/378] 210.209.93.170 () {42 vars in 706 bytes} [Sun Aug 26 17:34:05 2018] GET /index.html => generated 3372 bytes in 3 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 0)
[pid: 20112|app: 0|req: 224/379] 42.236.10.78 () {38 vars in 627 bytes} [Sun Aug 26 17:35:30 2018] GET / => generated 11494 bytes in 28 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 66/380] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug 26 17:38:18 2018] GET / => generated 11494 bytes in 49 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
[pid: 20112|app: 0|req: 225/381] 101.199.120.145 () {38 vars in 641 bytes} [Sun Aug 26 17:46:53 2018] GET / => generated 11494 bytes in 26 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 0)
[pid: 20112|app: 0|req: 226/382] 141.212.122.128 () {34 vars in 391 bytes} [Sun Aug 26 18:23:49 2018] GET / => generated 11494 bytes in 24 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 227/383] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug 26 18:38:27 2018] GET / => generated 11494 bytes in 45 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 228/384] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug 26 19:38:23 2018] GET / => generated 11494 bytes in 23 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 67/385] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug 26 20:38:20 2018] GET / => generated 11494 bytes in 37 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 229/386] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug 26 21:38:21 2018] GET / => generated 11494 bytes in 27 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 68/387] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug 26 22:38:25 2018] GET / => generated 11494 bytes in 24 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20115|app: 0|req: 42/388] 198.35.46.201 () {28 vars in 312 bytes} [Sun Aug 26 23:38:18 2018] GET / => generated 11494 bytes in 23 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 69/389] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug 27 00:38:19 2018] GET / => generated 11494 bytes in 27 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20115|app: 0|req: 43/390] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug 27 01:38:17 2018] GET / => generated 11494 bytes in 24 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20114|app: 0|req: 50/391] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug 27 02:38:21 2018] GET / => generated 11494 bytes in 25 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 230/392] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug 27 03:38:21 2018] GET / => generated 11494 bytes in 51 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 231/393] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug 27 04:38:20 2018] GET / => generated 11494 bytes in 42 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 232/394] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug 27 05:38:18 2018] GET / => generated 11494 bytes in 36 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 70/395] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug 27 06:38:18 2018] GET / => generated 11494 bytes in 50 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 71/396] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug 27 07:38:19 2018] GET / => generated 11494 bytes in 54 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 233/397] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug 27 08:38:18 2018] GET / => generated 11494 bytes in 27 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 234/398] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug 27 09:38:22 2018] GET / => generated 11494 bytes in 34 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
[pid: 20112|app: 0|req: 235/399] 113.88.65.253 () {42 vars in 705 bytes} [Mon Aug 27 10:01:03 2018] GET / => generated 11494 bytes in 44 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 1)
Not Found: /favicon.ico
[pid: 20114|app: 0|req: 51/400] 113.88.65.253 () {40 vars in 652 bytes} [Mon Aug 27 10:01:04 2018] GET /favicon.ico => generated 3375 bytes in 5 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 236/401] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug 27 10:38:20 2018] GET / => generated 11494 bytes in 26 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 72/402] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug 27 11:38:14 2018] GET / => generated 11494 bytes in 53 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
[pid: 20114|app: 0|req: 52/403] 86.106.8.85 () {26 vars in 271 bytes} [Mon Aug 27 12:04:41 2018] GET / => generated 11494 bytes in 28 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 73/404] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug 27 12:38:13 2018] GET / => generated 11494 bytes in 29 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20115|app: 0|req: 44/405] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug 27 13:38:18 2018] GET / => generated 11494 bytes in 52 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 237/406] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug 27 14:38:15 2018] GET / => generated 11494 bytes in 28 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 74/407] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug 27 15:38:14 2018] GET / => generated 11494 bytes in 75 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 238/408] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug 27 16:38:13 2018] GET / => generated 11494 bytes in 61 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 239/409] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug 27 17:38:13 2018] GET / => generated 11494 bytes in 59 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20115|app: 0|req: 45/410] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug 27 18:38:19 2018] GET / => generated 11494 bytes in 55 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 75/411] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug 27 19:38:16 2018] GET / => generated 11494 bytes in 65 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 240/412] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug 27 20:38:16 2018] GET / => generated 11494 bytes in 70 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 76/413] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug 27 21:38:16 2018] GET / => generated 11494 bytes in 26 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 241/414] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug 27 22:38:19 2018] GET / => generated 11494 bytes in 31 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 242/415] 198.35.46.201 () {28 vars in 312 bytes} [Mon Aug 27 23:38:15 2018] GET / => generated 11494 bytes in 24 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20114|app: 0|req: 53/416] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug 28 00:38:14 2018] GET / => generated 11494 bytes in 24 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
[pid: 20114|app: 0|req: 54/417] 179.221.122.8 () {26 vars in 273 bytes} [Tue Aug 28 01:03:49 2018] GET / => generated 11494 bytes in 24 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 243/418] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug 28 01:38:14 2018] GET / => generated 11494 bytes in 25 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
[pid: 20112|app: 0|req: 244/419] 139.162.83.10 () {34 vars in 385 bytes} [Tue Aug 28 02:26:51 2018] GET / => generated 11494 bytes in 33 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20115|app: 0|req: 46/420] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug 28 02:38:16 2018] GET / => generated 11494 bytes in 31 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 245/421] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug 28 03:38:17 2018] GET / => generated 11494 bytes in 27 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
-- unavailable modifier requested: 22 --
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Connection reset by peer [proto/uwsgi.c line 35]
invalid request block size: 17747 (max 4096)...skip
invalid request block size: 21584 (max 4096)...skip
-- unavailable modifier requested: 164 --
uwsgi_proto_uwsgi_parser(): Connection reset by peer [proto/uwsgi.c line 35]
uwsgi_proto_uwsgi_parser(): Connection reset by peer [proto/uwsgi.c line 35]
invalid request block size: 19794 (max 4096)...skip
invalid request block size: 20813 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Connection reset by peer [proto/uwsgi.c line 35]
invalid request block size: 30783 (max 4096)...skip
Empty python request. skip.
[pid: 20112|app: -1|req: -1/424]  () {0 vars in 0 bytes} [Tue Aug 28 04:07:40 2018]   => generated 0 bytes in 0 msecs ( 0) 0 headers in 0 bytes (0 switches on core 1)
Empty python request. skip.
[pid: 20112|app: -1|req: -1/425]  () {0 vars in 0 bytes} [Tue Aug 28 04:07:40 2018]   => generated 0 bytes in 0 msecs ( 0) 0 headers in 0 bytes (0 switches on core 1)
-- unavailable modifier requested: 67 --
uwsgi_proto_uwsgi_parser(): Connection reset by peer [proto/uwsgi.c line 35]
invalid request block size: 17998 (max 4096)...skip
Empty python request. skip.
[pid: 20112|app: -1|req: -1/427]  () {0 vars in 0 bytes} [Tue Aug 28 04:07:48 2018]   => generated 0 bytes in 0 msecs ( 0) 0 headers in 0 bytes (0 switches on core 0)
invalid request block size: 30831 (max 4096)...skip
-- unavailable modifier requested: 204 --
invalid request block size: 24948 (max 4096)...skip
invalid request block size: 28530 (max 4096)...skip
-- unavailable modifier requested: 99 --
-- unavailable modifier requested: 3 --
-- unavailable modifier requested: 3 --
-- unavailable modifier requested: 3 --
-- unavailable modifier requested: 3 --
-- unavailable modifier requested: 3 --
-- unavailable modifier requested: 3 --
-- unavailable modifier requested: 3 --
-- unavailable modifier requested: 1 --
-- unavailable modifier requested: 87 --
invalid request block size: 21330 (max 4096)...skip
-- unavailable modifier requested: 1 --
uwsgi_proto_uwsgi_parser(): Connection reset by peer [proto/uwsgi.c line 35]
invalid request block size: 46270 (max 4096)...skip
invalid request block size: 17156 (max 4096)...skip
invalid request block size: 25709 (max 4096)...skip
Empty python request. skip.
[pid: 20112|app: -1|req: -1/440]  () {0 vars in 0 bytes} [Tue Aug 28 04:08:02 2018]   => generated 0 bytes in 0 msecs ( 0) 0 headers in 0 bytes (0 switches on core 1)
invalid request block size: 20041 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Connection reset by peer [proto/uwsgi.c line 35]
invalid request block size: 29296 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Connection reset by peer [proto/uwsgi.c line 40]
[pid: 20114|app: 0|req: 55/441] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug 28 04:38:16 2018] GET / => generated 11494 bytes in 23 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 246/442] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug 28 05:38:16 2018] GET / => generated 11494 bytes in 51 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Connection reset by peer [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 247/443] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug 28 06:38:12 2018] GET / => generated 11494 bytes in 46 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Connection reset by peer [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 248/444] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug 28 07:38:14 2018] GET / => generated 11494 bytes in 27 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Connection reset by peer [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 249/445] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug 28 08:38:11 2018] GET / => generated 11494 bytes in 22 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
[pid: 20112|app: 0|req: 250/446] 196.52.43.95 () {30 vars in 368 bytes} [Tue Aug 28 08:53:06 2018] GET / => generated 11494 bytes in 107 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 251/447] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug 28 09:38:18 2018] GET / => generated 11494 bytes in 52 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 252/448] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug 28 10:38:20 2018] GET / => generated 11494 bytes in 45 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 253/449] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug 28 11:38:16 2018] GET / => generated 11494 bytes in 32 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 254/450] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug 28 12:38:13 2018] GET / => generated 11494 bytes in 38 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 255/451] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug 28 13:38:17 2018] GET / => generated 11494 bytes in 41 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
[pid: 20112|app: 0|req: 256/452] 178.77.234.141 () {26 vars in 274 bytes} [Tue Aug 28 14:08:47 2018] GET / => generated 11494 bytes in 23 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 257/453] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug 28 14:38:20 2018] GET / => generated 11494 bytes in 52 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 258/454] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug 28 15:38:25 2018] GET / => generated 11494 bytes in 51 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 259/455] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug 28 16:38:26 2018] GET / => generated 11494 bytes in 67 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20115|app: 0|req: 47/456] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug 28 17:38:25 2018] GET / => generated 11494 bytes in 97 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 77/457] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug 28 18:38:23 2018] GET / => generated 11494 bytes in 47 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20115|app: 0|req: 48/458] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug 28 19:38:22 2018] GET / => generated 11494 bytes in 24 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20115|app: 0|req: 49/459] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug 28 20:38:22 2018] GET / => generated 11494 bytes in 34 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
[pid: 20112|app: 0|req: 260/460] 116.86.1.124 () {26 vars in 272 bytes} [Tue Aug 28 21:05:24 2018] GET / => generated 11494 bytes in 26 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 261/461] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug 28 21:38:24 2018] GET / => generated 11494 bytes in 42 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
[pid: 20112|app: 0|req: 262/462] 209.17.96.138 () {30 vars in 411 bytes} [Tue Aug 28 22:01:02 2018] GET / => generated 11494 bytes in 37 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 78/463] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug 28 22:38:25 2018] GET / => generated 11494 bytes in 37 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 20047 (max 4096)...skip
invalid request block size: 20047 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 20047 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 263/464] 198.35.46.201 () {28 vars in 312 bytes} [Tue Aug 28 23:38:23 2018] GET / => generated 11494 bytes in 23 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 264/465] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug 29 00:38:20 2018] GET / => generated 11494 bytes in 29 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 265/466] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug 29 01:38:21 2018] GET / => generated 11494 bytes in 24 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 266/467] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug 29 02:38:22 2018] GET / => generated 11494 bytes in 28 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20114|app: 0|req: 56/468] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug 29 03:38:23 2018] GET / => generated 11494 bytes in 30 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20114|app: 0|req: 57/469] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug 29 04:38:23 2018] GET / => generated 11494 bytes in 47 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 267/470] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug 29 05:38:36 2018] GET / => generated 11494 bytes in 60 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 79/471] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug 29 06:38:37 2018] GET / => generated 11494 bytes in 65 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 80/472] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug 29 07:38:36 2018] GET / => generated 11494 bytes in 23 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
[pid: 20112|app: 0|req: 268/473] 113.111.54.47 () {44 vars in 779 bytes} [Wed Aug 29 08:30:08 2018] GET / => generated 11494 bytes in 29 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 0)
Not Found: /favicon.ico
[pid: 20112|app: 0|req: 269/474] 113.111.54.47 () {44 vars in 764 bytes} [Wed Aug 29 08:30:10 2018] GET /favicon.ico => generated 3375 bytes in 6 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20114|app: 0|req: 58/475] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug 29 08:38:36 2018] GET / => generated 11494 bytes in 29 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20115|app: 0|req: 50/476] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug 29 09:38:36 2018] GET / => generated 11494 bytes in 31 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20114|app: 0|req: 59/477] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug 29 10:38:44 2018] GET / => generated 11494 bytes in 64 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
[pid: 20112|app: 0|req: 270/478] 66.102.6.195 () {38 vars in 637 bytes} [Wed Aug 29 11:20:12 2018] GET /admin/ => generated 0 bytes in 1 msecs (HTTP/1.1 302) 7 headers in 265 bytes (1 switches on core 1)
[pid: 20114|app: 0|req: 60/479] 66.102.6.195 () {38 vars in 674 bytes} [Wed Aug 29 11:20:13 2018] GET /admin/login/?next=/admin/ => generated 1652 bytes in 19 msecs (HTTP/1.1 200) 7 headers in 381 bytes (1 switches on core 1)
Not Found: /favicon.ico
[pid: 20115|app: 0|req: 51/480] 66.102.6.197 () {38 vars in 591 bytes} [Wed Aug 29 11:20:13 2018] GET /favicon.ico => generated 3375 bytes in 6 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 1)
[pid: 20114|app: 0|req: 61/481] 113.111.54.47 () {44 vars in 780 bytes} [Wed Aug 29 11:20:15 2018] GET / => generated 11494 bytes in 24 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 271/482] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug 29 11:38:40 2018] GET / => generated 11494 bytes in 33 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 272/483] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug 29 12:38:43 2018] GET / => generated 11494 bytes in 25 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 273/484] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug 29 13:38:44 2018] GET / => generated 11494 bytes in 32 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
Not Found: /favicon.ico
[pid: 20112|app: 0|req: 274/485] 113.111.54.47 () {44 vars in 765 bytes} [Wed Aug 29 14:15:31 2018] GET /favicon.ico => generated 3375 bytes in 5 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 275/486] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug 29 14:38:39 2018] GET / => generated 11494 bytes in 36 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20114|app: 0|req: 62/487] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug 29 15:38:45 2018] GET / => generated 11494 bytes in 23 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21584 (max 4096)...skip
invalid request block size: 21584 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
-- unavailable modifier requested: 5 --
-- unavailable modifier requested: 4 --
invalid request block size: 21283 (max 4096)...skip
invalid request block size: 28171 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
-- unavailable modifier requested: 128 --
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
invalid request block size: 19525 (max 4096)...skip
-- unavailable modifier requested: 22 --
-- unavailable modifier requested: 22 --
Empty python request. skip.
[pid: 20112|app: -1|req: -1/493]  () {0 vars in 0 bytes} [Wed Aug 29 16:37:56 2018]   => generated 0 bytes in 0 msecs ( 0) 0 headers in 0 bytes (0 switches on core 1)
Empty python request. skip.
[pid: 20112|app: -1|req: -1/494]  () {0 vars in 0 bytes} [Wed Aug 29 16:37:56 2018]   => generated 0 bytes in 0 msecs ( 0) 0 headers in 0 bytes (0 switches on core 1)
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
invalid request block size: 25956 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
invalid request block size: 21584 (max 4096)...skip
invalid request block size: 19790 (max 4096)...skip
-- unavailable modifier requested: 3 --
invalid request block size: 25709 (max 4096)...skip
-- unavailable modifier requested: 58 --
invalid request block size: 19794 (max 4096)...skip
-- unavailable modifier requested: 1 --
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
invalid uwsgi request (current strsize: 0). skip.
[pid: 20113|app: -1|req: -1/498]  () {0 vars in 1 bytes} [Wed Aug 29 16:38:03 2018]   => generated 0 bytes in 0 msecs ( 500) 0 headers in 0 bytes (0 switches on core 1)
uwsgi key cannot be null. skip this var.
[pid: 20113|app: -1|req: -1/499]  () {0 vars in 3 bytes} [Wed Aug 29 16:38:03 2018]   => generated 0 bytes in 0 msecs ( 500) 0 headers in 0 bytes (0 switches on core 1)
invalid request block size: 20297 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20114|app: 0|req: 63/500] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug 29 16:39:04 2018] GET / => generated 11494 bytes in 52 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 81/501] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug 29 17:39:12 2018] GET / => generated 11494 bytes in 47 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
[pid: 20112|app: 0|req: 276/502] 139.162.83.10 () {34 vars in 385 bytes} [Wed Aug 29 18:10:14 2018] GET / => generated 11494 bytes in 29 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 277/503] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug 29 18:38:43 2018] GET / => generated 11494 bytes in 30 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 278/504] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug 29 19:38:47 2018] GET / => generated 11494 bytes in 25 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 279/505] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug 29 20:38:44 2018] GET / => generated 11494 bytes in 22 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 280/506] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug 29 21:38:49 2018] GET / => generated 11494 bytes in 24 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 281/507] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug 29 22:39:02 2018] GET / => generated 11494 bytes in 45 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 282/508] 198.35.46.201 () {28 vars in 312 bytes} [Wed Aug 29 23:38:54 2018] GET / => generated 11494 bytes in 47 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 283/509] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug 30 00:38:52 2018] GET / => generated 11494 bytes in 22 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 284/510] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug 30 01:38:49 2018] GET / => generated 11494 bytes in 40 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 285/511] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug 30 02:38:50 2018] GET / => generated 11494 bytes in 22 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 286/512] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug 30 03:38:48 2018] GET / => generated 11494 bytes in 23 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 82/513] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug 30 04:38:49 2018] GET / => generated 11494 bytes in 26 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 287/514] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug 30 05:38:43 2018] GET / => generated 11494 bytes in 38 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 83/515] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug 30 06:38:40 2018] GET / => generated 11494 bytes in 44 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 288/516] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug 30 07:38:39 2018] GET / => generated 11494 bytes in 34 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 289/517] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug 30 08:38:37 2018] GET / => generated 11494 bytes in 25 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 290/518] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug 30 09:38:39 2018] GET / => generated 11494 bytes in 28 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20114|app: 0|req: 64/519] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug 30 10:38:38 2018] GET / => generated 11494 bytes in 30 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 84/520] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug 30 11:38:39 2018] GET / => generated 11494 bytes in 38 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 85/521] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug 30 12:38:40 2018] GET / => generated 11494 bytes in 26 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 86/522] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug 30 13:38:43 2018] GET / => generated 11494 bytes in 27 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 87/523] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug 30 14:38:43 2018] GET / => generated 11494 bytes in 22 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 88/524] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug 30 15:38:42 2018] GET / => generated 11494 bytes in 27 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 89/525] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug 30 16:38:44 2018] GET / => generated 11494 bytes in 24 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 291/526] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug 30 17:38:48 2018] GET / => generated 11494 bytes in 50 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 292/527] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug 30 18:38:41 2018] GET / => generated 11494 bytes in 51 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 293/528] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug 30 19:38:43 2018] GET / => generated 11494 bytes in 39 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 294/529] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug 30 20:38:41 2018] GET / => generated 11494 bytes in 28 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 295/530] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug 30 21:38:42 2018] GET / => generated 11494 bytes in 22 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 296/531] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug 30 22:38:42 2018] GET / => generated 11494 bytes in 34 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20114|app: 0|req: 65/532] 198.35.46.201 () {28 vars in 312 bytes} [Thu Aug 30 23:38:41 2018] GET / => generated 11494 bytes in 23 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20114|app: 0|req: 66/533] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 31 00:38:41 2018] GET / => generated 11494 bytes in 35 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 297/534] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 31 01:38:40 2018] GET / => generated 11494 bytes in 38 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 298/535] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 31 02:38:41 2018] GET / => generated 11494 bytes in 24 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 90/536] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 31 03:38:43 2018] GET / => generated 11494 bytes in 30 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 299/537] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 31 04:38:41 2018] GET / => generated 11494 bytes in 38 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 300/538] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 31 05:38:41 2018] GET / => generated 11494 bytes in 42 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 301/539] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 31 06:38:40 2018] GET / => generated 11494 bytes in 42 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
[pid: 20112|app: 0|req: 302/540] 209.17.96.98 () {30 vars in 410 bytes} [Fri Aug 31 07:34:05 2018] GET / => generated 11494 bytes in 82 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20115|app: 0|req: 52/541] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 31 07:38:40 2018] GET / => generated 11494 bytes in 24 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 303/542] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 31 08:38:39 2018] GET / => generated 11494 bytes in 48 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 91/543] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 31 09:38:39 2018] GET / => generated 11494 bytes in 24 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
[pid: 20113|app: 0|req: 92/544] 66.102.6.193 () {38 vars in 637 bytes} [Fri Aug 31 10:10:18 2018] GET /admin/ => generated 0 bytes in 3 msecs (HTTP/1.1 302) 7 headers in 265 bytes (1 switches on core 1)
[pid: 20114|app: 0|req: 67/545] 66.102.6.195 () {38 vars in 674 bytes} [Fri Aug 31 10:10:18 2018] GET /admin/login/?next=/admin/ => generated 1652 bytes in 38 msecs (HTTP/1.1 200) 7 headers in 381 bytes (1 switches on core 1)
Not Found: /favicon.ico
[pid: 20115|app: 0|req: 53/546] 66.102.6.197 () {38 vars in 591 bytes} [Fri Aug 31 10:10:18 2018] GET /favicon.ico => generated 3375 bytes in 3 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 304/547] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 31 10:38:38 2018] GET / => generated 11494 bytes in 24 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 305/548] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 31 11:38:36 2018] GET / => generated 11494 bytes in 25 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 306/549] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 31 12:38:51 2018] GET / => generated 11494 bytes in 26 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 307/550] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 31 13:38:39 2018] GET / => generated 11494 bytes in 26 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 308/551] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 31 14:38:41 2018] GET / => generated 11494 bytes in 33 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 309/552] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 31 15:38:43 2018] GET / => generated 11494 bytes in 54 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 93/553] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 31 16:38:41 2018] GET / => generated 11494 bytes in 51 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20114|app: 0|req: 68/554] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 31 17:38:44 2018] GET / => generated 11494 bytes in 74 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20114|app: 0|req: 69/555] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 31 18:38:41 2018] GET / => generated 11494 bytes in 59 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
[pid: 20112|app: 0|req: 310/556] 114.34.184.181 () {26 vars in 274 bytes} [Fri Aug 31 19:33:13 2018] GET / => generated 11494 bytes in 33 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 311/557] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 31 19:38:43 2018] GET / => generated 11494 bytes in 23 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 312/558] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 31 20:38:39 2018] GET / => generated 11494 bytes in 24 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 313/559] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 31 21:38:41 2018] GET / => generated 11494 bytes in 22 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 314/560] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 31 22:38:41 2018] GET / => generated 11494 bytes in 23 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 94/561] 198.35.46.201 () {28 vars in 312 bytes} [Fri Aug 31 23:38:41 2018] GET / => generated 11494 bytes in 23 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20114|app: 0|req: 70/562] 198.35.46.201 () {28 vars in 312 bytes} [Sat Sep  1 00:38:45 2018] GET / => generated 11494 bytes in 148 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 315/563] 198.35.46.201 () {28 vars in 312 bytes} [Sat Sep  1 01:38:41 2018] GET / => generated 11494 bytes in 25 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 316/564] 198.35.46.201 () {28 vars in 312 bytes} [Sat Sep  1 02:38:39 2018] GET / => generated 11494 bytes in 25 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 317/565] 198.35.46.201 () {28 vars in 312 bytes} [Sat Sep  1 03:38:39 2018] GET / => generated 11494 bytes in 50 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 95/566] 198.35.46.201 () {28 vars in 312 bytes} [Sat Sep  1 04:38:38 2018] GET / => generated 11494 bytes in 23 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 318/567] 198.35.46.201 () {28 vars in 312 bytes} [Sat Sep  1 05:38:40 2018] GET / => generated 11494 bytes in 32 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 319/568] 198.35.46.201 () {28 vars in 312 bytes} [Sat Sep  1 06:38:40 2018] GET / => generated 11494 bytes in 25 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20114|app: 0|req: 71/569] 198.35.46.201 () {28 vars in 312 bytes} [Sat Sep  1 07:38:41 2018] GET / => generated 11494 bytes in 53 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 96/570] 198.35.46.201 () {28 vars in 312 bytes} [Sat Sep  1 08:38:39 2018] GET / => generated 11494 bytes in 52 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 320/571] 198.35.46.201 () {28 vars in 312 bytes} [Sat Sep  1 09:38:43 2018] GET / => generated 11494 bytes in 34 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 321/572] 198.35.46.201 () {28 vars in 312 bytes} [Sat Sep  1 10:38:38 2018] GET / => generated 11494 bytes in 29 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 97/573] 198.35.46.201 () {28 vars in 312 bytes} [Sat Sep  1 11:38:37 2018] GET / => generated 11494 bytes in 52 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
[pid: 20112|app: 0|req: 322/574] 24.241.54.164 () {26 vars in 273 bytes} [Sat Sep  1 11:59:27 2018] GET / => generated 11494 bytes in 32 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20115|app: 0|req: 54/575] 198.35.46.201 () {28 vars in 312 bytes} [Sat Sep  1 12:38:40 2018] GET / => generated 11494 bytes in 27 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
[pid: 20113|app: 0|req: 98/576] 182.100.26.207 () {42 vars in 722 bytes} [Sat Sep  1 12:55:25 2018] GET / => generated 11494 bytes in 23 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 1)
Not Found: /favicon.ico
[pid: 20114|app: 0|req: 72/577] 182.100.26.207 () {40 vars in 664 bytes} [Sat Sep  1 12:55:26 2018] GET /favicon.ico => generated 3375 bytes in 6 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 1)
![Alt text](/static/images/django_blog/01.jpg)

---
typora-copy-images-to: images
typora-root-url: images
---

# Django是个啥

​	最初是被开发来用于管理劳伦斯出版集团旗下的一些以新闻内容为主的网站的。并于2005年7月在BSD许可证下发布。这套框架是以比利时的吉普赛爵士吉他手Django Reinhardt来命名的。

​	Django的主要目标是使得开发复杂的、数据库驱动的网站变得简单。Django注重组件的重用性和“可插拔性”，敏捷开发和DRY法则（Don't Repeat Yourself）。在Django中Python被普遍使用，甚至包括配置文件和数据模型。

- 由 Python 开发的一个免费的开源网站框架，可以用于快速搭建高性能，优雅的网站

- Django 中提供了开发网站经常用到的模块，常见的代码都为你写好了

- Django 提供了通用Web开发模式的高度抽象，提供了频繁进行的编程作业的快速解决方法，以及为“如何解决问题”提供了清晰明了的约定。

- Django的理念是DRY(Don't Repeat Yourself)来鼓励快速开发！

  

# 开发环境

Ubuntu + Python3  + Django + PyCharm



# Ubuntu系统和命令介绍

### 系统设置

### 常用命令

- cd
- ls
- cp
- mv
- rm
- mkdir
- pwd
- touch
- cat
- history
- ps
  - ps -aux
- kill 
  - kill -9 pid
- su/sudo
- chmod
- grep
- which
- whereis
- ifconfig
- netstat
  - netstat -antp 查看网络连接状态
- wget
- ssh username@host -p
  - ssh-keygen
- tar
  - tar -zxvf 解压缩
  - tar -czvf 压缩
- du
  - du -sh
- df
  - df -h
- apt install
- apt update
- apt remove
- apt autoremove
- dpkg -i
- vi/vim

# BS/CS

​        C/S 架构即“客户端-服务器” 架构。这里的“客户端”可以是有 GUI （图形用户界面）的定制软件，也可以是浏览器，甚至可以是通过 SSH 访问服务器的命令行脚本。只要是客户端通过访问服务器调取计算或者存储资源的，统统都是 C/S 架构。所谓的 Browser-Server 架构其实是 C/S 架构的一种特殊的实现形式，而不是其对立面。

- C/S:
  - C: Client
  - S: Server
- B/S
  - B: Browser
  - S: Server       

# MVC/MVT

- MVC

  - M: Model（模型）
  - V: View（视图）
  - C: Controller（控制器）

- MVT

  - M: Model（模型），主要封装对数据库层的访问，对数据库中的数据进行增、删、改、查操作。

  - V: View（视图），用于封装结果，生成页面展示的html内容。

  - T: Template（模板），用于接收请求，处理业务逻辑，与Model和View交互，返回结果。

    ​

# HelloDjango项目

### 创建虚拟环境

### 虚拟环境的优点

- 使不同应用开发环境独立
- 环境升级不影响其他应用，也不会影响全局的python环境
- 可以防止系统中出现包管理混乱和版本冲突

开发会用 virtualenv 来管理多个开发环境

#### Linux/MacOS 下

virtualenvwrapper 使得virtualenv变得更好用，所以我们一起安装了

```
(sudo) pip install virtualenv virtualenvwrapper
```

修改~/.bash_profile或其它环境变量相关文件(如 .bashrc 或用 ZSH 之后的 .zshrc)，添加以下语句

```
export WORKON_HOME=$HOME/.virtualenvs
export PROJECT_HOME=$HOME/workspace
source /usr/local/bin/virtualenvwrapper.sh(每台机子的位置不一样，可以通过find命令找到)
```

修改后使之立即生效(也可以重启终端使之生效)：

```
source ~/.bash_profile
```



#### Windows 下：

```
pip install virtualenv virtualenvwrapper-win
```

【可选】Windows下默认虚拟环境是放在用户名下面的Envs中的，与桌面，我的文档，下载等文件夹在一块的。更改方法：计算机，属性，高级系统设置，环境变量，添加WORKON_HOME，如图（windows 10 环境变量设置截图）：

![](/1.png)

#### 虚拟环境使用方法：

- **mkvirtualenv django：创建运行环境django**

- **workon django: 工作在 django环境 或 从其它环境切换到 django环境**

- **deactivate**: 退出终端环境

- **其它的：**

- **rmvirtualenv** ENV：删除运行环境ENV

- **mkproject** mic：创建mic项目和运行环境mic

- **mktmpenv**：创建临时运行环境

- **lsvirtualenv**: 列出可用的运行环境

- **lssitepackages**: 列出当前环境安装了的包

  ​




### 安装Django框架

- pip install django==1.11.7

- 测试django是否已经安装好

  - 进入python shell

    ```python
    import django
    django.get_version()
    ```

- pip list 显示当前python环境中的所有的库

- pip freeze 显示当前python环境中的除系统内置库外的所有第三方库

### 创建HelloDJango项目

- 开启一个django项目 django-admin startproject day01_HelloDjango
- 测试django项目环境 python manage.py runserver
  - python manage.py runserver 0.0.0.0:8000 表示允许本机所有的IP被外网访问
  - python manage.py runserver 9000 使用本机运行，但端口是9000
- 开启自己的App
  - python manage.py startapp App



### Django的项目结构

1. manage.py
   - 管理整个项目
2. XXX/settings.py  
   - 项目配置文件
3. XXX/urls.py
   - 路由器，接收用户请求，分发给视图函数（控制器）
4. XXX/wsgi.py
   - 网关接口，通常用在线上环境部署（开发过程中不会接触）

### settings.py

1. DEBUG 是否打开DEBUG
2. ALLOWED_HOSTS 允许访问的主机
3. INSTALLED_APPS   安装了的应用 
4. DATABASES   数据库配置
5. LANGUAGE_CODE 中文 zh-hans
6. TIME_ZONE  中国 Asia/Shanghai



### Pycharm安装

1. 解压
2. 目录结构中会有  bin
3. 进入bin
4. bin 中pycharm.sh
5. 执行 ./pycharm.sh
6. 如果想在终端中的任何位置运行，那就配置到环境变量中



### 创建数据库

- 创建更改的文件
  - python manage.py makemigrations
- 将生成的py文件应用到数据库
  - python manage.py migrate
- 清空数据库
  - python manage.py flush
- 导入导出数据
  - python manage.py dumpdata appname > appname.json
  - python manage.py loaddata appname.json

### 创建视图

- 需要配置到工程的配置文件中settings中的INSTALLED_APPS
- views中定义函数，接收request，返回response
- 在urls中配置路由规则
  - 在根urls中配置（管理麻烦，配置简单）
  - 在App中创建自己的urls，在urls中书写规则，将urls配置到工程urls中
- 创建模板目录，在views返回时调用模板的渲染
- 变更数据库
  - 在settings中配置数据库信息



# Django请求流程

- 进来的请求转入/index/。
- Django 通过在 ROOT_URLCONF 配置来决定根 URLconf。
- Django 在 URLconf 中的所有 URL 模式中，查找第一个匹配 /index/ 的条目。
- 如果找到匹配，将调用相应的视图函数。
- 视图函数返回一个 HttpResponse。
- Django 转换 HttpResponse 为一个适合的 HTTP response， 以 Web page 显示出来。



# 设计一个小项目

### 需求分析

- 本示例完成“班级-学生”信息的维护，需要存储两种数据：班级、学生
- 班级表结构设计：
  - 表名：Grade
  - 班级名称：g_name
  - 班级人数：g_num
- 学生表结构设计：
  - 表名：Student
  - 学生姓名：s_name
  - 学生性别：s_gender
  - 所属班级：s_grade
- 班级-学生的关系为一对多

### 数据库配置

- 在settings.py文件中，通过DATABASES项进行数据库设置
- django支持的数据库包括：sqlite、mysql等主流数据库
- Django默认使用SQLite数据库

### 创建应用

- 在一个项目中可以创建一到多个应用，每个应用进行一种业务处理
- 创建应用的命令：

```
python manage.py startapp day1_hello_django
```

- 应用的目录结构如下图

![](/django项目目录结构.png)

### 定义模型类

- 有一个数据表，就有一个模型类与之对应
- 打开models.py文件，定义模型类
- 引入包from django.db import models
- 模型类继承自models.Model类
- **说明：不需要定义主键列，在生成时会自动添加，并且值为自动增长**
- 当输出对象时，会调用对象的str方法

```python
from django.db import models

class Grade(models.Model):
    g_name = models.CharField(max_length=20, db_column="班级名称")
    g_num = models.IntegerField(default=30)
    g_crete_date = models.DateTimeField(auto_now=True)

class Student(models.Model):
    s_name = models.CharField(max_length=20, db_column="姓名")
    s_age = models.IntegerField(default=20, db_column="年龄")
    s_sex = models.BooleanField(default=True)
    s_birthday = models.DateTimeField()
    s_grade = models.ForeignKey(Grade)

    class Meta:
        ordering = ["-s_age"]
        # 为数据库设置别名
        verbose_name = "学生表"
    	verbose_name_plural = "学生表"
        
    def _ _str_ _(self):
        return "%d" % self.pk
```

### 生成数据表

- 激活模型：编辑settings.py文件，将booktest应用加入到installed_apps中

  ![1531115052424](/注册app.png)

- 生成迁移文件：根据模型类生成sql语句

```
python manage.py makemigrations
```

- 迁移文件被生成到应用的migrations目录

![1531115146872](/迁移文件.png)

- 执行迁移：执行sql语句生成数据表

```
python manage.py migrate
```

### 测试数据操作

- 进入python shell，进行简单的模型API练习

```
python manage.py shell
```

- 进入shell后提示如下：

![](/进入django shell.png)

- 引入需要的包：

```
from App.models import Grade,Student
```

- 查询所有班级信息：

```
Grade.objects.all()
```

- 新建班级信息：

```
grade = Grade()
grade.g_name = "深圳python1805班"
grade.g_num = 40
grade.save()
```

- 查找班级信息：

```
grade = Grade.objects.get(pk=1)
```

- 输出班级信息：

```
grade
grade.id
grade.g_name
```

- 修改班级信息：

```
grade.g_name="大神班"
grade.save()
```

- 删除班级信息：

```
grade.delete()
```

### 关联对象的操作

- 对于Student可以按照上面的操作方式进行
- 添加，注意添加关联对象

```
s=Student()
s.s_name='张三'
s.s_sex=True
s.scontent='爱好打篮球'
# 注意grade为Grade的实例，上面我们已经删除了，这里需要重新创建
s.sclass=grade
s.save()
```

### 运行项目

```
python manage.py runserver ip:port
```



# 项目主要部分

### 视图

- 在django中，视图的作用是对路由转发过来的url进行处理
- 视图函数接收的第一个参数是request对象，request对象中包含了请求的信息
- 视图函数写每个app下的views.py文件中

```
from django.shortcuts import render
from django.http import HttpResponse

# Create your views here.

def index(request):
    return HttpResponse("Hello Django")
```

注意：视图函数的第一个参数必须是request，返回必须调用django的定义的方法规范。

### 路由

- 在视图函数写完后，要编写相应的url规则，这样当我们在浏览器上输入网址的时候才能转到相应的视图函数处理逻辑
- 只定义路径部分，不定义域名
- 路由函数的url部分遵循正则的书写方式
- 路由规则由两部分必须指定的参数和其他可选参数组成

```
url(r'^index/', App.index, name="index"),
```

注：每次定义完路由规则，在代码的末尾添加逗号

- 在编写路由规则之前必须导入相应的视图
- 在组织项目时，将app和项目的路由分离



### 模板

- 模板是HTML文件，通过占位符来传递视图函数的数据

- 每个app目录下都可以创建templates的文件夹，django会自动从这些app里寻找相应的模板

  

##### 定义模板

定义index.html模板文件

```
<!DOCTYPE html>
<html>
<head>
  <title>首页</title>
</head>
<body>
<h1>学生列表</h1>
<ul>
{%for student in students%}
<li>
  {{student.s_name}}
</li>
{%endfor%}
</ul>
</body>
</html>
```

定义detail.html模板

```
<!DOCTYPE html>
<html>
<head>
  <title>详情页</title>
</head>
<body>
<h1>学生详情</h1>
<ul>
<li>
  {{student.s_name}}
  {{student.s_gender}}
  {{student.s_content}}
</li>
</ul>
</body>
</html>
```

##### 使用模板

- 定义视图

```
def index(request):
    students = StudentInfo.objects.all()
    return render(request, "index.html", {"students":students})

def index_page(request, id):
    student = StudentInfo.objects.get(pk=id)
    return render(request, "detail.html", {"student":student})
```

- 定义路由

```
url(r'index/$', class_view.index, name="index"),
url(r'index/(\d+)/$', class_view.index_page, name="index_page"),
```

- 运行项目
  - python manage.py runserver
------------------------------------------------------------------------------------------------------------------------
<p><img alt="Alt text" src="/static/images/django_blog/01.jpg" /></p>
<hr />
<p>typora-copy-images-to: images
typora-root-url: images</p>
<hr />
<h1 id="django是个啥">Django是个啥</h1>
<p>​   最初是被开发来用于管理劳伦斯出版集团旗下的一些以新闻内容为主的网站的。并于2005年7月在BSD许可证下发布。这套框架是以比利时的吉普赛爵士吉他手Django Reinhardt来命名的。</p>
<p>​   Django的主要目标是使得开发复杂的、数据库驱动的网站变得简单。Django注重组件的重用性和“可插拔性”，敏捷开发和DRY法则（Don't Repeat Yourself）。在Django中Python被普遍使用，甚至包括配置文件和数据模型。</p>
<ul>
<li>
<p>由 Python 开发的一个免费的开源网站框架，可以用于快速搭建高性能，优雅的网站</p>
</li>
<li>
<p>Django 中提供了开发网站经常用到的模块，常见的代码都为你写好了</p>
</li>
<li>
<p>Django 提供了通用Web开发模式的高度抽象，提供了频繁进行的编程作业的快速解决方法，以及为“如何解决问题”提供了清晰明了的约定。</p>
</li>
<li>
<p>Django的理念是DRY(Don't Repeat Yourself)来鼓励快速开发！</p>
</li>
</ul>
<h1 id="开发环境">开发环境</h1>
<p>Ubuntu + Python3  + Django + PyCharm</p>
<h1 id="ubuntu系统和命令介绍">Ubuntu系统和命令介绍</h1>
<h3 id="系统设置">系统设置</h3>
<h3 id="常用命令">常用命令</h3>
<ul>
<li>cd</li>
<li>ls</li>
<li>cp</li>
<li>mv</li>
<li>rm</li>
<li>mkdir</li>
<li>pwd</li>
<li>touch</li>
<li>cat</li>
<li>history</li>
<li>ps</li>
<li>ps -aux</li>
<li>kill </li>
<li>kill -9 pid</li>
<li>su/sudo</li>
<li>chmod</li>
<li>grep</li>
<li>which</li>
<li>whereis</li>
<li>ifconfig</li>
<li>netstat</li>
<li>netstat -antp 查看网络连接状态</li>
<li>wget</li>
<li>ssh username@host -p</li>
<li>ssh-keygen</li>
<li>tar</li>
<li>tar -zxvf 解压缩</li>
<li>tar -czvf 压缩</li>
<li>du</li>
<li>du -sh</li>
<li>df</li>
<li>df -h</li>
<li>apt install</li>
<li>apt update</li>
<li>apt remove</li>
<li>apt autoremove</li>
<li>dpkg -i</li>
<li>vi/vim</li>
</ul>
<h1 id="bscs">BS/CS</h1>
<p>​        C/S 架构即“客户端-服务器” 架构。这里的“客户端”可以是有 GUI （图形用户界面）的定制软件，也可以是浏览器，甚至可以是通过 SSH 访问服务器的命令行脚本。只要是客户端通过访问服务器调取计算或者存储资源的，统统都是 C/S 架构。所谓的 Browser-Server 架构其实是 C/S 架构的一种特殊的实现形式，而不是其对立面。</p>
<ul>
<li>C/S:</li>
<li>C: Client</li>
<li>S: Server</li>
<li>B/S</li>
<li>B: Browser</li>
<li>S: Server       </li>
</ul>
<h1 id="mvcmvt">MVC/MVT</h1>
<ul>
<li>
<p>MVC</p>
</li>
<li>
<p>M: Model（模型）</p>
</li>
<li>V: View（视图）</li>
<li>
<p>C: Controller（控制器）</p>
</li>
<li>
<p>MVT</p>
</li>
<li>
<p>M: Model（模型），主要封装对数据库层的访问，对数据库中的数据进行增、删、改、查操作。</p>
</li>
<li>
<p>V: View（视图），用于封装结果，生成页面展示的html内容。</p>
</li>
<li>
<p>T: Template（模板），用于接收请求，处理业务逻辑，与Model和View交互，返回结果。</p>
<p>​</p>
</li>
</ul>
<h1 id="hellodjango项目">HelloDjango项目</h1>
<h3 id="创建虚拟环境">创建虚拟环境</h3>
<h3 id="虚拟环境的优点">虚拟环境的优点</h3>
<ul>
<li>使不同应用开发环境独立</li>
<li>环境升级不影响其他应用，也不会影响全局的python环境</li>
<li>可以防止系统中出现包管理混乱和版本冲突</li>
</ul>
<p>开发会用 virtualenv 来管理多个开发环境</p>
<h4 id="linuxmacos-下">Linux/MacOS 下</h4>
<p>virtualenvwrapper 使得virtualenv变得更好用，所以我们一起安装了</p>
<div class="codehilite"><pre><span></span>(sudo) pip install virtualenv virtualenvwrapper
</pre></div>


<p>修改~/.bash_profile或其它环境变量相关文件(如 .bashrc 或用 ZSH 之后的 .zshrc)，添加以下语句</p>
<div class="codehilite"><pre><span></span>export WORKON_HOME=$HOME/.virtualenvs
export PROJECT_HOME=$HOME/workspace
source /usr/local/bin/virtualenvwrapper.sh(每台机子的位置不一样，可以通过find命令找到)
</pre></div>


<p>修改后使之立即生效(也可以重启终端使之生效)：</p>
<div class="codehilite"><pre><span></span>source ~/.bash_profile
</pre></div>


<h4 id="windows-下">Windows 下：</h4>
<div class="codehilite"><pre><span></span>pip install virtualenv virtualenvwrapper-win
</pre></div>


<p>【可选】Windows下默认虚拟环境是放在用户名下面的Envs中的，与桌面，我的文档，下载等文件夹在一块的。更改方法：计算机，属性，高级系统设置，环境变量，添加WORKON_HOME，如图（windows 10 环境变量设置截图）：</p>
<p><img alt="" src="/1.png" /></p>
<h4 id="虚拟环境使用方法">虚拟环境使用方法：</h4>
<ul>
<li>
<p><strong>mkvirtualenv django：创建运行环境django</strong></p>
</li>
<li>
<p><strong>workon django: 工作在 django环境 或 从其它环境切换到 django环境</strong></p>
</li>
<li>
<p><strong>deactivate</strong>: 退出终端环境</p>
</li>
<li>
<p><strong>其它的：</strong></p>
</li>
<li>
<p><strong>rmvirtualenv</strong> ENV：删除运行环境ENV</p>
</li>
<li>
<p><strong>mkproject</strong> mic：创建mic项目和运行环境mic</p>
</li>
<li>
<p><strong>mktmpenv</strong>：创建临时运行环境</p>
</li>
<li>
<p><strong>lsvirtualenv</strong>: 列出可用的运行环境</p>
</li>
<li>
<p><strong>lssitepackages</strong>: 列出当前环境安装了的包</p>
</li>
</ul>
<p>​</p>
<h3 id="安装django框架">安装Django框架</h3>
<ul>
<li>
<p>pip install django==1.11.7</p>
</li>
<li>
<p>测试django是否已经安装好</p>
</li>
<li>
<p>进入python shell</p>
<p><code>python
import django
django.get_version()</code></p>
</li>
<li>
<p>pip list 显示当前python环境中的所有的库</p>
</li>
<li>
<p>pip freeze 显示当前python环境中的除系统内置库外的所有第三方库</p>
</li>
</ul>
<h3 id="创建hellodjango项目">创建HelloDJango项目</h3>
<ul>
<li>开启一个django项目 django-admin startproject day01_HelloDjango</li>
<li>测试django项目环境 python manage.py runserver</li>
<li>python manage.py runserver 0.0.0.0:8000 表示允许本机所有的IP被外网访问</li>
<li>python manage.py runserver 9000 使用本机运行，但端口是9000</li>
<li>开启自己的App</li>
<li>python manage.py startapp App</li>
</ul>
<h3 id="django的项目结构">Django的项目结构</h3>
<ol>
<li>manage.py</li>
<li>管理整个项目</li>
<li>XXX/settings.py  </li>
<li>项目配置文件</li>
<li>XXX/urls.py</li>
<li>路由器，接收用户请求，分发给视图函数（控制器）</li>
<li>XXX/wsgi.py</li>
<li>网关接口，通常用在线上环境部署（开发过程中不会接触）</li>
</ol>
<h3 id="settingspy">settings.py</h3>
<ol>
<li>DEBUG 是否打开DEBUG</li>
<li>ALLOWED_HOSTS 允许访问的主机</li>
<li>INSTALLED_APPS   安装了的应用 </li>
<li>DATABASES   数据库配置</li>
<li>LANGUAGE_CODE 中文 zh-hans</li>
<li>TIME_ZONE  中国 Asia/Shanghai</li>
</ol>
<h3 id="pycharm安装">Pycharm安装</h3>
<ol>
<li>解压</li>
<li>目录结构中会有  bin</li>
<li>进入bin</li>
<li>bin 中pycharm.sh</li>
<li>执行 ./pycharm.sh</li>
<li>如果想在终端中的任何位置运行，那就配置到环境变量中</li>
</ol>
<h3 id="创建数据库">创建数据库</h3>
<ul>
<li>创建更改的文件</li>
<li>python manage.py makemigrations</li>
<li>将生成的py文件应用到数据库</li>
<li>python manage.py migrate</li>
<li>清空数据库</li>
<li>python manage.py flush</li>
<li>导入导出数据</li>
<li>python manage.py dumpdata appname &gt; appname.json</li>
<li>python manage.py loaddata appname.json</li>
</ul>
<h3 id="创建视图">创建视图</h3>
<ul>
<li>需要配置到工程的配置文件中settings中的INSTALLED_APPS</li>
<li>views中定义函数，接收request，返回response</li>
<li>在urls中配置路由规则</li>
<li>在根urls中配置（管理麻烦，配置简单）</li>
<li>在App中创建自己的urls，在urls中书写规则，将urls配置到工程urls中</li>
<li>创建模板目录，在views返回时调用模板的渲染</li>
<li>变更数据库</li>
<li>在settings中配置数据库信息</li>
</ul>
<h1 id="django请求流程">Django请求流程</h1>
<ul>
<li>进来的请求转入/index/。</li>
<li>Django 通过在 ROOT_URLCONF 配置来决定根 URLconf。</li>
<li>Django 在 URLconf 中的所有 URL 模式中，查找第一个匹配 /index/ 的条目。</li>
<li>如果找到匹配，将调用相应的视图函数。</li>
<li>视图函数返回一个 HttpResponse。</li>
<li>Django 转换 HttpResponse 为一个适合的 HTTP response， 以 Web page 显示出来。</li>
</ul>
<h1 id="设计一个小项目">设计一个小项目</h1>
<h3 id="需求分析">需求分析</h3>
<ul>
<li>本示例完成“班级-学生”信息的维护，需要存储两种数据：班级、学生</li>
<li>班级表结构设计：</li>
<li>表名：Grade</li>
<li>班级名称：g_name</li>
<li>班级人数：g_num</li>
<li>学生表结构设计：</li>
<li>表名：Student</li>
<li>学生姓名：s_name</li>
<li>学生性别：s_gender</li>
<li>所属班级：s_grade</li>
<li>班级-学生的关系为一对多</li>
</ul>
<h3 id="数据库配置">数据库配置</h3>
<ul>
<li>在settings.py文件中，通过DATABASES项进行数据库设置</li>
<li>django支持的数据库包括：sqlite、mysql等主流数据库</li>
<li>Django默认使用SQLite数据库</li>
</ul>
<h3 id="创建应用">创建应用</h3>
<ul>
<li>在一个项目中可以创建一到多个应用，每个应用进行一种业务处理</li>
<li>创建应用的命令：</li>
</ul>
<div class="codehilite"><pre><span></span>python manage.py startapp day1_hello_django
</pre></div>


<ul>
<li>应用的目录结构如下图</li>
</ul>
<p><img alt="" src="/django项目目录结构.png" /></p>
<h3 id="定义模型类">定义模型类</h3>
<ul>
<li>有一个数据表，就有一个模型类与之对应</li>
<li>打开models.py文件，定义模型类</li>
<li>引入包from django.db import models</li>
<li>模型类继承自models.Model类</li>
<li><strong>说明：不需要定义主键列，在生成时会自动添加，并且值为自动增长</strong></li>
<li>当输出对象时，会调用对象的str方法</li>
</ul>
<div class="codehilite"><pre><span></span><span class="kn">from</span> <span class="nn">django.db</span> <span class="kn">import</span> <span class="n">models</span>

<span class="k">class</span> <span class="nc">Grade</span><span class="p">(</span><span class="n">models</span><span class="o">.</span><span class="n">Model</span><span class="p">):</span>
    <span class="n">g_name</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">CharField</span><span class="p">(</span><span class="n">max_length</span><span class="o">=</span><span class="mi">20</span><span class="p">,</span> <span class="n">db_column</span><span class="o">=</span><span class="s2">&quot;班级名称&quot;</span><span class="p">)</span>
    <span class="n">g_num</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">IntegerField</span><span class="p">(</span><span class="n">default</span><span class="o">=</span><span class="mi">30</span><span class="p">)</span>
    <span class="n">g_crete_date</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">DateTimeField</span><span class="p">(</span><span class="n">auto_now</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>

<span class="k">class</span> <span class="nc">Student</span><span class="p">(</span><span class="n">models</span><span class="o">.</span><span class="n">Model</span><span class="p">):</span>
    <span class="n">s_name</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">CharField</span><span class="p">(</span><span class="n">max_length</span><span class="o">=</span><span class="mi">20</span><span class="p">,</span> <span class="n">db_column</span><span class="o">=</span><span class="s2">&quot;姓名&quot;</span><span class="p">)</span>
    <span class="n">s_age</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">IntegerField</span><span class="p">(</span><span class="n">default</span><span class="o">=</span><span class="mi">20</span><span class="p">,</span> <span class="n">db_column</span><span class="o">=</span><span class="s2">&quot;年龄&quot;</span><span class="p">)</span>
    <span class="n">s_sex</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">BooleanField</span><span class="p">(</span><span class="n">default</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
    <span class="n">s_birthday</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">DateTimeField</span><span class="p">()</span>
    <span class="n">s_grade</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">ForeignKey</span><span class="p">(</span><span class="n">Grade</span><span class="p">)</span>

    <span class="k">class</span> <span class="nc">Meta</span><span class="p">:</span>
        <span class="n">ordering</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&quot;-s_age&quot;</span><span class="p">]</span>
        <span class="c1"># 为数据库设置别名</span>
        <span class="n">verbose_name</span> <span class="o">=</span> <span class="s2">&quot;学生表&quot;</span>
        <span class="n">verbose_name_plural</span> <span class="o">=</span> <span class="s2">&quot;学生表&quot;</span>

    <span class="k">def</span> <span class="nf">_</span> <span class="n">_str_</span> <span class="n">_</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">return</span> <span class="s2">&quot;</span><span class="si">%d</span><span class="s2">&quot;</span> <span class="o">%</span> <span class="bp">self</span><span class="o">.</span><span class="n">pk</span>
</pre></div>


<h3 id="生成数据表">生成数据表</h3>
<ul>
<li>激活模型：编辑settings.py文件，将booktest应用加入到installed_apps中</li>
</ul>
<p><img alt="1531115052424" src="/注册app.png" /></p>
<ul>
<li>生成迁移文件：根据模型类生成sql语句</li>
</ul>
<div class="codehilite"><pre><span></span>python manage.py makemigrations
</pre></div>


<ul>
<li>迁移文件被生成到应用的migrations目录</li>
</ul>
<p><img alt="1531115146872" src="/迁移文件.png" /></p>
<ul>
<li>执行迁移：执行sql语句生成数据表</li>
</ul>
<div class="codehilite"><pre><span></span>python manage.py migrate
</pre></div>


<h3 id="测试数据操作">测试数据操作</h3>
<ul>
<li>进入python shell，进行简单的模型API练习</li>
</ul>
<div class="codehilite"><pre><span></span>python manage.py shell
</pre></div>


<ul>
<li>进入shell后提示如下：</li>
</ul>
<p>![](/进入django shell.png)</p>
<ul>
<li>引入需要的包：</li>
</ul>
<div class="codehilite"><pre><span></span><span class="kn">from</span> <span class="nn">App.models</span> <span class="kn">import</span> <span class="n">Grade</span><span class="p">,</span><span class="n">Student</span>
</pre></div>


<ul>
<li>查询所有班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>Grade.objects.all()
</pre></div>


<ul>
<li>新建班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>grade = Grade()
grade.g_name = &quot;深圳python1805班&quot;
grade.g_num = 40
grade.save()
</pre></div>


<ul>
<li>查找班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>grade = Grade.objects.get(pk=1)
</pre></div>


<ul>
<li>输出班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>grade
grade.id
grade.g_name
</pre></div>


<ul>
<li>修改班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>grade.g_name=&quot;大神班&quot;
grade.save()
</pre></div>


<ul>
<li>删除班级信息：</li>
</ul>
<div class="codehilite"><pre><span></span>grade.delete()
</pre></div>


<h3 id="关联对象的操作">关联对象的操作</h3>
<ul>
<li>对于Student可以按照上面的操作方式进行</li>
<li>添加，注意添加关联对象</li>
</ul>
<div class="codehilite"><pre><span></span>s=Student()
s.s_name=&#39;张三&#39;
s.s_sex=True
s.scontent=&#39;爱好打篮球&#39;
# 注意grade为Grade的实例，上面我们已经删除了，这里需要重新创建
s.sclass=grade
s.save()
</pre></div>


<h3 id="运行项目">运行项目</h3>
<div class="codehilite"><pre><span></span>python manage.py runserver ip:port
</pre></div>


<h1 id="项目主要部分">项目主要部分</h1>
<h3 id="视图">视图</h3>
<ul>
<li>在django中，视图的作用是对路由转发过来的url进行处理</li>
<li>视图函数接收的第一个参数是request对象，request对象中包含了请求的信息</li>
<li>视图函数写每个app下的views.py文件中</li>
</ul>
<div class="codehilite"><pre><span></span><span class="kn">from</span> <span class="nn">django.shortcuts</span> <span class="kn">import</span> <span class="n">render</span>
<span class="kn">from</span> <span class="nn">django.http</span> <span class="kn">import</span> <span class="n">HttpResponse</span>

<span class="c1"># Create your views here.</span>

<span class="k">def</span> <span class="nf">index</span><span class="p">(</span><span class="n">request</span><span class="p">):</span>
    <span class="k">return</span> <span class="n">HttpResponse</span><span class="p">(</span><span class="s2">&quot;Hello Django&quot;</span><span class="p">)</span>
</pre></div>


<p>注意：视图函数的第一个参数必须是request，返回必须调用django的定义的方法规范。</p>
<h3 id="路由">路由</h3>
<ul>
<li>在视图函数写完后，要编写相应的url规则，这样当我们在浏览器上输入网址的时候才能转到相应的视图函数处理逻辑</li>
<li>只定义路径部分，不定义域名</li>
<li>路由函数的url部分遵循正则的书写方式</li>
<li>路由规则由两部分必须指定的参数和其他可选参数组成</li>
</ul>
<div class="codehilite"><pre><span></span>url(r&#39;^index/&#39;, App.index, name=&quot;index&quot;),
</pre></div>


<p>注：每次定义完路由规则，在代码的末尾添加逗号</p>
<ul>
<li>在编写路由规则之前必须导入相应的视图</li>
<li>在组织项目时，将app和项目的路由分离</li>
</ul>
<h3 id="模板">模板</h3>
<ul>
<li>
<p>模板是HTML文件，通过占位符来传递视图函数的数据</p>
</li>
<li>
<p>每个app目录下都可以创建templates的文件夹，django会自动从这些app里寻找相应的模板</p>
</li>
</ul>
<h5 id="定义模板">定义模板</h5>
<p>定义index.html模板文件</p>
<div class="codehilite"><pre><span></span><span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="p">&lt;</span><span class="nt">html</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">title</span><span class="p">&gt;</span>首页<span class="p">&lt;/</span><span class="nt">title</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">h1</span><span class="p">&gt;</span>学生列表<span class="p">&lt;/</span><span class="nt">h1</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">ul</span><span class="p">&gt;</span>
<span class="cp">{%</span><span class="k">for</span> <span class="nv">student</span> <span class="k">in</span> <span class="nv">students</span><span class="cp">%}</span>
<span class="p">&lt;</span><span class="nt">li</span><span class="p">&gt;</span>
  <span class="cp">{{</span><span class="nv">student.s_name</span><span class="cp">}}</span>
<span class="p">&lt;/</span><span class="nt">li</span><span class="p">&gt;</span>
<span class="cp">{%</span><span class="k">endfor</span><span class="cp">%}</span>
<span class="p">&lt;/</span><span class="nt">ul</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span>
</pre></div>


<p>定义detail.html模板</p>
<div class="codehilite"><pre><span></span><span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="p">&lt;</span><span class="nt">html</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">title</span><span class="p">&gt;</span>详情页<span class="p">&lt;/</span><span class="nt">title</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">h1</span><span class="p">&gt;</span>学生详情<span class="p">&lt;/</span><span class="nt">h1</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">ul</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">li</span><span class="p">&gt;</span>
  <span class="cp">{{</span><span class="nv">student.s_name</span><span class="cp">}}</span>
  <span class="cp">{{</span><span class="nv">student.s_gender</span><span class="cp">}}</span>
  <span class="cp">{{</span><span class="nv">student.s_content</span><span class="cp">}}</span>
<span class="p">&lt;/</span><span class="nt">li</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">ul</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span>
</pre></div>


<h5 id="使用模板">使用模板</h5>
<ul>
<li>定义视图</li>
</ul>
<div class="codehilite"><pre><span></span>def index(request):
    students = StudentInfo.objects.all()
    return render(request, &quot;index.html&quot;, {&quot;students&quot;:students})

def index_page(request, id):
    student = StudentInfo.objects.get(pk=id)
    return render(request, &quot;detail.html&quot;, {&quot;student&quot;:student})
</pre></div>


<ul>
<li>定义路由</li>
</ul>
<div class="codehilite"><pre><span></span>url(r&#39;index/$&#39;, class_view.index, name=&quot;index&quot;),
url(r&#39;index/(\d+)/$&#39;, class_view.index_page, name=&quot;index_page&quot;),
</pre></div>


<ul>
<li>运行项目</li>
<li>python manage.py runserver</li>
</ul>
<div class="toc">
<ul>
<li><a href="#django是个啥">Django是个啥</a></li>
<li><a href="#开发环境">开发环境</a></li>
<li><a href="#ubuntu系统和命令介绍">Ubuntu系统和命令介绍</a><ul>
<li><a href="#系统设置">系统设置</a></li>
<li><a href="#常用命令">常用命令</a></li>
</ul>
</li>
<li><a href="#bscs">BS/CS</a></li>
<li><a href="#mvcmvt">MVC/MVT</a></li>
<li><a href="#hellodjango项目">HelloDjango项目</a><ul>
<li><a href="#创建虚拟环境">创建虚拟环境</a></li>
<li><a href="#虚拟环境的优点">虚拟环境的优点</a><ul>
<li><a href="#linuxmacos-下">Linux/MacOS 下</a></li>
<li><a href="#windows-下">Windows 下：</a></li>
<li><a href="#虚拟环境使用方法">虚拟环境使用方法：</a></li>
</ul>
</li>
<li><a href="#安装django框架">安装Django框架</a></li>
<li><a href="#创建hellodjango项目">创建HelloDJango项目</a></li>
<li><a href="#django的项目结构">Django的项目结构</a></li>
<li><a href="#settingspy">settings.py</a></li>
<li><a href="#pycharm安装">Pycharm安装</a></li>
<li><a href="#创建数据库">创建数据库</a></li>
<li><a href="#创建视图">创建视图</a></li>
</ul>
</li>
<li><a href="#django请求流程">Django请求流程</a></li>
<li><a href="#设计一个小项目">设计一个小项目</a><ul>
<li><a href="#需求分析">需求分析</a></li>
<li><a href="#数据库配置">数据库配置</a></li>
<li><a href="#创建应用">创建应用</a></li>
<li><a href="#定义模型类">定义模型类</a></li>
<li><a href="#生成数据表">生成数据表</a></li>
<li><a href="#测试数据操作">测试数据操作</a></li>
<li><a href="#关联对象的操作">关联对象的操作</a></li>
<li><a href="#运行项目">运行项目</a></li>
</ul>
</li>
<li><a href="#项目主要部分">项目主要部分</a><ul>
<li><a href="#视图">视图</a></li>
<li><a href="#路由">路由</a></li>
<li><a href="#模板">模板</a><ul>
<li><a href="#定义模板">定义模板</a></li>
<li><a href="#使用模板">使用模板</a></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>

Building prefix dict from the default dictionary ...
Loading model from cache /tmp/jieba.cache
Loading model cost 0.698 seconds.
Prefix dict has been built succesfully.
[pid: 20115|app: 0|req: 55/578] 182.100.26.207 () {42 vars in 737 bytes} [Sat Sep  1 12:55:32 2018] GET /post/3/ => generated 37409 bytes in 1466 msecs (HTTP/1.1 200) 5 headers in 279 bytes (1 switches on core 1)
Not Found: /1.png
[pid: 20112|app: 0|req: 323/579] 182.100.26.207 () {42 vars in 748 bytes} [Sat Sep  1 12:55:33 2018] GET /1.png => generated 3357 bytes in 5 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 0)
Not Found: /注册app.png
[pid: 20114|app: 0|req: 73/580] 182.100.26.207 () {42 vars in 776 bytes} [Sat Sep  1 12:55:34 2018] GET /%E6%B3%A8%E5%86%8Capp.png => generated 3393 bytes in 3 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 0)
Not Found: /django项目目录结构.png
[pid: 20115|app: 0|req: 56/581] 182.100.26.207 () {42 vars in 830 bytes} [Sat Sep  1 12:55:34 2018] GET /django%E9%A1%B9%E7%9B%AE%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84.png => generated 3462 bytes in 21 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 0)
Not Found: /迁移文件.png
[pid: 20114|app: 0|req: 74/582] 182.100.26.207 () {42 vars in 794 bytes} [Sat Sep  1 12:55:34 2018] GET /%E8%BF%81%E7%A7%BB%E6%96%87%E4%BB%B6.png => generated 3414 bytes in 17 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20114|app: 0|req: 75/583] 198.35.46.201 () {28 vars in 312 bytes} [Sat Sep  1 13:38:45 2018] GET / => generated 11494 bytes in 25 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20114|app: 0|req: 76/584] 198.35.46.201 () {28 vars in 312 bytes} [Sat Sep  1 14:38:42 2018] GET / => generated 11494 bytes in 55 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 324/585] 198.35.46.201 () {28 vars in 312 bytes} [Sat Sep  1 15:38:40 2018] GET / => generated 11494 bytes in 27 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 325/586] 198.35.46.201 () {28 vars in 312 bytes} [Sat Sep  1 16:38:42 2018] GET / => generated 11494 bytes in 50 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 326/587] 198.35.46.201 () {28 vars in 312 bytes} [Sat Sep  1 17:38:44 2018] GET / => generated 11494 bytes in 35 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20114|app: 0|req: 77/588] 198.35.46.201 () {28 vars in 312 bytes} [Sat Sep  1 18:38:43 2018] GET / => generated 11494 bytes in 29 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
[pid: 20112|app: 0|req: 327/589] 66.102.6.197 () {38 vars in 637 bytes} [Sat Sep  1 19:02:04 2018] GET /admin/ => generated 0 bytes in 4 msecs (HTTP/1.1 302) 7 headers in 265 bytes (1 switches on core 0)
[pid: 20112|app: 0|req: 328/590] 66.102.6.193 () {38 vars in 674 bytes} [Sat Sep  1 19:02:04 2018] GET /admin/login/?next=/admin/ => generated 1652 bytes in 17 msecs (HTTP/1.1 200) 7 headers in 381 bytes (1 switches on core 1)
Not Found: /favicon.ico
[pid: 20113|app: 0|req: 99/591] 66.102.6.197 () {38 vars in 591 bytes} [Sat Sep  1 19:02:04 2018] GET /favicon.ico => generated 3375 bytes in 4 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 329/592] 198.35.46.201 () {28 vars in 312 bytes} [Sat Sep  1 19:38:46 2018] GET / => generated 11494 bytes in 48 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 100/593] 198.35.46.201 () {28 vars in 312 bytes} [Sat Sep  1 20:38:47 2018] GET / => generated 11494 bytes in 25 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 330/594] 198.35.46.201 () {28 vars in 312 bytes} [Sat Sep  1 21:38:44 2018] GET / => generated 11494 bytes in 24 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 101/595] 198.35.46.201 () {28 vars in 312 bytes} [Sat Sep  1 22:38:47 2018] GET / => generated 11494 bytes in 26 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 331/596] 198.35.46.201 () {28 vars in 312 bytes} [Sat Sep  1 23:38:41 2018] GET / => generated 11494 bytes in 23 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20115|app: 0|req: 57/597] 198.35.46.201 () {28 vars in 312 bytes} [Sun Sep  2 00:38:39 2018] GET / => generated 11494 bytes in 24 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20115|app: 0|req: 58/598] 198.35.46.201 () {28 vars in 312 bytes} [Sun Sep  2 01:38:38 2018] GET / => generated 11494 bytes in 52 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 332/599] 198.35.46.201 () {28 vars in 312 bytes} [Sun Sep  2 02:38:29 2018] GET / => generated 11494 bytes in 28 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20114|app: 0|req: 78/600] 198.35.46.201 () {28 vars in 312 bytes} [Sun Sep  2 03:38:29 2018] GET / => generated 11494 bytes in 39 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 102/601] 198.35.46.201 () {28 vars in 312 bytes} [Sun Sep  2 04:38:28 2018] GET / => generated 11494 bytes in 23 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 333/602] 198.35.46.201 () {28 vars in 312 bytes} [Sun Sep  2 05:38:31 2018] GET / => generated 11494 bytes in 22 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 103/603] 198.35.46.201 () {28 vars in 312 bytes} [Sun Sep  2 06:38:32 2018] GET / => generated 11494 bytes in 27 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 334/604] 198.35.46.201 () {28 vars in 312 bytes} [Sun Sep  2 07:38:33 2018] GET / => generated 11494 bytes in 49 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 104/605] 198.35.46.201 () {28 vars in 312 bytes} [Sun Sep  2 08:38:29 2018] GET / => generated 11494 bytes in 23 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 105/606] 198.35.46.201 () {28 vars in 312 bytes} [Sun Sep  2 09:38:31 2018] GET / => generated 11494 bytes in 37 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20114|app: 0|req: 79/607] 198.35.46.201 () {28 vars in 312 bytes} [Sun Sep  2 10:38:32 2018] GET / => generated 11494 bytes in 84 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 335/608] 198.35.46.201 () {28 vars in 312 bytes} [Sun Sep  2 11:38:30 2018] GET / => generated 11494 bytes in 27 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 106/609] 198.35.46.201 () {28 vars in 312 bytes} [Sun Sep  2 12:38:36 2018] GET / => generated 11494 bytes in 52 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 336/610] 198.35.46.201 () {28 vars in 312 bytes} [Sun Sep  2 13:38:31 2018] GET / => generated 11494 bytes in 25 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 107/611] 198.35.46.201 () {28 vars in 312 bytes} [Sun Sep  2 14:38:31 2018] GET / => generated 11494 bytes in 53 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 337/612] 198.35.46.201 () {28 vars in 312 bytes} [Sun Sep  2 15:38:31 2018] GET / => generated 11494 bytes in 58 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
[pid: 20112|app: 0|req: 338/613] 198.108.66.144 () {34 vars in 390 bytes} [Sun Sep  2 15:53:08 2018] GET / => generated 11494 bytes in 45 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 339/614] 198.35.46.201 () {28 vars in 312 bytes} [Sun Sep  2 16:38:30 2018] GET / => generated 11494 bytes in 26 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 340/615] 198.35.46.201 () {28 vars in 312 bytes} [Sun Sep  2 17:38:33 2018] GET / => generated 11494 bytes in 28 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 341/616] 198.35.46.201 () {28 vars in 312 bytes} [Sun Sep  2 18:38:36 2018] GET / => generated 11494 bytes in 25 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 342/617] 198.35.46.201 () {28 vars in 312 bytes} [Sun Sep  2 19:38:36 2018] GET / => generated 11494 bytes in 25 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20114|app: 0|req: 80/618] 198.35.46.201 () {28 vars in 312 bytes} [Sun Sep  2 20:38:34 2018] GET / => generated 11494 bytes in 28 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20115|app: 0|req: 59/619] 198.35.46.201 () {28 vars in 312 bytes} [Sun Sep  2 21:38:35 2018] GET / => generated 11494 bytes in 24 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
[pid: 20115|app: 0|req: 60/620] 139.162.83.10 () {34 vars in 385 bytes} [Sun Sep  2 22:32:25 2018] GET / => generated 11494 bytes in 23 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 343/621] 198.35.46.201 () {28 vars in 312 bytes} [Sun Sep  2 22:38:33 2018] GET / => generated 11494 bytes in 25 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 344/622] 198.35.46.201 () {28 vars in 312 bytes} [Sun Sep  2 23:38:36 2018] GET / => generated 11494 bytes in 31 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 108/623] 198.35.46.201 () {28 vars in 312 bytes} [Mon Sep  3 00:38:35 2018] GET / => generated 11494 bytes in 34 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20115|app: 0|req: 61/624] 198.35.46.201 () {28 vars in 312 bytes} [Mon Sep  3 01:38:32 2018] GET / => generated 11494 bytes in 22 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20115|app: 0|req: 62/625] 198.35.46.201 () {28 vars in 312 bytes} [Mon Sep  3 02:38:34 2018] GET / => generated 11494 bytes in 29 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 345/626] 198.35.46.201 () {28 vars in 312 bytes} [Mon Sep  3 03:38:34 2018] GET / => generated 11494 bytes in 25 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 346/627] 198.35.46.201 () {28 vars in 312 bytes} [Mon Sep  3 04:38:38 2018] GET / => generated 11494 bytes in 49 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 347/628] 198.35.46.201 () {28 vars in 312 bytes} [Mon Sep  3 05:38:33 2018] GET / => generated 11494 bytes in 50 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 109/629] 198.35.46.201 () {28 vars in 312 bytes} [Mon Sep  3 06:38:33 2018] GET / => generated 11494 bytes in 51 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 348/630] 198.35.46.201 () {28 vars in 312 bytes} [Mon Sep  3 07:38:34 2018] GET / => generated 11494 bytes in 32 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 349/631] 198.35.46.201 () {28 vars in 312 bytes} [Mon Sep  3 08:38:33 2018] GET / => generated 11494 bytes in 28 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
[pid: 20112|app: 0|req: 350/632] 66.102.6.193 () {38 vars in 637 bytes} [Mon Sep  3 08:56:55 2018] GET /admin/ => generated 0 bytes in 3 msecs (HTTP/1.1 302) 7 headers in 265 bytes (1 switches on core 1)
[pid: 20115|app: 0|req: 63/633] 66.102.6.197 () {38 vars in 674 bytes} [Mon Sep  3 08:56:55 2018] GET /admin/login/?next=/admin/ => generated 1652 bytes in 32 msecs (HTTP/1.1 200) 7 headers in 381 bytes (1 switches on core 0)
Not Found: /favicon.ico
[pid: 20115|app: 0|req: 64/634] 66.102.6.195 () {38 vars in 591 bytes} [Mon Sep  3 08:56:55 2018] GET /favicon.ico => generated 3375 bytes in 7 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 351/635] 198.35.46.201 () {28 vars in 312 bytes} [Mon Sep  3 09:38:34 2018] GET / => generated 11494 bytes in 26 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 352/636] 198.35.46.201 () {28 vars in 312 bytes} [Mon Sep  3 10:38:35 2018] GET / => generated 11494 bytes in 22 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 353/637] 198.35.46.201 () {28 vars in 312 bytes} [Mon Sep  3 11:38:33 2018] GET / => generated 11494 bytes in 23 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20112|app: 0|req: 354/638] 198.35.46.201 () {28 vars in 312 bytes} [Mon Sep  3 12:38:33 2018] GET / => generated 11494 bytes in 25 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 110/639] 198.35.46.201 () {28 vars in 312 bytes} [Mon Sep  3 13:38:36 2018] GET / => generated 11494 bytes in 31 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20113|app: 0|req: 111/640] 198.35.46.201 () {28 vars in 312 bytes} [Mon Sep  3 14:38:34 2018] GET / => generated 11494 bytes in 26 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
[pid: 20115|app: 0|req: 65/641] 198.35.46.201 () {28 vars in 312 bytes} [Mon Sep  3 15:38:34 2018] GET / => generated 11494 bytes in 23 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
*** Starting uWSGI 2.0.17 (64bit) on [Tue Sep 18 09:22:11 2018] ***
compiled with version: 4.8.2 20131212 (Red Hat 4.8.2-8) on 09 April 2018 06:14:45
os: Linux-2.6.32-042stab127.2 #1 SMP Thu Jan 4 16:41:44 MSK 2018
nodename: localhost.localdomain
machine: x86_64
clock source: unix
pcre jit disabled
detected number of CPU cores: 1
current working directory: /usr/Even/projects/blogproject
writing pidfile to uwsgi.pid
detected binary path: /usr/Even/.virtualenvs/django/bin/uwsgi
chdir() to /usr/Even/projects/blogproject
your processes number limit is 1024
your memory page size is 4096 bytes
detected max file descriptor number: 4096
lock engine: pthread robust mutexes
thunder lock: disabled (you can enable it with --thunder-lock)
uwsgi socket 0 bound to TCP address 45.62.126.57:8080 fd 3
Python version: 3.6.1 (default, Apr 14 2017, 22:28:18)  [GCC 4.4.7 20120313 (Red Hat 4.4.7-17)]
Python main interpreter initialized at 0x1f7e2a0
python threads support enabled
your server socket listen backlog is limited to 100 connections
your mercy for graceful operations on workers is 60 seconds
mapped 416880 bytes (407 KB) for 8 cores
*** Operational MODE: preforking+threaded ***
WSGI app 0 (mountpoint='') ready in 0 seconds on interpreter 0x1f7e2a0 pid: 366 (default app)
*** uWSGI is running in multiple interpreter mode ***
spawned uWSGI master process (pid: 366)
spawned uWSGI worker 1 (pid: 389, cores: 2)
spawned uWSGI worker 2 (pid: 390, cores: 2)
spawned uWSGI worker 3 (pid: 391, cores: 2)
spawned uWSGI worker 4 (pid: 392, cores: 2)
[pid: 392|app: 0|req: 1/1] 113.109.21.174 () {42 vars in 693 bytes} [Tue Sep 18 09:22:21 2018] GET / => generated 11494 bytes in 1134 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 0)
Not Found: /favicon.ico
[pid: 392|app: 0|req: 2/2] 113.109.21.174 () {42 vars in 678 bytes} [Tue Sep 18 09:22:24 2018] GET /favicon.ico => generated 3375 bytes in 6 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 1)
[pid: 392|app: 0|req: 3/3] 172.105.238.87 () {32 vars in 365 bytes} [Tue Sep 18 09:32:34 2018] GET / => generated 11494 bytes in 36 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
[pid: 389|app: 0|req: 1/4] 198.35.46.201 () {28 vars in 312 bytes} [Tue Sep 18 09:38:34 2018] GET / => generated 11494 bytes in 1174 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 0)
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
SIGINT/SIGQUIT received...killing workers...
worker 1 buried after 1 seconds
worker 2 buried after 1 seconds
worker 3 buried after 1 seconds
worker 4 buried after 1 seconds
goodbye to uWSGI.
*** Starting uWSGI 2.0.17 (64bit) on [Tue Sep 18 10:20:10 2018] ***
compiled with version: 4.8.2 20131212 (Red Hat 4.8.2-8) on 09 April 2018 06:14:45
os: Linux-2.6.32-042stab127.2 #1 SMP Thu Jan 4 16:41:44 MSK 2018
nodename: localhost.localdomain
machine: x86_64
clock source: unix
pcre jit disabled
detected number of CPU cores: 1
current working directory: /usr/Even/projects/blogproject
writing pidfile to uwsgi.pid
detected binary path: /usr/Even/.virtualenvs/django/bin/uwsgi
chdir() to /usr/Even/projects/blogproject
your processes number limit is 1024
your memory page size is 4096 bytes
detected max file descriptor number: 4096
lock engine: pthread robust mutexes
thunder lock: disabled (you can enable it with --thunder-lock)
uwsgi socket 0 bound to TCP address 45.62.126.57:8080 fd 3
Python version: 3.6.1 (default, Apr 14 2017, 22:28:18)  [GCC 4.4.7 20120313 (Red Hat 4.4.7-17)]
Python main interpreter initialized at 0x1dfd2b0
python threads support enabled
your server socket listen backlog is limited to 100 connections
your mercy for graceful operations on workers is 60 seconds
mapped 416880 bytes (407 KB) for 8 cores
*** Operational MODE: preforking+threaded ***
Traceback (most recent call last):
  File "blogproject/wsgi.py", line 16, in <module>
    application = get_wsgi_application()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/wsgi.py", line 13, in get_wsgi_application
    django.setup(set_prefix=False)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/__init__.py", line 22, in setup
    configure_logging(settings.LOGGING_CONFIG, settings.LOGGING)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/conf/__init__.py", line 56, in __getattr__
    self._setup(name)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/conf/__init__.py", line 41, in _setup
    self._wrapped = Settings(settings_module)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/conf/__init__.py", line 110, in __init__
    mod = importlib.import_module(self.SETTINGS_MODULE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 978, in _gcd_import
  File "<frozen importlib._bootstrap>", line 961, in _find_and_load
  File "<frozen importlib._bootstrap>", line 950, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 655, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 205, in _call_with_frames_removed
  File "./blogproject/settings.py", line 160, in <module>
    'release': raven.fetch_git_sha(os.path.abspath(os.pardir)),
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/raven/versioning.py", line 19, in fetch_git_sha
    'Cannot identify HEAD for git repository at %s' % (path,))
raven.exceptions.InvalidGitRepository: Cannot identify HEAD for git repository at /usr/Even/projects
unable to load app 0 (mountpoint='') (callable not found or import error)
*** no app loaded. going in full dynamic mode ***
*** uWSGI is running in multiple interpreter mode ***
spawned uWSGI master process (pid: 1252)
spawned uWSGI worker 1 (pid: 1274, cores: 2)
spawned uWSGI worker 2 (pid: 1275, cores: 2)
spawned uWSGI worker 3 (pid: 1276, cores: 2)
spawned uWSGI worker 4 (pid: 1277, cores: 2)
--- no python application found, check your startup logs for errors ---
[pid: 1274|app: -1|req: -1/1] 198.35.46.201 () {28 vars in 312 bytes} [Tue Sep 18 10:38:34 2018] GET / => generated 21 bytes in 0 msecs (HTTP/1.0 500) 2 headers in 83 bytes (0 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Success [proto/uwsgi.c line 40]
invalid request block size: 21573 (max 4096)...skip
*** Starting uWSGI 2.0.17 (64bit) on [Tue Sep 18 11:28:55 2018] ***
compiled with version: 4.8.2 20131212 (Red Hat 4.8.2-8) on 09 April 2018 06:14:45
os: Linux-2.6.32-042stab127.2 #1 SMP Thu Jan 4 16:41:44 MSK 2018
nodename: localhost.localdomain
machine: x86_64
clock source: unix
pcre jit disabled
detected number of CPU cores: 1
current working directory: /usr/Even/projects/blogproject
writing pidfile to uwsgi.pid
detected binary path: /usr/Even/.virtualenvs/django/bin/uwsgi
chdir() to /usr/Even/projects/blogproject
your processes number limit is 1024
your memory page size is 4096 bytes
detected max file descriptor number: 4096
lock engine: pthread robust mutexes
thunder lock: disabled (you can enable it with --thunder-lock)
probably another instance of uWSGI is running on the same address (45.62.126.57:8080).
bind(): Address already in use [core/socket.c line 769]
--- no python application found, check your startup logs for errors ---
[pid: 1275|app: -1|req: -1/2] 113.109.21.174 () {42 vars in 693 bytes} [Tue Sep 18 11:29:05 2018] GET / => generated 21 bytes in 0 msecs (HTTP/1.1 500) 2 headers in 83 bytes (0 switches on core 1)
--- no python application found, check your startup logs for errors ---
[pid: 1275|app: -1|req: -1/3] 113.109.21.174 () {44 vars in 724 bytes} [Tue Sep 18 11:29:15 2018] GET / => generated 21 bytes in 0 msecs (HTTP/1.1 500) 2 headers in 83 bytes (0 switches on core 1)
--- no python application found, check your startup logs for errors ---
[pid: 1276|app: -1|req: -1/4] 113.109.21.174 () {44 vars in 724 bytes} [Tue Sep 18 11:29:16 2018] GET / => generated 21 bytes in 0 msecs (HTTP/1.1 500) 2 headers in 83 bytes (0 switches on core 0)
*** Starting uWSGI 2.0.17 (64bit) on [Tue Sep 18 11:29:23 2018] ***
compiled with version: 4.8.2 20131212 (Red Hat 4.8.2-8) on 09 April 2018 06:14:45
os: Linux-2.6.32-042stab127.2 #1 SMP Thu Jan 4 16:41:44 MSK 2018
nodename: localhost.localdomain
machine: x86_64
clock source: unix
pcre jit disabled
detected number of CPU cores: 1
current working directory: /usr/Even/projects/blogproject
writing pidfile to uwsgi.pid
detected binary path: /usr/Even/.virtualenvs/django/bin/uwsgi
chdir() to /usr/Even/projects/blogproject
your processes number limit is 1024
your memory page size is 4096 bytes
detected max file descriptor number: 4096
lock engine: pthread robust mutexes
thunder lock: disabled (you can enable it with --thunder-lock)
probably another instance of uWSGI is running on the same address (45.62.126.57:8080).
bind(): Address already in use [core/socket.c line 769]
--- no python application found, check your startup logs for errors ---
[pid: 1277|app: -1|req: -1/5] 113.109.21.174 () {44 vars in 724 bytes} [Tue Sep 18 11:29:28 2018] GET / => generated 21 bytes in 0 msecs (HTTP/1.1 500) 2 headers in 83 bytes (0 switches on core 0)
--- no python application found, check your startup logs for errors ---
[pid: 1275|app: -1|req: -1/6] 113.109.21.174 () {44 vars in 724 bytes} [Tue Sep 18 11:29:30 2018] GET / => generated 21 bytes in 0 msecs (HTTP/1.1 500) 2 headers in 83 bytes (0 switches on core 1)
--- no python application found, check your startup logs for errors ---
[pid: 1275|app: -1|req: -1/7] 113.109.21.174 () {44 vars in 724 bytes} [Tue Sep 18 11:30:49 2018] GET / => generated 21 bytes in 0 msecs (HTTP/1.1 500) 2 headers in 83 bytes (0 switches on core 1)
Tue Sep 18 11:37:11 2018 - uWSGI worker 1 screams: UAAAAAAH my master disconnected: i will kill myself !!!
Tue Sep 18 11:37:11 2018 - uWSGI worker 2 screams: UAAAAAAH my master disconnected: i will kill myself !!!
Tue Sep 18 11:37:11 2018 - uWSGI worker 3 screams: UAAAAAAH my master disconnected: i will kill myself !!!
Tue Sep 18 11:37:11 2018 - uWSGI worker 4 screams: UAAAAAAH my master disconnected: i will kill myself !!!
Tue Sep 18 11:37:11 2018 - uWSGI worker 1 screams: UAAAAAAH my master disconnected: i will kill myself !!!
Tue Sep 18 11:37:11 2018 - uWSGI worker 2 screams: UAAAAAAH my master disconnected: i will kill myself !!!
Tue Sep 18 11:37:11 2018 - uWSGI worker 3 screams: UAAAAAAH my master disconnected: i will kill myself !!!
Tue Sep 18 11:37:11 2018 - uWSGI worker 4 screams: UAAAAAAH my master disconnected: i will kill myself !!!
*** Starting uWSGI 2.0.17 (64bit) on [Tue Sep 18 11:37:23 2018] ***
compiled with version: 4.8.2 20131212 (Red Hat 4.8.2-8) on 09 April 2018 06:14:45
os: Linux-2.6.32-042stab127.2 #1 SMP Thu Jan 4 16:41:44 MSK 2018
nodename: localhost.localdomain
machine: x86_64
clock source: unix
pcre jit disabled
detected number of CPU cores: 1
current working directory: /usr/Even/projects/blogproject
writing pidfile to uwsgi.pid
detected binary path: /usr/Even/.virtualenvs/django/bin/uwsgi
chdir() to /usr/Even/projects/blogproject
your processes number limit is 1024
your memory page size is 4096 bytes
detected max file descriptor number: 4096
lock engine: pthread robust mutexes
thunder lock: disabled (you can enable it with --thunder-lock)
uwsgi socket 0 bound to TCP address 45.62.126.57:8080 fd 3
Python version: 3.6.1 (default, Apr 14 2017, 22:28:18)  [GCC 4.4.7 20120313 (Red Hat 4.4.7-17)]
Python main interpreter initialized at 0x1ec02b0
python threads support enabled
your server socket listen backlog is limited to 100 connections
your mercy for graceful operations on workers is 60 seconds
mapped 416880 bytes (407 KB) for 8 cores
*** Operational MODE: preforking+threaded ***
Traceback (most recent call last):
  File "blogproject/wsgi.py", line 16, in <module>
    application = get_wsgi_application()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/wsgi.py", line 13, in get_wsgi_application
    django.setup(set_prefix=False)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/__init__.py", line 22, in setup
    configure_logging(settings.LOGGING_CONFIG, settings.LOGGING)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/conf/__init__.py", line 56, in __getattr__
    self._setup(name)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/conf/__init__.py", line 41, in _setup
    self._wrapped = Settings(settings_module)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/conf/__init__.py", line 110, in __init__
    mod = importlib.import_module(self.SETTINGS_MODULE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 978, in _gcd_import
  File "<frozen importlib._bootstrap>", line 961, in _find_and_load
  File "<frozen importlib._bootstrap>", line 950, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 655, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 205, in _call_with_frames_removed
  File "./blogproject/settings.py", line 161, in <module>
    'release': raven.fetch_git_sha(os.path.abspath(os.pardir)),
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/raven/versioning.py", line 19, in fetch_git_sha
    'Cannot identify HEAD for git repository at %s' % (path,))
raven.exceptions.InvalidGitRepository: Cannot identify HEAD for git repository at /usr/Even/projects
unable to load app 0 (mountpoint='') (callable not found or import error)
*** no app loaded. going in full dynamic mode ***
*** uWSGI is running in multiple interpreter mode ***
spawned uWSGI master process (pid: 5364)
spawned uWSGI worker 1 (pid: 5386, cores: 2)
spawned uWSGI worker 2 (pid: 5387, cores: 2)
spawned uWSGI worker 3 (pid: 5388, cores: 2)
spawned uWSGI worker 4 (pid: 5389, cores: 2)
--- no python application found, check your startup logs for errors ---
[pid: 5389|app: -1|req: -1/1] 113.109.21.174 () {44 vars in 724 bytes} [Tue Sep 18 11:37:31 2018] GET / => generated 21 bytes in 0 msecs (HTTP/1.1 500) 2 headers in 83 bytes (0 switches on core 0)
--- no python application found, check your startup logs for errors ---
[pid: 5389|app: -1|req: -1/2] 113.109.21.174 () {44 vars in 724 bytes} [Tue Sep 18 11:37:33 2018] GET / => generated 21 bytes in 0 msecs (HTTP/1.1 500) 2 headers in 83 bytes (0 switches on core 0)
--- no python application found, check your startup logs for errors ---
[pid: 5386|app: -1|req: -1/3] 198.35.46.201 () {28 vars in 312 bytes} [Tue Sep 18 11:38:34 2018] GET / => generated 21 bytes in 0 msecs (HTTP/1.0 500) 2 headers in 83 bytes (0 switches on core 0)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
Tue Sep 18 11:41:32 2018 - uWSGI worker 1 screams: UAAAAAAH my master disconnected: i will kill myself !!!
Tue Sep 18 11:41:32 2018 - uWSGI worker 2 screams: UAAAAAAH my master disconnected: i will kill myself !!!
Tue Sep 18 11:41:32 2018 - uWSGI worker 3 screams: UAAAAAAH my master disconnected: i will kill myself !!!
Tue Sep 18 11:41:32 2018 - uWSGI worker 4 screams: UAAAAAAH my master disconnected: i will kill myself !!!
Tue Sep 18 11:41:32 2018 - uWSGI worker 1 screams: UAAAAAAH my master disconnected: i will kill myself !!!
Tue Sep 18 11:41:32 2018 - uWSGI worker 2 screams: UAAAAAAH my master disconnected: i will kill myself !!!
Tue Sep 18 11:41:32 2018 - uWSGI worker 3 screams: UAAAAAAH my master disconnected: i will kill myself !!!
Tue Sep 18 11:41:32 2018 - uWSGI worker 4 screams: UAAAAAAH my master disconnected: i will kill myself !!!
*** Starting uWSGI 2.0.17 (64bit) on [Tue Sep 18 11:41:38 2018] ***
compiled with version: 4.8.2 20131212 (Red Hat 4.8.2-8) on 09 April 2018 06:14:45
os: Linux-2.6.32-042stab127.2 #1 SMP Thu Jan 4 16:41:44 MSK 2018
nodename: localhost.localdomain
machine: x86_64
clock source: unix
pcre jit disabled
detected number of CPU cores: 1
current working directory: /usr/Even/projects/blogproject
writing pidfile to uwsgi.pid
detected binary path: /usr/Even/.virtualenvs/django/bin/uwsgi
chdir() to /usr/Even/projects/blogproject
your processes number limit is 1024
your memory page size is 4096 bytes
detected max file descriptor number: 4096
lock engine: pthread robust mutexes
thunder lock: disabled (you can enable it with --thunder-lock)
uwsgi socket 0 bound to TCP address 45.62.126.57:8080 fd 3
Python version: 3.6.1 (default, Apr 14 2017, 22:28:18)  [GCC 4.4.7 20120313 (Red Hat 4.4.7-17)]
Python main interpreter initialized at 0xe2b2b0
python threads support enabled
your server socket listen backlog is limited to 100 connections
your mercy for graceful operations on workers is 60 seconds
mapped 416880 bytes (407 KB) for 8 cores
*** Operational MODE: preforking+threaded ***
Traceback (most recent call last):
  File "blogproject/wsgi.py", line 16, in <module>
    application = get_wsgi_application()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/wsgi.py", line 13, in get_wsgi_application
    django.setup(set_prefix=False)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/__init__.py", line 22, in setup
    configure_logging(settings.LOGGING_CONFIG, settings.LOGGING)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/conf/__init__.py", line 56, in __getattr__
    self._setup(name)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/conf/__init__.py", line 41, in _setup
    self._wrapped = Settings(settings_module)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/conf/__init__.py", line 110, in __init__
    mod = importlib.import_module(self.SETTINGS_MODULE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 978, in _gcd_import
  File "<frozen importlib._bootstrap>", line 961, in _find_and_load
  File "<frozen importlib._bootstrap>", line 950, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 655, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 205, in _call_with_frames_removed
  File "./blogproject/settings.py", line 160, in <module>
    'release': raven.fetch_git_sha(os.path.abspath(os.pardir)),
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/raven/versioning.py", line 19, in fetch_git_sha
    'Cannot identify HEAD for git repository at %s' % (path,))
raven.exceptions.InvalidGitRepository: Cannot identify HEAD for git repository at /usr/Even/projects
unable to load app 0 (mountpoint='') (callable not found or import error)
*** no app loaded. going in full dynamic mode ***
*** uWSGI is running in multiple interpreter mode ***
spawned uWSGI master process (pid: 5543)
spawned uWSGI worker 1 (pid: 5565, cores: 2)
spawned uWSGI worker 2 (pid: 5566, cores: 2)
spawned uWSGI worker 3 (pid: 5567, cores: 2)
spawned uWSGI worker 4 (pid: 5568, cores: 2)
--- no python application found, check your startup logs for errors ---
[pid: 5568|app: -1|req: -1/1] 113.109.21.174 () {44 vars in 724 bytes} [Tue Sep 18 11:41:41 2018] GET / => generated 21 bytes in 0 msecs (HTTP/1.1 500) 2 headers in 83 bytes (0 switches on core 0)
--- no python application found, check your startup logs for errors ---
[pid: 5568|app: -1|req: -1/2] 113.109.21.174 () {44 vars in 724 bytes} [Tue Sep 18 11:41:45 2018] GET / => generated 21 bytes in 0 msecs (HTTP/1.1 500) 2 headers in 83 bytes (0 switches on core 0)
SIGINT/SIGQUIT received...killing workers...
worker 1 buried after 1 seconds
worker 2 buried after 1 seconds
worker 3 buried after 1 seconds
worker 4 buried after 1 seconds
goodbye to uWSGI.
*** Starting uWSGI 2.0.17 (64bit) on [Tue Sep 18 11:43:49 2018] ***
compiled with version: 4.8.2 20131212 (Red Hat 4.8.2-8) on 09 April 2018 06:14:45
os: Linux-2.6.32-042stab127.2 #1 SMP Thu Jan 4 16:41:44 MSK 2018
nodename: localhost.localdomain
machine: x86_64
clock source: unix
pcre jit disabled
detected number of CPU cores: 1
current working directory: /usr/Even/projects/blogproject
writing pidfile to uwsgi.pid
detected binary path: /usr/Even/.virtualenvs/django/bin/uwsgi
chdir() to /usr/Even/projects/blogproject
your processes number limit is 1024
your memory page size is 4096 bytes
detected max file descriptor number: 4096
lock engine: pthread robust mutexes
thunder lock: disabled (you can enable it with --thunder-lock)
uwsgi socket 0 bound to TCP address 45.62.126.57:8080 fd 3
Python version: 3.6.1 (default, Apr 14 2017, 22:28:18)  [GCC 4.4.7 20120313 (Red Hat 4.4.7-17)]
Python main interpreter initialized at 0x11c72b0
python threads support enabled
your server socket listen backlog is limited to 100 connections
your mercy for graceful operations on workers is 60 seconds
mapped 416880 bytes (407 KB) for 8 cores
*** Operational MODE: preforking+threaded ***
WSGI app 0 (mountpoint='') ready in 0 seconds on interpreter 0x11c72b0 pid: 5659 (default app)
*** uWSGI is running in multiple interpreter mode ***
spawned uWSGI master process (pid: 5659)
spawned uWSGI worker 1 (pid: 5681, cores: 2)
spawned uWSGI worker 2 (pid: 5682, cores: 2)
spawned uWSGI worker 3 (pid: 5683, cores: 2)
spawned uWSGI worker 4 (pid: 5684, cores: 2)
[pid: 5684|app: 0|req: 1/1] 113.109.21.174 () {44 vars in 724 bytes} [Tue Sep 18 11:43:53 2018] GET / => generated 11494 bytes in 894 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 0)
[pid: 5681|app: 0|req: 1/2] 113.109.21.174 () {44 vars in 724 bytes} [Tue Sep 18 11:48:27 2018] GET / => generated 11494 bytes in 896 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 0)
SIGINT/SIGQUIT received...killing workers...
worker 1 buried after 1 seconds
worker 2 buried after 1 seconds
worker 3 buried after 1 seconds
worker 4 buried after 1 seconds
goodbye to uWSGI.
*** Starting uWSGI 2.0.17 (64bit) on [Tue Sep 18 11:48:42 2018] ***
compiled with version: 4.8.2 20131212 (Red Hat 4.8.2-8) on 09 April 2018 06:14:45
os: Linux-2.6.32-042stab127.2 #1 SMP Thu Jan 4 16:41:44 MSK 2018
nodename: localhost.localdomain
machine: x86_64
clock source: unix
pcre jit disabled
detected number of CPU cores: 1
current working directory: /usr/Even/projects/blogproject
writing pidfile to uwsgi.pid
detected binary path: /usr/Even/.virtualenvs/django/bin/uwsgi
chdir() to /usr/Even/projects/blogproject
your processes number limit is 1024
your memory page size is 4096 bytes
detected max file descriptor number: 4096
lock engine: pthread robust mutexes
thunder lock: disabled (you can enable it with --thunder-lock)
uwsgi socket 0 bound to TCP address 45.62.126.57:8080 fd 3
Python version: 3.6.1 (default, Apr 14 2017, 22:28:18)  [GCC 4.4.7 20120313 (Red Hat 4.4.7-17)]
Python main interpreter initialized at 0x23572b0
python threads support enabled
your server socket listen backlog is limited to 100 connections
your mercy for graceful operations on workers is 60 seconds
mapped 416880 bytes (407 KB) for 8 cores
*** Operational MODE: preforking+threaded ***
Traceback (most recent call last):
  File "blogproject/wsgi.py", line 16, in <module>
    application = get_wsgi_application()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/wsgi.py", line 13, in get_wsgi_application
    django.setup(set_prefix=False)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/__init__.py", line 22, in setup
    configure_logging(settings.LOGGING_CONFIG, settings.LOGGING)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/conf/__init__.py", line 56, in __getattr__
    self._setup(name)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/conf/__init__.py", line 41, in _setup
    self._wrapped = Settings(settings_module)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/conf/__init__.py", line 110, in __init__
    mod = importlib.import_module(self.SETTINGS_MODULE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 978, in _gcd_import
  File "<frozen importlib._bootstrap>", line 961, in _find_and_load
  File "<frozen importlib._bootstrap>", line 950, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 655, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 205, in _call_with_frames_removed
  File "./blogproject/settings.py", line 160, in <module>
    'release': raven.fetch_git_sha(os.path.abspath(os.pardir)),
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/raven/versioning.py", line 19, in fetch_git_sha
    'Cannot identify HEAD for git repository at %s' % (path,))
raven.exceptions.InvalidGitRepository: Cannot identify HEAD for git repository at /usr/Even/projects
unable to load app 0 (mountpoint='') (callable not found or import error)
*** no app loaded. going in full dynamic mode ***
*** uWSGI is running in multiple interpreter mode ***
spawned uWSGI master process (pid: 5769)
spawned uWSGI worker 1 (pid: 5791, cores: 2)
spawned uWSGI worker 2 (pid: 5792, cores: 2)
spawned uWSGI worker 3 (pid: 5793, cores: 2)
spawned uWSGI worker 4 (pid: 5794, cores: 2)
--- no python application found, check your startup logs for errors ---
[pid: 5794|app: -1|req: -1/1] 113.109.21.174 () {44 vars in 724 bytes} [Tue Sep 18 11:48:44 2018] GET / => generated 21 bytes in 0 msecs (HTTP/1.1 500) 2 headers in 83 bytes (0 switches on core 0)
--- no python application found, check your startup logs for errors ---
[pid: 5793|app: -1|req: -1/2] 113.109.21.174 () {44 vars in 724 bytes} [Tue Sep 18 11:48:45 2018] GET / => generated 21 bytes in 0 msecs (HTTP/1.1 500) 2 headers in 83 bytes (0 switches on core 0)
--- no python application found, check your startup logs for errors ---
[pid: 5792|app: -1|req: -1/3] 113.109.21.174 () {44 vars in 724 bytes} [Tue Sep 18 11:48:48 2018] GET / => generated 21 bytes in 0 msecs (HTTP/1.1 500) 2 headers in 83 bytes (0 switches on core 0)
SIGINT/SIGQUIT received...killing workers...
worker 1 buried after 1 seconds
worker 2 buried after 1 seconds
worker 3 buried after 1 seconds
worker 4 buried after 1 seconds
goodbye to uWSGI.
*** Starting uWSGI 2.0.17 (64bit) on [Tue Sep 18 11:49:59 2018] ***
compiled with version: 4.8.2 20131212 (Red Hat 4.8.2-8) on 09 April 2018 06:14:45
os: Linux-2.6.32-042stab127.2 #1 SMP Thu Jan 4 16:41:44 MSK 2018
nodename: localhost.localdomain
machine: x86_64
clock source: unix
pcre jit disabled
detected number of CPU cores: 1
current working directory: /usr/Even/projects/blogproject
writing pidfile to uwsgi.pid
detected binary path: /usr/Even/.virtualenvs/django/bin/uwsgi
chdir() to /usr/Even/projects/blogproject
your processes number limit is 1024
your memory page size is 4096 bytes
detected max file descriptor number: 4096
lock engine: pthread robust mutexes
thunder lock: disabled (you can enable it with --thunder-lock)
uwsgi socket 0 bound to TCP address 45.62.126.57:8080 fd 3
Python version: 3.6.1 (default, Apr 14 2017, 22:28:18)  [GCC 4.4.7 20120313 (Red Hat 4.4.7-17)]
Python main interpreter initialized at 0xfcd2b0
python threads support enabled
your server socket listen backlog is limited to 100 connections
your mercy for graceful operations on workers is 60 seconds
mapped 416880 bytes (407 KB) for 8 cores
*** Operational MODE: preforking+threaded ***
Traceback (most recent call last):
  File "blogproject/wsgi.py", line 16, in <module>
    application = get_wsgi_application()
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/core/wsgi.py", line 13, in get_wsgi_application
    django.setup(set_prefix=False)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/__init__.py", line 22, in setup
    configure_logging(settings.LOGGING_CONFIG, settings.LOGGING)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/conf/__init__.py", line 56, in __getattr__
    self._setup(name)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/conf/__init__.py", line 41, in _setup
    self._wrapped = Settings(settings_module)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/django/conf/__init__.py", line 110, in __init__
    mod = importlib.import_module(self.SETTINGS_MODULE)
  File "/usr/Even/.virtualenvs/django/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 978, in _gcd_import
  File "<frozen importlib._bootstrap>", line 961, in _find_and_load
  File "<frozen importlib._bootstrap>", line 950, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 655, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 205, in _call_with_frames_removed
  File "./blogproject/settings.py", line 161, in <module>
    'release': raven.fetch_git_sha(os.path.abspath(os.pardir)),
  File "/usr/Even/.virtualenvs/django/lib/python3.6/site-packages/raven/versioning.py", line 19, in fetch_git_sha
    'Cannot identify HEAD for git repository at %s' % (path,))
raven.exceptions.InvalidGitRepository: Cannot identify HEAD for git repository at /usr/Even/projects
unable to load app 0 (mountpoint='') (callable not found or import error)
*** no app loaded. going in full dynamic mode ***
*** uWSGI is running in multiple interpreter mode ***
spawned uWSGI master process (pid: 5928)
spawned uWSGI worker 1 (pid: 5950, cores: 2)
spawned uWSGI worker 2 (pid: 5951, cores: 2)
spawned uWSGI worker 3 (pid: 5952, cores: 2)
spawned uWSGI worker 4 (pid: 5953, cores: 2)
--- no python application found, check your startup logs for errors ---
[pid: 5951|app: -1|req: -1/1] 113.109.21.174 () {44 vars in 724 bytes} [Tue Sep 18 11:50:01 2018] GET / => generated 21 bytes in 0 msecs (HTTP/1.1 500) 2 headers in 83 bytes (0 switches on core 0)
--- no python application found, check your startup logs for errors ---
[pid: 5953|app: -1|req: -1/2] 113.109.21.174 () {44 vars in 724 bytes} [Tue Sep 18 11:50:02 2018] GET / => generated 21 bytes in 0 msecs (HTTP/1.1 500) 2 headers in 83 bytes (0 switches on core 0)
--- no python application found, check your startup logs for errors ---
[pid: 5952|app: -1|req: -1/3] 113.109.21.174 () {44 vars in 724 bytes} [Tue Sep 18 11:50:03 2018] GET / => generated 21 bytes in 0 msecs (HTTP/1.1 500) 2 headers in 83 bytes (0 switches on core 0)
SIGINT/SIGQUIT received...killing workers...
worker 1 buried after 1 seconds
worker 2 buried after 1 seconds
worker 3 buried after 1 seconds
worker 4 buried after 1 seconds
goodbye to uWSGI.
*** Starting uWSGI 2.0.17 (64bit) on [Tue Sep 18 11:57:06 2018] ***
compiled with version: 4.8.2 20131212 (Red Hat 4.8.2-8) on 09 April 2018 06:14:45
os: Linux-2.6.32-042stab127.2 #1 SMP Thu Jan 4 16:41:44 MSK 2018
nodename: localhost.localdomain
machine: x86_64
clock source: unix
pcre jit disabled
detected number of CPU cores: 1
current working directory: /usr/Even/projects/blogproject
writing pidfile to uwsgi.pid
detected binary path: /usr/Even/.virtualenvs/django/bin/uwsgi
chdir() to /usr/Even/projects/blogproject
your processes number limit is 1024
your memory page size is 4096 bytes
detected max file descriptor number: 4096
lock engine: pthread robust mutexes
thunder lock: disabled (you can enable it with --thunder-lock)
uwsgi socket 0 bound to TCP address 45.62.126.57:8080 fd 3
Python version: 3.6.1 (default, Apr 14 2017, 22:28:18)  [GCC 4.4.7 20120313 (Red Hat 4.4.7-17)]
Python main interpreter initialized at 0x22bb2b0
python threads support enabled
your server socket listen backlog is limited to 100 connections
your mercy for graceful operations on workers is 60 seconds
mapped 416880 bytes (407 KB) for 8 cores
*** Operational MODE: preforking+threaded ***
WSGI app 0 (mountpoint='') ready in 0 seconds on interpreter 0x22bb2b0 pid: 6082 (default app)
*** uWSGI is running in multiple interpreter mode ***
spawned uWSGI master process (pid: 6082)
spawned uWSGI worker 1 (pid: 6104, cores: 2)
spawned uWSGI worker 2 (pid: 6105, cores: 2)
spawned uWSGI worker 3 (pid: 6106, cores: 2)
spawned uWSGI worker 4 (pid: 6107, cores: 2)
[pid: 6107|app: 0|req: 1/1] 113.109.21.174 () {44 vars in 724 bytes} [Tue Sep 18 11:57:08 2018] GET / => generated 11494 bytes in 999 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 0)
Tue Sep 18 11:57:38 2018 - uWSGI worker 1 screams: UAAAAAAH my master disconnected: i will kill myself !!!
Tue Sep 18 11:57:38 2018 - uWSGI worker 2 screams: UAAAAAAH my master disconnected: i will kill myself !!!
Tue Sep 18 11:57:38 2018 - uWSGI worker 3 screams: UAAAAAAH my master disconnected: i will kill myself !!!
Tue Sep 18 11:57:38 2018 - uWSGI worker 4 screams: UAAAAAAH my master disconnected: i will kill myself !!!
Tue Sep 18 11:57:38 2018 - uWSGI worker 1 screams: UAAAAAAH my master disconnected: i will kill myself !!!
Tue Sep 18 11:57:38 2018 - uWSGI worker 2 screams: UAAAAAAH my master disconnected: i will kill myself !!!
Tue Sep 18 11:57:38 2018 - uWSGI worker 3 screams: UAAAAAAH my master disconnected: i will kill myself !!!
Tue Sep 18 11:57:38 2018 - uWSGI worker 4 screams: UAAAAAAH my master disconnected: i will kill myself !!!
*** Starting uWSGI 2.0.17 (64bit) on [Tue Sep 18 11:59:06 2018] ***
compiled with version: 4.8.2 20131212 (Red Hat 4.8.2-8) on 09 April 2018 06:14:45
os: Linux-2.6.32-042stab127.2 #1 SMP Thu Jan 4 16:41:44 MSK 2018
nodename: localhost.localdomain
machine: x86_64
clock source: unix
pcre jit disabled
detected number of CPU cores: 1
current working directory: /usr/Even/projects/blogproject
writing pidfile to uwsgi.pid
detected binary path: /usr/Even/.virtualenvs/django/bin/uwsgi
chdir() to /usr/Even/projects/blogproject
your processes number limit is 1024
your memory page size is 4096 bytes
detected max file descriptor number: 4096
lock engine: pthread robust mutexes
thunder lock: disabled (you can enable it with --thunder-lock)
uwsgi socket 0 bound to TCP address 45.62.126.57:8080 fd 3
Python version: 3.6.1 (default, Apr 14 2017, 22:28:18)  [GCC 4.4.7 20120313 (Red Hat 4.4.7-17)]
Python main interpreter initialized at 0x198d2b0
python threads support enabled
your server socket listen backlog is limited to 100 connections
your mercy for graceful operations on workers is 60 seconds
mapped 416880 bytes (407 KB) for 8 cores
*** Operational MODE: preforking+threaded ***
WSGI app 0 (mountpoint='') ready in 0 seconds on interpreter 0x198d2b0 pid: 6176 (default app)
*** uWSGI is running in multiple interpreter mode ***
spawned uWSGI master process (pid: 6176)
spawned uWSGI worker 1 (pid: 6198, cores: 2)
spawned uWSGI worker 2 (pid: 6199, cores: 2)
spawned uWSGI worker 3 (pid: 6200, cores: 2)
spawned uWSGI worker 4 (pid: 6201, cores: 2)
[pid: 6198|app: 0|req: 1/1] 113.109.21.174 () {44 vars in 724 bytes} [Tue Sep 18 11:59:09 2018] GET / => generated 11494 bytes in 1111 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 0)
[pid: 6198|app: 0|req: 2/2] 113.109.21.174 () {44 vars in 724 bytes} [Tue Sep 18 12:04:32 2018] GET / => generated 11494 bytes in 32 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 1)
SIGINT/SIGQUIT received...killing workers...
worker 1 buried after 1 seconds
worker 2 buried after 1 seconds
worker 3 buried after 1 seconds
worker 4 buried after 1 seconds
goodbye to uWSGI.
*** Starting uWSGI 2.0.17 (64bit) on [Tue Sep 18 12:05:03 2018] ***
compiled with version: 4.8.2 20131212 (Red Hat 4.8.2-8) on 09 April 2018 06:14:45
os: Linux-2.6.32-042stab127.2 #1 SMP Thu Jan 4 16:41:44 MSK 2018
nodename: localhost.localdomain
machine: x86_64
clock source: unix
pcre jit disabled
detected number of CPU cores: 1
current working directory: /usr/Even/projects/blogproject
writing pidfile to uwsgi.pid
detected binary path: /usr/Even/.virtualenvs/django/bin/uwsgi
chdir() to /usr/Even/projects/blogproject
your processes number limit is 1024
your memory page size is 4096 bytes
detected max file descriptor number: 4096
lock engine: pthread robust mutexes
thunder lock: disabled (you can enable it with --thunder-lock)
uwsgi socket 0 bound to TCP address 45.62.126.57:8080 fd 3
Python version: 3.6.1 (default, Apr 14 2017, 22:28:18)  [GCC 4.4.7 20120313 (Red Hat 4.4.7-17)]
Python main interpreter initialized at 0x26272b0
python threads support enabled
your server socket listen backlog is limited to 100 connections
your mercy for graceful operations on workers is 60 seconds
mapped 416880 bytes (407 KB) for 8 cores
*** Operational MODE: preforking+threaded ***
DEBUG  2018-09-18 12:05:03,937  base 6330  139650091243456  Configuring Raven for host: https://sentry.io
WSGI app 0 (mountpoint='') ready in 0 seconds on interpreter 0x26272b0 pid: 6330 (default app)
*** uWSGI is running in multiple interpreter mode ***
spawned uWSGI master process (pid: 6330)
spawned uWSGI worker 1 (pid: 6352, cores: 2)
spawned uWSGI worker 2 (pid: 6353, cores: 2)
spawned uWSGI worker 3 (pid: 6354, cores: 2)
spawned uWSGI worker 4 (pid: 6355, cores: 2)
[pid: 6355|app: 0|req: 1/1] 113.109.21.174 () {44 vars in 724 bytes} [Tue Sep 18 12:05:07 2018] GET / => generated 11494 bytes in 1048 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 0)
[pid: 6355|app: 0|req: 2/2] 113.109.21.174 () {42 vars in 699 bytes} [Tue Sep 18 12:06:14 2018] GET /999 => generated 3351 bytes in 4 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 1)
SIGINT/SIGQUIT received...killing workers...
worker 1 buried after 1 seconds
worker 2 buried after 1 seconds
worker 3 buried after 1 seconds
worker 4 buried after 1 seconds
goodbye to uWSGI.
*** Starting uWSGI 2.0.17 (64bit) on [Tue Sep 18 12:09:51 2018] ***
compiled with version: 4.8.2 20131212 (Red Hat 4.8.2-8) on 09 April 2018 06:14:45
os: Linux-2.6.32-042stab127.2 #1 SMP Thu Jan 4 16:41:44 MSK 2018
nodename: localhost.localdomain
machine: x86_64
clock source: unix
pcre jit disabled
detected number of CPU cores: 1
current working directory: /usr/Even/projects/blogproject
writing pidfile to uwsgi.pid
detected binary path: /usr/Even/.virtualenvs/django/bin/uwsgi
chdir() to /usr/Even/projects/blogproject
your processes number limit is 1024
your memory page size is 4096 bytes
detected max file descriptor number: 4096
lock engine: pthread robust mutexes
thunder lock: disabled (you can enable it with --thunder-lock)
uwsgi socket 0 bound to TCP address 45.62.126.57:8080 fd 3
Python version: 3.6.1 (default, Apr 14 2017, 22:28:18)  [GCC 4.4.7 20120313 (Red Hat 4.4.7-17)]
Python main interpreter initialized at 0x261a2b0
python threads support enabled
your server socket listen backlog is limited to 100 connections
your mercy for graceful operations on workers is 60 seconds
mapped 416880 bytes (407 KB) for 8 cores
*** Operational MODE: preforking+threaded ***
DEBUG  2018-09-18 12:09:51,495  base 6454  140632537331648  Configuring Raven for host: https://sentry.io
WSGI app 0 (mountpoint='') ready in 0 seconds on interpreter 0x261a2b0 pid: 6454 (default app)
*** uWSGI is running in multiple interpreter mode ***
spawned uWSGI master process (pid: 6454)
spawned uWSGI worker 1 (pid: 6477, cores: 2)
spawned uWSGI worker 2 (pid: 6478, cores: 2)
spawned uWSGI worker 3 (pid: 6479, cores: 2)
spawned uWSGI worker 4 (pid: 6480, cores: 2)
[pid: 6480|app: 0|req: 1/1] 113.109.21.174 () {44 vars in 730 bytes} [Tue Sep 18 12:09:56 2018] GET /999 => generated 3351 bytes in 984 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 0)
[pid: 6480|app: 0|req: 2/2] 113.109.21.174 () {42 vars in 693 bytes} [Tue Sep 18 12:10:17 2018] GET / => generated 11494 bytes in 91 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 1)
```python
def say_hello():
    pass

```
------------------------------------------------------------------------------------------------------------------------
<div class="codehilite"><pre><span></span><span class="k">def</span> <span class="nf">say_hello</span><span class="p">():</span>
    <span class="k">pass</span>
</pre></div>
<div class="toc">
<ul></ul>
</div>

Building prefix dict from the default dictionary ...
Loading model from cache /tmp/jieba.cache
Loading model cost 0.722 seconds.
Prefix dict has been built succesfully.
[pid: 6477|app: 0|req: 1/3] 113.109.21.174 () {44 vars in 751 bytes} [Tue Sep 18 12:10:19 2018] GET /post/5/ => generated 11542 bytes in 1840 msecs (HTTP/1.1 200) 5 headers in 279 bytes (1 switches on core 0)
SIGINT/SIGQUIT received...killing workers...
worker 1 buried after 1 seconds
worker 2 buried after 1 seconds
worker 3 buried after 1 seconds
worker 4 buried after 1 seconds
goodbye to uWSGI.
*** Starting uWSGI 2.0.17 (64bit) on [Tue Sep 18 12:11:26 2018] ***
compiled with version: 4.8.2 20131212 (Red Hat 4.8.2-8) on 09 April 2018 06:14:45
os: Linux-2.6.32-042stab127.2 #1 SMP Thu Jan 4 16:41:44 MSK 2018
nodename: localhost.localdomain
machine: x86_64
clock source: unix
pcre jit disabled
detected number of CPU cores: 1
current working directory: /usr/Even/projects/blogproject
writing pidfile to uwsgi.pid
detected binary path: /usr/Even/.virtualenvs/django/bin/uwsgi
chdir() to /usr/Even/projects/blogproject
your processes number limit is 1024
your memory page size is 4096 bytes
detected max file descriptor number: 4096
lock engine: pthread robust mutexes
thunder lock: disabled (you can enable it with --thunder-lock)
uwsgi socket 0 bound to TCP address 45.62.126.57:8080 fd 3
Python version: 3.6.1 (default, Apr 14 2017, 22:28:18)  [GCC 4.4.7 20120313 (Red Hat 4.4.7-17)]
Python main interpreter initialized at 0x22eb2b0
python threads support enabled
your server socket listen backlog is limited to 100 connections
your mercy for graceful operations on workers is 60 seconds
mapped 416880 bytes (407 KB) for 8 cores
*** Operational MODE: preforking+threaded ***
DEBUG  2018-09-18 12:11:27,160  base 6553  140715749316544  Configuring Raven for host: https://sentry.io
WSGI app 0 (mountpoint='') ready in 1 seconds on interpreter 0x22eb2b0 pid: 6553 (default app)
*** uWSGI is running in multiple interpreter mode ***
spawned uWSGI master process (pid: 6553)
spawned uWSGI worker 1 (pid: 6575, cores: 2)
spawned uWSGI worker 2 (pid: 6576, cores: 2)
spawned uWSGI worker 3 (pid: 6577, cores: 2)
spawned uWSGI worker 4 (pid: 6578, cores: 2)
```python
def say_hello():
    pass

```
------------------------------------------------------------------------------------------------------------------------
<div class="codehilite"><pre><span></span><span class="k">def</span> <span class="nf">say_hello</span><span class="p">():</span>
    <span class="k">pass</span>
</pre></div>
<div class="toc">
<ul></ul>
</div>

Building prefix dict from the default dictionary ...
Loading model from cache /tmp/jieba.cache
Loading model cost 0.807 seconds.
Prefix dict has been built succesfully.
[pid: 6578|app: 0|req: 1/1] 113.109.21.174 () {46 vars in 827 bytes} [Tue Sep 18 12:11:30 2018] GET /post/5/ => generated 11542 bytes in 1956 msecs (HTTP/1.1 200) 5 headers in 279 bytes (1 switches on core 0)
[pid: 6578|app: 0|req: 2/2] 113.109.21.174 () {44 vars in 808 bytes} [Tue Sep 18 12:11:49 2018] GET /post/5/dafafa => generated 3381 bytes in 3 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 1)
[pid: 6578|app: 0|req: 3/3] 198.35.46.201 () {28 vars in 312 bytes} [Tue Sep 18 12:38:33 2018] GET / => generated 11494 bytes in 31 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
[pid: 6575|app: 0|req: 1/4] 198.35.46.201 () {28 vars in 312 bytes} [Tue Sep 18 13:38:34 2018] GET / => generated 11494 bytes in 979 msecs (HTTP/1.0 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
uwsgi_proto_uwsgi_parser(): Resource temporarily unavailable [proto/uwsgi.c line 40]
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
[pid: 6575|app: 0|req: 2/5] 113.109.21.174 () {46 vars in 839 bytes} [Tue Sep 18 13:51:17 2018] GET /post/5/dafafa => generated 3381 bytes in 4 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 1)
SIGINT/SIGQUIT received...killing workers...
worker 1 buried after 1 seconds
worker 2 buried after 1 seconds
worker 3 buried after 1 seconds
worker 4 buried after 1 seconds
goodbye to uWSGI.
*** Starting uWSGI 2.0.17 (64bit) on [Tue Sep 18 13:52:48 2018] ***
compiled with version: 4.8.2 20131212 (Red Hat 4.8.2-8) on 09 April 2018 06:14:45
os: Linux-2.6.32-042stab127.2 #1 SMP Thu Jan 4 16:41:44 MSK 2018
nodename: localhost.localdomain
machine: x86_64
clock source: unix
pcre jit disabled
detected number of CPU cores: 1
current working directory: /usr/Even/projects/blogproject
writing pidfile to uwsgi.pid
detected binary path: /usr/Even/.virtualenvs/django/bin/uwsgi
chdir() to /usr/Even/projects/blogproject
your processes number limit is 1024
your memory page size is 4096 bytes
detected max file descriptor number: 4096
lock engine: pthread robust mutexes
thunder lock: disabled (you can enable it with --thunder-lock)
uwsgi socket 0 bound to TCP address 45.62.126.57:8080 fd 3
Python version: 3.6.1 (default, Apr 14 2017, 22:28:18)  [GCC 4.4.7 20120313 (Red Hat 4.4.7-17)]
Python main interpreter initialized at 0xe5e2b0
python threads support enabled
your server socket listen backlog is limited to 100 connections
your mercy for graceful operations on workers is 60 seconds
mapped 416880 bytes (407 KB) for 8 cores
*** Operational MODE: preforking+threaded ***
WSGI app 0 (mountpoint='') ready in 0 seconds on interpreter 0xe5e2b0 pid: 7418 (default app)
*** uWSGI is running in multiple interpreter mode ***
spawned uWSGI master process (pid: 7418)
spawned uWSGI worker 1 (pid: 7440, cores: 2)
spawned uWSGI worker 2 (pid: 7441, cores: 2)
spawned uWSGI worker 3 (pid: 7442, cores: 2)
spawned uWSGI worker 4 (pid: 7443, cores: 2)
[pid: 7443|app: 0|req: 1/1] 113.109.21.174 () {46 vars in 839 bytes} [Tue Sep 18 13:52:50 2018] GET /post/5/dafafa => generated 3381 bytes in 966 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 0)
[pid: 7443|app: 0|req: 2/2] 113.109.21.174 () {44 vars in 782 bytes} [Tue Sep 18 13:53:05 2018] GET / => generated 11494 bytes in 66 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 1)
invalid request block size: 21573 (max 4096)...skip
SIGINT/SIGQUIT received...killing workers...
worker 1 buried after 1 seconds
worker 2 buried after 1 seconds
worker 3 buried after 1 seconds
worker 4 buried after 1 seconds
goodbye to uWSGI.
*** Starting uWSGI 2.0.17 (64bit) on [Tue Sep 18 13:57:22 2018] ***
compiled with version: 4.8.2 20131212 (Red Hat 4.8.2-8) on 09 April 2018 06:14:45
os: Linux-2.6.32-042stab127.2 #1 SMP Thu Jan 4 16:41:44 MSK 2018
nodename: localhost.localdomain
machine: x86_64
clock source: unix
pcre jit disabled
detected number of CPU cores: 1
current working directory: /usr/Even/projects/blogproject
writing pidfile to uwsgi.pid
detected binary path: /usr/Even/.virtualenvs/django/bin/uwsgi
chdir() to /usr/Even/projects/blogproject
your processes number limit is 1024
your memory page size is 4096 bytes
detected max file descriptor number: 4096
lock engine: pthread robust mutexes
thunder lock: disabled (you can enable it with --thunder-lock)
uwsgi socket 0 bound to TCP address 45.62.126.57:8080 fd 3
Python version: 3.6.1 (default, Apr 14 2017, 22:28:18)  [GCC 4.4.7 20120313 (Red Hat 4.4.7-17)]
Python main interpreter initialized at 0x1dd92b0
python threads support enabled
your server socket listen backlog is limited to 100 connections
your mercy for graceful operations on workers is 60 seconds
mapped 416880 bytes (407 KB) for 8 cores
*** Operational MODE: preforking+threaded ***
WSGI app 0 (mountpoint='') ready in 1 seconds on interpreter 0x1dd92b0 pid: 7550 (default app)
*** uWSGI is running in multiple interpreter mode ***
spawned uWSGI master process (pid: 7550)
spawned uWSGI worker 1 (pid: 7573, cores: 2)
spawned uWSGI worker 2 (pid: 7574, cores: 2)
spawned uWSGI worker 3 (pid: 7575, cores: 2)
spawned uWSGI worker 4 (pid: 7576, cores: 2)
[pid: 7576|app: 0|req: 1/1] 113.109.21.174 () {46 vars in 813 bytes} [Tue Sep 18 13:57:28 2018] GET / => generated 11494 bytes in 1056 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 0)
Building prefix dict from the default dictionary ...
Loading model from cache /tmp/jieba.cache
Loading model cost 0.838 seconds.
Prefix dict has been built succesfully.
[pid: 7573|app: 0|req: 1/2] 113.109.21.174 () {46 vars in 851 bytes} [Tue Sep 18 13:57:34 2018] GET /search/?q=111 => generated 9786 bytes in 1958 msecs (HTTP/1.1 200) 3 headers in 110 bytes (1 switches on core 0)
[pid: 7573|app: 0|req: 2/3] 113.109.21.174 () {46 vars in 894 bytes} [Tue Sep 18 13:57:50 2018] GET /search/?q=%E6%96%87%E4%BB%B6 => generated 10214 bytes in 50 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 1)
SIGINT/SIGQUIT received...killing workers...
worker 1 buried after 1 seconds
worker 2 buried after 1 seconds
worker 3 buried after 1 seconds
worker 4 buried after 1 seconds
goodbye to uWSGI.
*** Starting uWSGI 2.0.17 (64bit) on [Tue Sep 18 13:58:57 2018] ***
compiled with version: 4.8.2 20131212 (Red Hat 4.8.2-8) on 09 April 2018 06:14:45
os: Linux-2.6.32-042stab127.2 #1 SMP Thu Jan 4 16:41:44 MSK 2018
nodename: localhost.localdomain
machine: x86_64
clock source: unix
pcre jit disabled
detected number of CPU cores: 1
current working directory: /usr/Even/projects/blogproject
writing pidfile to uwsgi.pid
detected binary path: /usr/Even/.virtualenvs/django/bin/uwsgi
chdir() to /usr/Even/projects/blogproject
your processes number limit is 1024
your memory page size is 4096 bytes
detected max file descriptor number: 4096
lock engine: pthread robust mutexes
thunder lock: disabled (you can enable it with --thunder-lock)
uwsgi socket 0 bound to TCP address 45.62.126.57:8080 fd 3
Python version: 3.6.1 (default, Apr 14 2017, 22:28:18)  [GCC 4.4.7 20120313 (Red Hat 4.4.7-17)]
Python main interpreter initialized at 0xc972b0
python threads support enabled
your server socket listen backlog is limited to 100 connections
your mercy for graceful operations on workers is 60 seconds
mapped 416880 bytes (407 KB) for 8 cores
*** Operational MODE: preforking+threaded ***
WSGI app 0 (mountpoint='') ready in 0 seconds on interpreter 0xc972b0 pid: 7637 (default app)
*** uWSGI is running in multiple interpreter mode ***
spawned uWSGI master process (pid: 7637)
spawned uWSGI worker 1 (pid: 7659, cores: 2)
spawned uWSGI worker 2 (pid: 7660, cores: 2)
spawned uWSGI worker 3 (pid: 7661, cores: 2)
spawned uWSGI worker 4 (pid: 7662, cores: 2)
Building prefix dict from the default dictionary ...
Loading model from cache /tmp/jieba.cache
Loading model cost 0.793 seconds.
Prefix dict has been built succesfully.
[pid: 7662|app: 0|req: 1/1] 113.109.21.174 () {48 vars in 925 bytes} [Tue Sep 18 13:59:00 2018] GET /search/?q=%E6%96%87%E4%BB%B6 => generated 10214 bytes in 1801 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 0)
[pid: 7662|app: 0|req: 2/2] 113.109.21.174 () {46 vars in 854 bytes} [Tue Sep 18 13:59:02 2018] GET / => generated 11494 bytes in 42 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 1)
[pid: 7659|app: 0|req: 1/3] 113.109.21.174 () {46 vars in 848 bytes} [Tue Sep 18 13:59:05 2018] GET /category/1/ => generated 10227 bytes in 1305 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 0)
[pid: 7659|app: 0|req: 2/4] 113.109.21.174 () {46 vars in 849 bytes} [Tue Sep 18 13:59:09 2018] GET /tag/1/ => generated 75713 bytes in 251 msecs (HTTP/1.1 500) 4 headers in 129 bytes (1 switches on core 1)
[pid: 7659|app: 0|req: 3/5] 113.109.21.174 () {48 vars in 880 bytes} [Tue Sep 18 14:00:25 2018] GET /tag/1/ => generated 75866 bytes in 44 msecs (HTTP/1.1 500) 4 headers in 129 bytes (1 switches on core 0)
[pid: 7659|app: 0|req: 4/6] 113.109.21.174 () {48 vars in 880 bytes} [Tue Sep 18 14:00:27 2018] GET /tag/1/ => generated 75866 bytes in 101 msecs (HTTP/1.1 500) 4 headers in 129 bytes (1 switches on core 1)
[pid: 7659|app: 0|req: 5/7] 113.109.21.174 () {46 vars in 825 bytes} [Tue Sep 18 14:00:30 2018] GET /tag/1/ => generated 75707 bytes in 218 msecs (HTTP/1.1 500) 4 headers in 129 bytes (1 switches on core 0)
SIGINT/SIGQUIT received...killing workers...
worker 1 buried after 1 seconds
worker 2 buried after 1 seconds
worker 3 buried after 1 seconds
worker 4 buried after 1 seconds
goodbye to uWSGI.
*** Starting uWSGI 2.0.17 (64bit) on [Tue Sep 18 14:00:52 2018] ***
compiled with version: 4.8.2 20131212 (Red Hat 4.8.2-8) on 09 April 2018 06:14:45
os: Linux-2.6.32-042stab127.2 #1 SMP Thu Jan 4 16:41:44 MSK 2018
nodename: localhost.localdomain
machine: x86_64
clock source: unix
pcre jit disabled
detected number of CPU cores: 1
current working directory: /usr/Even/projects/blogproject
writing pidfile to uwsgi.pid
detected binary path: /usr/Even/.virtualenvs/django/bin/uwsgi
chdir() to /usr/Even/projects/blogproject
your processes number limit is 1024
your memory page size is 4096 bytes
detected max file descriptor number: 4096
lock engine: pthread robust mutexes
thunder lock: disabled (you can enable it with --thunder-lock)
uwsgi socket 0 bound to TCP address 45.62.126.57:8080 fd 3
Python version: 3.6.1 (default, Apr 14 2017, 22:28:18)  [GCC 4.4.7 20120313 (Red Hat 4.4.7-17)]
Python main interpreter initialized at 0x17452b0
python threads support enabled
your server socket listen backlog is limited to 100 connections
your mercy for graceful operations on workers is 60 seconds
mapped 416880 bytes (407 KB) for 8 cores
*** Operational MODE: preforking+threaded ***
WSGI app 0 (mountpoint='') ready in 1 seconds on interpreter 0x17452b0 pid: 7730 (default app)
*** uWSGI is running in multiple interpreter mode ***
spawned uWSGI master process (pid: 7730)
spawned uWSGI worker 1 (pid: 7752, cores: 2)
spawned uWSGI worker 2 (pid: 7753, cores: 2)
spawned uWSGI worker 3 (pid: 7754, cores: 2)
spawned uWSGI worker 4 (pid: 7755, cores: 2)
[pid: 7755|app: 0|req: 1/1] 113.109.21.174 () {46 vars in 825 bytes} [Tue Sep 18 14:00:54 2018] GET /tag/1/ => generated 11323 bytes in 1066 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 0)
SIGINT/SIGQUIT received...killing workers...
worker 1 buried after 1 seconds
worker 2 buried after 1 seconds
worker 3 buried after 1 seconds
worker 4 buried after 1 seconds
goodbye to uWSGI.
*** Starting uWSGI 2.0.17 (64bit) on [Tue Sep 18 14:11:23 2018] ***
compiled with version: 4.8.2 20131212 (Red Hat 4.8.2-8) on 09 April 2018 06:14:45
os: Linux-2.6.32-042stab127.2 #1 SMP Thu Jan 4 16:41:44 MSK 2018
nodename: localhost.localdomain
machine: x86_64
clock source: unix
pcre jit disabled
detected number of CPU cores: 1
current working directory: /usr/Even/projects/blogproject
writing pidfile to uwsgi.pid
detected binary path: /usr/Even/.virtualenvs/django/bin/uwsgi
chdir() to /usr/Even/projects/blogproject
your processes number limit is 1024
your memory page size is 4096 bytes
detected max file descriptor number: 4096
lock engine: pthread robust mutexes
thunder lock: disabled (you can enable it with --thunder-lock)
uwsgi socket 0 bound to TCP address 45.62.126.57:8080 fd 3
Python version: 3.6.1 (default, Apr 14 2017, 22:28:18)  [GCC 4.4.7 20120313 (Red Hat 4.4.7-17)]
Python main interpreter initialized at 0x22962b0
python threads support enabled
your server socket listen backlog is limited to 100 connections
your mercy for graceful operations on workers is 60 seconds
mapped 416880 bytes (407 KB) for 8 cores
*** Operational MODE: preforking+threaded ***
DEBUG  2018-09-18 14:11:24,297  base 7916  140635082278848  Configuring Raven for host: https://sentry.io
WSGI app 0 (mountpoint='') ready in 1 seconds on interpreter 0x22962b0 pid: 7916 (default app)
*** uWSGI is running in multiple interpreter mode ***
spawned uWSGI master process (pid: 7916)
spawned uWSGI worker 1 (pid: 7938, cores: 2)
spawned uWSGI worker 2 (pid: 7939, cores: 2)
spawned uWSGI worker 3 (pid: 7940, cores: 2)
spawned uWSGI worker 4 (pid: 7941, cores: 2)
